[
  {
    "hash": "5356807444c431f9b14ca37b5db4aeb9ef09a476",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-07-29T08:32:23+01:00",
    "message": "url change",
    "diff": "@@ -76,7 +76,7 @@ const ScannerBoard = () => {\n       setScanResult(null);\n \n       try {\n-        const response = await axios.post(\"https://cautious-anne-corinne-yemi-21a9f9d2.koyeb.app/scan_repo/\", {\n+        const response = await axios.post(\"http://127.0.0.1:8000/scan_repo/\", {\n           repo_url: repolink,\n         },{\n         headers: {\n",
    "embedding": [
      -0.023525087162852287,
      0.0835360437631607,
      -0.05519463121891022,
      -0.031675271689891815,
      0.012611719779670238,
      -0.0664745345711708,
      -0.05332688242197037,
      0.005241542123258114,
      -0.03251296654343605,
      -0.04240061715245247,
      -0.023784581571817398,
      -0.024336302652955055,
      -0.004996830131858587,
      0.03633219376206398,
      -0.10838688164949417,
      -0.009140213951468468,
      -0.044435497373342514,
      -0.05525825172662735,
      0.06770548224449158,
      0.0105989258736372,
      0.007419624365866184,
      0.03497648611664772,
      0.029069820418953896,
      -0.02741236239671707,
      -0.018089046701788902,
      -0.02857011742889881,
      -0.02750101126730442,
      -0.0011250299867242575,
      -0.04214479774236679,
      -0.03664679080247879,
      0.058455940335989,
      0.012669519521296024,
      -0.028557242825627327,
      -0.03204542025923729,
      0.019906850531697273,
      0.0633520856499672,
      -0.004254581406712532,
      -0.07262986898422241,
      0.029274675995111465,
      0.0028837162535637617,
      0.09891600906848907,
      0.09415637701749802,
      -0.01662701554596424,
      0.005364979617297649,
      0.030413685366511345,
      -0.001541539211757481,
      0.013699699193239212,
      -0.04739711433649063,
      0.027819190174341202,
      -0.02291131392121315,
      -0.07321134209632874,
      -0.09908909350633621,
      -0.018590131774544716,
      0.001295306719839573,
      -0.0838954895734787,
      0.010057881474494934,
      -0.09520161896944046,
      0.06315820664167404,
      0.06412269175052643,
      -0.06587404757738113,
      0.08737854659557343,
      -0.07488834857940674,
      0.049746908247470856,
      0.0075873034074902534,
      0.021618597209453583,
      -0.016148461028933525,
      -0.05165383592247963,
      0.024785416200757027,
      -0.02985718846321106,
      0.01574588567018509,
      -0.0009621909121051431,
      0.045406222343444824,
      0.10305990278720856,
      0.037333399057388306,
      0.00817037746310234,
      -0.0317692756652832,
      0.0017975096125155687,
      0.02829592302441597,
      0.068867526948452,
      -0.011409054510295391,
      0.030631063506007195,
      -0.07505665719509125,
      -0.02969931811094284,
      0.08333888649940491,
      -0.0068783690221607685,
      0.05401686206459999,
      0.02910572662949562,
      -0.029466642066836357,
      0.018581023439764977,
      -0.049394480884075165,
      0.027709733694791794,
      -0.026549112051725388,
      -0.04215380921959877,
      -0.04288000240921974,
      -0.02924489416182041,
      -0.015941886231303215,
      0.0068078176118433475,
      0.023799290880560875,
      -0.0411485992372036,
      0.06324251741170883,
      0.11451795697212219,
      -0.0006898855208419263,
      0.04231228306889534,
      -0.022138211876153946,
      -0.038624245673418045,
      -0.03628293052315712,
      0.039827167987823486,
      0.08452341705560684,
      -0.03588125854730606,
      0.09619227051734924,
      0.02309473045170307,
      0.02374388463795185,
      0.06263447552919388,
      -0.03355272486805916,
      -0.04724721983075142,
      -0.008917909115552902,
      0.03345571830868721,
      0.003502895589917898,
      0.024787941947579384,
      -0.058056797832250595,
      0.06649759411811829,
      -0.02996489778161049,
      -0.06458164006471634,
      -0.10723669826984406,
      -0.0029681543819606304,
      0.002934372751042247,
      0.0603918619453907,
      3.462826727291974e-33,
      0.0364094078540802,
      0.08416738361120224,
      0.037726644426584244,
      -0.07541917264461517,
      0.0233968123793602,
      -0.08630212396383286,
      0.016559094190597534,
      0.048866353929042816,
      -0.07601319253444672,
      -0.03531686216592789,
      -0.057533688843250275,
      -0.021325768902897835,
      0.06496768444776535,
      -0.004312093835324049,
      -0.08155376464128494,
      0.06153029575943947,
      0.012115837074816227,
      0.0019294983940199018,
      -0.023667389526963234,
      0.04668671265244484,
      -0.041405633091926575,
      -0.06147940084338188,
      0.0029324479401111603,
      -0.018092824146151543,
      0.0308116115629673,
      0.0031357707921415567,
      0.02562415413558483,
      0.013102935627102852,
      -0.11552901566028595,
      -0.031167730689048767,
      0.03142859786748886,
      0.13365685939788818,
      -0.010014763101935387,
      0.06508009135723114,
      -0.011340970173478127,
      -0.02486049383878708,
      0.04174872487783432,
      0.027338681742548943,
      -0.08985792845487595,
      -0.05239404737949371,
      0.05955241248011589,
      0.01143079623579979,
      -0.04719943553209305,
      0.07239111512899399,
      0.038067352026700974,
      -0.03931928426027298,
      -0.01821473427116871,
      -0.039588309824466705,
      0.05605311319231987,
      -0.00019813748076558113,
      -0.07652376592159271,
      0.009959528222680092,
      -0.006665138993412256,
      -0.07838016748428345,
      0.04711807891726494,
      -0.024259580299258232,
      -0.03244185820221901,
      0.01285682711750269,
      -0.030259856954216957,
      -0.06547913700342178,
      0.053458526730537415,
      -0.011445735581219196,
      0.05969366431236267,
      -0.009123004041612148,
      -0.056282106786966324,
      0.062316346913576126,
      -0.07949954271316528,
      0.010207504965364933,
      -0.017726875841617584,
      0.06154688447713852,
      -0.05188120901584625,
      -0.002974002854898572,
      -0.020656725391745567,
      -0.01696689799427986,
      -0.10185245424509048,
      0.01886630430817604,
      -0.03205754607915878,
      -0.023536622524261475,
      0.04512883350253105,
      0.0040808795019984245,
      0.07560494542121887,
      -0.08110996335744858,
      -0.04288488253951073,
      0.05817133188247681,
      0.0035634473897516727,
      0.05264662951231003,
      0.011171616613864899,
      0.041421111673116684,
      0.0070164804346859455,
      0.11957494169473648,
      0.027453623712062836,
      -0.0065794093534350395,
      -0.06252184510231018,
      -0.0037017064169049263,
      0.040706854313611984,
      -3.9705352270395974e-33,
      0.029040196910500526,
      -0.05125762149691582,
      -0.05725684016942978,
      0.055547792464494705,
      -0.09243488311767578,
      -0.006946292240172625,
      0.08396466821432114,
      0.04673701524734497,
      0.05590425804257393,
      0.03285851702094078,
      0.02060687728226185,
      0.023063505068421364,
      0.04981612414121628,
      -0.06851451843976974,
      -0.026356391608715057,
      0.03827936574816704,
      -0.0414968878030777,
      -0.021549010649323463,
      0.03756338357925415,
      -0.07643549144268036,
      0.024251442402601242,
      0.09978091716766357,
      -0.06824269890785217,
      0.05618517845869064,
      -0.04325751215219498,
      0.03804190084338188,
      0.09054292738437653,
      -0.04483744874596596,
      -0.025350335985422134,
      -0.020770711824297905,
      0.01941555179655552,
      -0.056169312447309494,
      -0.049735020846128464,
      0.12692482769489288,
      -0.023567546159029007,
      0.07922288030385971,
      0.057682864367961884,
      0.0590330995619297,
      0.04368465021252632,
      -0.001589206513017416,
      -0.02765418030321598,
      -0.004221491981297731,
      0.01418393012136221,
      0.05628485605120659,
      0.08477212488651276,
      -0.08614377677440643,
      0.028438029810786247,
      0.04710816219449043,
      0.01844448782503605,
      -0.04351082444190979,
      -0.003353832056745887,
      -0.05582679808139801,
      -0.03239777311682701,
      -0.03206407278776169,
      -0.018884923309087753,
      0.033235471695661545,
      -0.08356983214616776,
      0.006552554201334715,
      -0.058206912130117416,
      0.012579303234815598,
      -0.03971040993928909,
      -0.08700694143772125,
      -0.07723459601402283,
      0.051399245858192444,
      0.015618293546140194,
      -0.028697578236460686,
      -0.0769837498664856,
      0.011527357622981071,
      0.047122519463300705,
      0.04389666020870209,
      0.01007005199790001,
      0.05860774591565132,
      0.04598918557167053,
      -0.053175125271081924,
      0.10227080434560776,
      -0.017728159204125404,
      -0.03426055610179901,
      0.03433177247643471,
      -0.011274730786681175,
      0.06167211756110191,
      -0.03904607519507408,
      0.024654114618897438,
      0.01978045329451561,
      0.034482404589653015,
      0.030587418004870415,
      0.10004886239767075,
      -0.04123317077755928,
      0.044424448162317276,
      -0.0536903515458107,
      -0.06459653377532959,
      0.0631231814622879,
      -0.0492921844124794,
      -0.09968207031488419,
      -0.04666374251246452,
      -0.05099944397807121,
      -4.541316300787912e-08,
      0.03434537351131439,
      -0.0024535255506634712,
      -0.052716221660375595,
      0.02419881522655487,
      0.03291606530547142,
      0.05177978426218033,
      0.0573485903441906,
      -0.059576984494924545,
      0.016518039628863335,
      0.012567015364766121,
      -0.10670185834169388,
      0.03422360494732857,
      0.07570251077413559,
      0.033542972058057785,
      -0.005610339809209108,
      -0.05871491879224777,
      -0.030320730060338974,
      0.06692269444465637,
      -0.02783094346523285,
      -0.043542083352804184,
      0.003244046587496996,
      -0.07943396270275116,
      -0.027426958084106445,
      0.025837015360593796,
      0.08655577152967453,
      -0.06274086982011795,
      0.04417002573609352,
      0.0880143940448761,
      -0.0719389095902443,
      -0.021121859550476074,
      -0.06803790479898453,
      -0.018163243308663368,
      0.0020990490447729826,
      -0.04187697172164917,
      0.04292057454586029,
      0.01266507338732481,
      0.07147636264562607,
      0.04286448657512665,
      0.05370204523205757,
      -0.03974846005439758,
      0.009599422104656696,
      -0.03967563435435295,
      -0.016101906076073647,
      0.00681247329339385,
      -0.19148263335227966,
      0.03274143114686012,
      0.03918220475316048,
      0.05179041624069214,
      0.07970103621482849,
      -0.04085458070039749,
      0.09652341902256012,
      -0.056109655648469925,
      0.012063120491802692,
      -0.012299899943172932,
      -0.0065715741366147995,
      -0.022418072447180748,
      0.0026162914000451565,
      -0.11290643364191055,
      -0.0021320583764463663,
      0.07951556146144867,
      0.12710914015769958,
      -0.0663505420088768,
      0.007367095910012722,
      -0.027384117245674133
    ]
  },
  {
    "hash": "26cfe5095ec077a86fbb77246ff93b9de9400e94",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-07-26T22:03:03+01:00",
    "message": "json error",
    "diff": "@@ -76,16 +76,13 @@ const ScannerBoard = () => {\n       setScanResult(null);\n \n       try {\n-        const response = await axios.post(\"http://127.0.0.1:8000/scan_repo/\", {\n+        // Remove the mock response and use the actual API call\n+        const response = await axios.post(\"https://cautious-anne-corinne-yemi-21a9f9d2.koyeb.app/scan_repo/\", {\n           repo_url: repolink,\n-        },{\n-        headers: {\n-    \"Content-Type\": \"application/json\"\n-        }\n-  },);\n+        });\n \n         console.log(\"Scan successfuldd:\", response);\n-        setScanResult(response.data, repolink);\n+        setScanResult(response.data);\n         // if (response.data.report && response.data.report.startsWith(\"=====\")) {\n         //   setScanResult(response.data.report);\n         // } else setError(response.data.report);\n",
    "embedding": [
      -0.05824342370033264,
      0.07249733805656433,
      -0.07038845866918564,
      -0.012113221921026707,
      0.016105201095342636,
      -0.07496865838766098,
      -0.0477139875292778,
      0.03315933048725128,
      -0.033725664019584656,
      -0.05334346741437912,
      -0.011161556467413902,
      -0.027284923940896988,
      0.019427452236413956,
      0.06792837381362915,
      -0.03449089825153351,
      -0.03864070400595665,
      0.02295350283384323,
      -0.09209586679935455,
      0.03053422085940838,
      -0.003460849169641733,
      0.050044093281030655,
      0.009096181020140648,
      0.0432131364941597,
      -0.03709079325199127,
      -0.030803043395280838,
      -0.04491683840751648,
      -0.04058365523815155,
      -0.0346069298684597,
      -0.07073050737380981,
      0.017316803336143494,
      0.055109210312366486,
      -0.003710959805175662,
      -0.02001223713159561,
      -0.03173310309648514,
      0.026448262855410576,
      0.07503199577331543,
      -0.002570672193542123,
      -0.06256511807441711,
      -0.004678281489759684,
      0.0009922878816723824,
      0.06879588216543198,
      0.10829160362482071,
      -0.029827341437339783,
      -0.013995193876326084,
      0.07868748158216476,
      -0.0735335424542427,
      -0.0031242934055626392,
      -0.06253218650817871,
      0.02007122151553631,
      0.04519137740135193,
      -0.06228511407971382,
      -0.0403386726975441,
      0.007122147362679243,
      0.022771697491407394,
      -0.07820411026477814,
      -0.006013039965182543,
      -0.08226871490478516,
      0.032443657517433167,
      0.04371409863233566,
      -0.014628536067903042,
      0.06971219927072525,
      -0.06052407622337341,
      0.035863954573869705,
      0.0068292622454464436,
      -0.00819870363920927,
      -0.010682904161512852,
      -0.0432484894990921,
      0.02287057600915432,
      -0.009098553098738194,
      -0.004820025991648436,
      0.021557791158556938,
      0.021186940371990204,
      0.09190452843904495,
      0.019727034494280815,
      -0.006239136680960655,
      -0.013295353390276432,
      0.013480961322784424,
      0.00266131479293108,
      0.07984187453985214,
      -0.006583753041923046,
      -0.010800017975270748,
      -0.07979787886142731,
      -0.06230887770652771,
      0.10366249829530716,
      -0.05465257540345192,
      0.0824405625462532,
      0.054939642548561096,
      -0.0016136461636051536,
      -0.0008512179483659565,
      -0.05199868604540825,
      0.03062073513865471,
      -0.012450631707906723,
      -0.09969668090343475,
      -0.011267928406596184,
      0.001474863733164966,
      -0.002808046294376254,
      0.024306727573275566,
      -0.020877860486507416,
      -0.0463484525680542,
      0.08571381121873856,
      0.10590292513370514,
      -0.010337824001908302,
      0.06368773430585861,
      -0.035825587809085846,
      -0.05288432911038399,
      -0.044471390545368195,
      0.022699251770973206,
      0.0012652099831029773,
      -0.05923336371779442,
      0.12378866970539093,
      0.025535723194479942,
      0.042211297899484634,
      0.017240962013602257,
      -0.01817074790596962,
      -0.007118748035281897,
      0.027767200022935867,
      0.024474414065480232,
      -0.039380136877298355,
      0.014356107451021671,
      -0.026663046330213547,
      0.10495340824127197,
      -0.022986717522144318,
      -0.03234276548027992,
      -0.04199320822954178,
      0.09789577126502991,
      0.01703798770904541,
      0.05687285214662552,
      2.8578030910016043e-33,
      0.03720515966415405,
      0.06351608037948608,
      0.050920985639095306,
      -0.02573227696120739,
      0.0403749905526638,
      -0.0980912372469902,
      0.04345833137631416,
      0.06524430960416794,
      -0.08163923770189285,
      -0.026006191968917847,
      -0.06548640131950378,
      -0.00032946784631349146,
      0.07602417469024658,
      -0.002100730547681451,
      -0.1030796691775322,
      0.09186678379774094,
      0.016689373180270195,
      -0.02214614860713482,
      -0.04077397659420967,
      0.06690913438796997,
      0.008031710051000118,
      -0.10947227478027344,
      0.03916577249765396,
      0.006961457896977663,
      0.010715470649302006,
      -0.03977517411112785,
      -0.0028510228730738163,
      0.059806939214468,
      -0.11351240426301956,
      -0.021653233096003532,
      0.03914165496826172,
      0.09394979476928711,
      -0.027590638026595116,
      0.08241540193557739,
      -0.04242703691124916,
      -0.03394094854593277,
      0.02607886493206024,
      0.03160957992076874,
      -0.09945502877235413,
      -0.033251162618398666,
      0.04347369447350502,
      0.021273337304592133,
      -0.0703725665807724,
      0.06191159039735794,
      0.06481440365314484,
      -0.08709843456745148,
      -0.02554229646921158,
      -0.04544834420084953,
      0.06053539738059044,
      0.000127848019474186,
      -0.07076530158519745,
      0.046965427696704865,
      0.015505061484873295,
      -0.06705542653799057,
      0.034177299588918686,
      -0.010625563561916351,
      0.0480620302259922,
      -0.01070235576480627,
      -0.039399974048137665,
      -0.07184174656867981,
      0.03603615239262581,
      -0.054591480642557144,
      0.024598535150289536,
      -0.005435965955257416,
      -0.06464136391878128,
      0.02387409843504429,
      -0.09639997035264969,
      -0.007480223663151264,
      -0.016563743352890015,
      0.02494710497558117,
      -0.032229550182819366,
      -0.0007621985860168934,
      -0.01084228791296482,
      -0.044242534786462784,
      -0.05981631949543953,
      -0.0003118870663456619,
      0.005607417318969965,
      0.03762559965252876,
      0.021198878064751625,
      0.04077423736453056,
      0.11430992186069489,
      -0.0849059447646141,
      -0.07503069192171097,
      0.08080689609050751,
      -0.006362294778227806,
      0.06014100834727287,
      0.03280606493353844,
      0.028199387714266777,
      0.01234366837888956,
      0.10487554967403412,
      -0.001617435016669333,
      0.04540412873029709,
      -0.07873809337615967,
      -0.020116379484534264,
      0.03215262293815613,
      -4.0246450687178705e-33,
      0.001210286864079535,
      -0.004581669811159372,
      -0.035897936671972275,
      0.014466625638306141,
      -0.040702514350414276,
      -0.04692401736974716,
      0.04902062565088272,
      0.06556639820337296,
      0.03952719643712044,
      0.02548951283097267,
      0.017623260617256165,
      -0.03784642368555069,
      0.0518462136387825,
      -0.05547666922211647,
      -0.03106118179857731,
      0.040040019899606705,
      -0.04008861631155014,
      -0.031472478061914444,
      0.05894989147782326,
      -0.035791024565696716,
      0.037359461188316345,
      0.08450960367918015,
      -0.036949966102838516,
      0.014599595218896866,
      -0.07605042308568954,
      -0.011144337244331837,
      0.028182048350572586,
      -0.02283548004925251,
      -0.056475475430488586,
      -0.004260761197656393,
      0.03712279722094536,
      -0.03701211139559746,
      -0.05189122259616852,
      0.07442677766084671,
      0.02519686333835125,
      0.02775689586997032,
      0.11318237334489822,
      0.05611759051680565,
      0.01957755722105503,
      -0.007120288442820311,
      0.014226039871573448,
      -0.028013862669467926,
      -0.017193537205457687,
      0.04395712539553642,
      0.05814838409423828,
      -0.08300784975290298,
      0.0387156642973423,
      0.053889550268650055,
      0.001992319943383336,
      -0.07978016138076782,
      -0.025152107700705528,
      -0.03748062998056412,
      -0.03753839433193207,
      -0.01490462850779295,
      -0.0036799870431423187,
      0.01603931188583374,
      -0.04815179482102394,
      -0.0077575864270329475,
      -0.06714540719985962,
      0.02636915259063244,
      -0.05419701337814331,
      -0.12377659976482391,
      -0.09370546787977219,
      0.017619973048567772,
      0.016991959884762764,
      -0.059166319668293,
      -0.039382319897413254,
      -0.0027633148711174726,
      0.08448510617017746,
      0.06127871200442314,
      -0.028770968317985535,
      0.07594654709100723,
      0.04819465056061745,
      -0.03379758819937706,
      0.11203279346227646,
      0.0013661826960742474,
      -0.06312211602926254,
      -0.022751908749341965,
      0.005047964863479137,
      0.055470824241638184,
      -0.01936333253979683,
      0.022699449211359024,
      -0.0020384362433105707,
      0.03761569410562515,
      0.062254056334495544,
      0.05758270248770714,
      -0.010557018220424652,
      0.047110822051763535,
      -0.056539010256528854,
      -0.057333480566740036,
      0.07271963357925415,
      -0.07749642431735992,
      -0.08621668815612793,
      -0.029536999762058258,
      -0.004620678722858429,
      -5.519818913057861e-08,
      0.023113969713449478,
      -0.0028033966664224863,
      -0.06687217205762863,
      0.027981024235486984,
      0.016258949413895607,
      0.05509915575385094,
      0.04392844811081886,
      -0.08057957887649536,
      0.030285770073533058,
      0.0016554163303226233,
      -0.10054238885641098,
      0.04113636910915375,
      0.03382091969251633,
      0.00887332670390606,
      0.019792167469859123,
      -0.06249510869383812,
      -0.030810562893748283,
      0.060162801295518875,
      -0.02135895937681198,
      -0.001728337025269866,
      0.024314237758517265,
      -0.06935381144285202,
      0.002042323350906372,
      0.0011719675967469811,
      0.07553541660308838,
      -0.006124397274106741,
      0.08815371245145798,
      0.07161180675029755,
      -0.06597937643527985,
      -0.039623815566301346,
      -0.09386404603719711,
      -0.04198681563138962,
      0.0012005377793684602,
      -0.045157741755247116,
      0.022386722266674042,
      -0.021896790713071823,
      0.12377960234880447,
      0.06855425983667374,
      0.051508743315935135,
      -0.024425901472568512,
      0.01695570908486843,
      0.024689562618732452,
      -0.0719255581498146,
      0.016514630988240242,
      -0.10771407186985016,
      0.014930077828466892,
      -0.013651393353939056,
      0.010262477211654186,
      0.08242180943489075,
      -0.05803380161523819,
      0.056731950491666794,
      -0.07883352786302567,
      0.00476449029520154,
      -0.0047407811507582664,
      -0.06634214520454407,
      -0.001525492174550891,
      -0.015007304027676582,
      -0.09668530523777008,
      -0.013110035099089146,
      0.08137373626232147,
      0.16780860722064972,
      -0.024117479100823402,
      -0.02658267877995968,
      -0.04594413936138153
    ]
  },
  {
    "hash": "6072216a956cb67f7cf92cbca008fda8cb2b16e8",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-07-13T16:55:04+01:00",
    "message": "repo update",
    "diff": "@@ -81,8 +81,9 @@ const ScannerBoard = () => {\n           repo_url: repolink,\n         });\n \n-        console.log(\"Scan successfuldd:\", response);\n+        console.log(\"Scan successful:\", response);\n         setScanResult(response.data);\n+\n         // if (response.data.report && response.data.report.startsWith(\"=====\")) {\n         //   setScanResult(response.data.report);\n         // } else setError(response.data.report);\n",
    "embedding": [
      -0.02015342377126217,
      0.032536450773477554,
      -0.10338214039802551,
      -0.006154912058264017,
      -0.029690558090806007,
      -0.03745404630899429,
      0.003353752428665757,
      0.00654331361874938,
      -0.026749026030302048,
      -0.006937126629054546,
      -0.0029996188823133707,
      0.05693025141954422,
      0.06242580711841583,
      0.03358731046319008,
      -0.12393423169851303,
      -0.022584835067391396,
      -0.04899927228689194,
      -0.02278430387377739,
      0.07007332146167755,
      -0.03188379108905792,
      0.012340663000941277,
      -0.013566752895712852,
      0.017710525542497635,
      -0.03762347251176834,
      -0.03990975022315979,
      0.02892836555838585,
      -0.062370337545871735,
      -0.05165047198534012,
      -0.09365475922822952,
      -0.05382421985268593,
      0.04083183780312538,
      -0.09520793706178665,
      -0.01790560968220234,
      -0.0014177458360791206,
      0.0045780823566019535,
      0.08953080326318741,
      -0.05474976450204849,
      -0.033156003803014755,
      -0.07428262382745743,
      0.04879192262887955,
      0.005953001789748669,
      0.07734066247940063,
      0.008067155256867409,
      0.007955817505717278,
      0.04209782928228378,
      -0.059000734239816666,
      -0.0675443708896637,
      -0.02577970176935196,
      0.015146303921937943,
      -0.001178456237539649,
      -0.031227005645632744,
      -0.019095851108431816,
      -0.024298440665006638,
      0.004068143665790558,
      -0.01809028722345829,
      0.03327830135822296,
      -0.01980314776301384,
      0.03725375980138779,
      0.03357776626944542,
      -0.038726430386304855,
      0.018006891012191772,
      -0.03713260591030121,
      0.03881777822971344,
      -0.011083370074629784,
      0.04949996992945671,
      0.00884956680238247,
      0.03731240704655647,
      0.018379755318164825,
      -0.016992365941405296,
      0.0203752052038908,
      -0.03985385224223137,
      0.045626405626535416,
      0.0780627429485321,
      -0.014088716357946396,
      -0.011343847960233688,
      -0.0226005706936121,
      -0.00012100716412533075,
      0.07681845873594284,
      0.09381575882434845,
      -0.039693012833595276,
      -0.020771441981196404,
      -0.08552399277687073,
      -0.008484545163810253,
      0.08915555477142334,
      -0.00511884456500411,
      0.07514328509569168,
      0.03431272506713867,
      0.00317318900488317,
      0.057569731026887894,
      -0.00295102596282959,
      0.0027643621433526278,
      0.0010665347799658775,
      -0.027914931997656822,
      0.019757665693759918,
      -0.07341121882200241,
      0.0152912437915802,
      0.031339727342128754,
      -0.06071699783205986,
      0.02183770015835762,
      0.025083603337407112,
      0.04903232306241989,
      -0.006442834623157978,
      0.05389440432190895,
      -0.053523335605859756,
      -0.05910586565732956,
      -0.07167282700538635,
      0.04137739539146423,
      0.04936710000038147,
      -0.057731758803129196,
      0.011117982678115368,
      0.045738786458969116,
      0.05461923032999039,
      0.044261083006858826,
      -0.031606145203113556,
      0.007060281466692686,
      0.010105512104928493,
      0.036064937710762024,
      0.005723254289478064,
      -0.03103482350707054,
      -0.02178744226694107,
      0.08231176435947418,
      -0.023353533819317818,
      -0.0260210782289505,
      -0.05768166482448578,
      0.03340589255094528,
      -0.00026539326063357294,
      0.08265937119722366,
      6.179806146078045e-34,
      0.03806746006011963,
      0.008456124924123287,
      -0.02729124389588833,
      -0.014246826991438866,
      0.011084015481173992,
      0.03941130265593529,
      -0.024792654439806938,
      0.05291936174035072,
      -0.06420160830020905,
      -0.01862097904086113,
      -0.0317421518266201,
      -0.0010945326648652554,
      0.032915033400058746,
      -0.010133760049939156,
      -0.10306145995855331,
      0.038121193647384644,
      0.027142982929944992,
      0.09140073508024216,
      -0.09298297762870789,
      0.009831846691668034,
      -0.02286558970808983,
      -0.08985896408557892,
      0.06545420736074448,
      0.005796537268906832,
      0.1089392602443695,
      0.013869022950530052,
      -0.026858914643526077,
      0.042603664100170135,
      -0.0687093585729599,
      -0.040723007172346115,
      0.0795508474111557,
      0.07648514211177826,
      -0.03239312022924423,
      0.07606513798236847,
      0.01490505039691925,
      -0.05401744320988655,
      0.043373700231313705,
      0.05942258983850479,
      -0.06188347563147545,
      -0.02377988025546074,
      0.08174944669008255,
      0.017394671216607094,
      -0.02988785319030285,
      0.0342436246573925,
      0.0912567526102066,
      -0.09259417653083801,
      -0.04893999919295311,
      -0.004041955340653658,
      0.04378026723861694,
      -0.007442356552928686,
      -0.03923262655735016,
      0.09099488705396652,
      -0.020024603232741356,
      -0.13909481465816498,
      -0.03816751018166542,
      0.00217325147241354,
      -0.0015088890213519335,
      0.01754668913781643,
      -0.04429372400045395,
      -0.07358910888433456,
      0.06654457747936249,
      0.020073406398296356,
      0.02269572764635086,
      -0.06253985315561295,
      -0.03342123329639435,
      0.013633341528475285,
      -0.03980204090476036,
      -0.004225005861371756,
      -0.009181397035717964,
      0.05136912688612938,
      -0.033231720328330994,
      -0.03377821668982506,
      0.038288459181785583,
      -0.0014497304800897837,
      -0.01667940430343151,
      0.002885480411350727,
      -0.0624968521296978,
      0.05872110277414322,
      0.01275423914194107,
      -0.06511014699935913,
      0.03215642273426056,
      -0.11379027366638184,
      -0.08472607284784317,
      0.04780680313706398,
      0.08224068582057953,
      0.10267198085784912,
      -0.005365736782550812,
      0.043498385697603226,
      -0.007827358320355415,
      0.16457240283489227,
      0.007883038371801376,
      0.07486075907945633,
      -0.09957745671272278,
      -0.019614165648818016,
      0.04129426181316376,
      -2.0306047775920835e-33,
      0.00184088503010571,
      -0.005152053665369749,
      -0.027560926973819733,
      0.029251208528876305,
      -0.057906486093997955,
      -0.08250798285007477,
      0.013743086718022823,
      0.060322485864162445,
      0.04927676543593407,
      0.03709433972835541,
      0.04645577445626259,
      0.00011295889999018982,
      -0.012003576382994652,
      -0.02848190627992153,
      -0.02413887158036232,
      0.07717461884021759,
      -0.04409230127930641,
      -0.020315587520599365,
      -0.03369361534714699,
      -0.033625297248363495,
      0.028048604726791382,
      0.048132725059986115,
      -0.0485905259847641,
      0.08843189477920532,
      -0.07462333887815475,
      0.03666209429502487,
      0.06420350819826126,
      -0.03082045540213585,
      -0.004537816159427166,
      -0.015264809131622314,
      0.03782689571380615,
      -0.012642896734178066,
      -0.04812400043010712,
      0.09405112266540527,
      0.03382038325071335,
      0.003821923630312085,
      0.12512469291687012,
      -0.014758347533643246,
      -0.01194237731397152,
      0.0694723054766655,
      0.04332893714308739,
      0.017467767000198364,
      -0.07636178284883499,
      0.056556422263383865,
      0.07520240545272827,
      -0.06236677244305611,
      0.0645667016506195,
      0.08933781087398529,
      -0.017547447234392166,
      -0.036434244364500046,
      -0.06671196967363358,
      -0.10963866114616394,
      0.004601022228598595,
      -0.048570677638053894,
      -0.04088958725333214,
      -0.019199831411242485,
      -0.014874202199280262,
      -0.016022078692913055,
      -0.07975728809833527,
      0.06204530596733093,
      -0.04366645961999893,
      -0.06868121027946472,
      -0.04297581687569618,
      0.000496337132062763,
      -0.0032146566081792116,
      0.015429127961397171,
      -0.01935672201216221,
      0.029734879732131958,
      0.10977283120155334,
      0.017948182299733162,
      0.039182309061288834,
      0.018606971949338913,
      0.06309598684310913,
      -0.10926645994186401,
      0.08018723130226135,
      0.001875805901363492,
      -0.03850555047392845,
      -0.019231803715229034,
      0.017183426767587662,
      0.06712228059768677,
      -0.028411637991666794,
      0.03510932996869087,
      0.03386332467198372,
      -0.0035144316498190165,
      0.0399935208261013,
      0.03972552344202995,
      -0.008645020425319672,
      0.015830429270863533,
      -0.024928495287895203,
      -0.0732889398932457,
      0.05132941156625748,
      -0.02700265496969223,
      -0.07010460644960403,
      -0.07601292431354523,
      0.018595796078443527,
      -4.5196845377404316e-08,
      -0.027190055698156357,
      0.012627034448087215,
      -0.038972001522779465,
      0.0038481405936181545,
      0.09350413829088211,
      -0.0004639456747099757,
      0.032960668206214905,
      0.006851583253592253,
      -0.06562162935733795,
      -0.03315669670701027,
      -0.03913348168134689,
      0.03350098058581352,
      0.05495372787117958,
      0.012494822032749653,
      0.09289086610078812,
      -0.04903468117117882,
      -0.005273198243230581,
      0.046602506190538406,
      -0.053404301404953,
      0.009572767652571201,
      0.012207039631903172,
      -0.06456674635410309,
      0.035550035536289215,
      0.03646783530712128,
      0.056315284222364426,
      -0.12951838970184326,
      0.08577301353216171,
      0.04486846178770065,
      -0.045073091983795166,
      -0.034568946808576584,
      -0.025775453075766563,
      -0.020414194092154503,
      -0.034649744629859924,
      -0.056549135595560074,
      0.012338938191533089,
      0.01775958389043808,
      0.15121221542358398,
      0.016816625371575356,
      0.058939166367053986,
      -0.009662178345024586,
      0.004491711035370827,
      0.01974978856742382,
      -0.02667159214615822,
      0.0446431003510952,
      -0.189061239361763,
      -0.016067272052168846,
      -0.018118135631084442,
      -0.0014958737883716822,
      0.06276923418045044,
      -0.09707076847553253,
      0.03391854092478752,
      -0.08195631206035614,
      0.0016136120539158583,
      -0.055157143622636795,
      -0.06233394891023636,
      -0.02721647545695305,
      0.04333638399839401,
      -0.09898749738931656,
      -0.012692457064986229,
      0.072109654545784,
      0.07817438244819641,
      -0.046095915138721466,
      0.01946445181965828,
      -0.03775572031736374
    ]
  },
  {
    "hash": "c4e9d7eb5d5c1177bde257f3a73c9453057eeadb",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-07-13T06:42:56+01:00",
    "message": "Merge branch 'main' of https://github.com/hyemiie/vyn_web_scanner",
    "diff": "@@ -1,55 +1,37 @@\n-This is the frontend repository for **Vyn**, an AI powered code vulnerability scanner. It's built with **Next.js** and consumes REST APIs from the Django backend to render vulnerability reports.\n+This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n \n-\ud83d\udd17 Live: [vyn-web-scanner.vercel.app](https://vyn-web-scanner.vercel.app)\n+## Getting Started\n \n+First, run the development server:\n \n----\n-\n-## \ud83d\ude80 What It Does\n-\n-- Loads and displays code scan results\n-- Connects to a backend API for vulnerability data\n-- Uses modern Next.js 14 features (`app/` directory, fast routing)\n-- Serves static assets and responsive pages\n-\n----\n-\n-## \ud83d\udee0\ufe0f Tech Stack used\n-\n-- **Framework**: Next.js 14\n-- **Language**: JavaScript (ES Modules)\n-- **Styling**: Tailwind CSS (optional, add if used)\n-- **Hosting**: [Vercel](https://vercel.com)\n-\n----\n+```bash\n+npm run dev\n+# or\n+yarn dev\n+# or\n+pnpm dev\n+# or\n+bun dev\n+```\n \n-## \u2699\ufe0f How to Run Locally\n+Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n \n-**Prerequisites**: Node.js \u2265 18\n+You can start editing the page by modifying `app/page.js`. The page auto-updates as you edit the file.\n \n-1. **Clone the repo**\n-   ```bash\n-   git clone https://github.com/hyemiie/vyn_web_scanner.git\n-   cd vyn_web_scanner\n+This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.\n \n-2. **Install dependencies**\n+## Learn More\n \n-```bash\n-npm install\n-# or yarn / pnpm / bun install\n-```\n+To learn more about Next.js, take a look at the following resources:\n \n-3. **Start the dev server**\n+- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n+- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n \n-```bash\n-npm run dev\n-```\n-once it starts running navigate to `http://localhost:3000` to view the application in your browser.\n+You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n \n-This frontend connects to the [Vyn Backend](https://github.com/hyemiie/vyn-web-demo), which processes scans and serves results via an API.\n+## Deploy on Vercel\n \n-## \ud83e\udd1d Connect \n-I'm always open to feedback and suggestions, you can reach me at;\n+The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n \n-GitHub: @hyemiie\n-Email: yemiojedapo1@gmail.com\n+Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.\n+# vyn_web_scanner\n",
    "embedding": [
      -0.08391587436199188,
      0.030347658321261406,
      -0.10940965265035629,
      -0.030076157301664352,
      0.06550702452659607,
      -0.035240914672613144,
      -0.12360266596078873,
      0.05054840072989464,
      -0.013336527161300182,
      -0.03992161527276039,
      0.020577671006321907,
      0.013634061440825462,
      0.027260154485702515,
      0.04428590461611748,
      -0.03858385235071182,
      0.027127256616950035,
      0.02186180278658867,
      0.04939495772123337,
      0.07573039084672928,
      -0.03886279836297035,
      -0.03697086498141289,
      0.11970818042755127,
      0.03720114007592201,
      -0.023214872926473618,
      -0.0664772242307663,
      0.016711676493287086,
      -0.07401056587696075,
      7.460358756361529e-05,
      -0.004035700112581253,
      0.014645691029727459,
      0.021807171404361725,
      -0.005906420759856701,
      -0.14152128994464874,
      0.023794425651431084,
      -0.030833832919597626,
      0.04912205785512924,
      0.03147932514548302,
      -0.07784146070480347,
      -0.0128175625577569,
      -0.019905459135770798,
      0.035627514123916626,
      0.045834071934223175,
      -0.08431658148765564,
      -0.03245674818754196,
      -0.03952939063310623,
      -0.13842248916625977,
      -0.08167161792516708,
      -0.11275220662355423,
      -0.038289159536361694,
      -0.07409980148077011,
      -0.09258943051099777,
      -0.09997117519378662,
      0.03304646536707878,
      -0.04029645025730133,
      -0.10011303424835205,
      0.006306344177573919,
      0.03152398392558098,
      -0.0029794112779200077,
      -0.049723654985427856,
      0.06274856626987457,
      0.09498830139636993,
      -0.014089949429035187,
      0.05776375159621239,
      0.03048982284963131,
      0.013591441325843334,
      -0.008185661397874355,
      -0.023813968524336815,
      0.07932257652282715,
      0.07270855456590652,
      -0.08145148307085037,
      -0.013057748787105083,
      0.029277795925736427,
      -0.01917746290564537,
      -0.08994267135858536,
      0.0013054945738986135,
      -0.04829816892743111,
      0.03023841790854931,
      0.09272192418575287,
      0.09575727581977844,
      -0.10310162603855133,
      -0.03786270692944527,
      -0.03692762926220894,
      -0.02480814792215824,
      0.133099764585495,
      -0.014496080577373505,
      -0.0018456208053976297,
      0.006728211883455515,
      0.08265465497970581,
      0.05613807588815689,
      -0.003158451057970524,
      0.06839974224567413,
      -0.06405309587717056,
      -0.056351229548454285,
      0.06704573333263397,
      0.007691360078752041,
      0.03704841062426567,
      0.04204452782869339,
      -0.008470346219837666,
      -0.015367111191153526,
      -0.008894982747733593,
      -0.026516325771808624,
      -0.11363250762224197,
      0.09831416606903076,
      -0.06860116869211197,
      0.04715441167354584,
      -0.03327244892716408,
      0.08752232044935226,
      -0.040305715054273605,
      0.021459508687257767,
      -0.06670451909303665,
      -0.003914889879524708,
      0.07641090452671051,
      0.0360209122300148,
      -0.055241454392671585,
      0.020463785156607628,
      0.026583096012473106,
      0.05698854848742485,
      0.04174094274640083,
      0.07385999709367752,
      0.03767592832446098,
      0.09896013140678406,
      0.058516353368759155,
      0.0013306899927556515,
      -0.02578120306134224,
      0.11642833799123764,
      -0.02116471529006958,
      -0.013532912358641624,
      1.986185050126417e-33,
      0.0882950946688652,
      0.0624685101211071,
      0.03072338178753853,
      0.013864233158528805,
      0.06591497361660004,
      0.0015745386481285095,
      0.010539907962083817,
      0.08124717324972153,
      -0.09858454763889313,
      0.024298815056681633,
      -0.06236271560192108,
      0.04825713485479355,
      0.023964056745171547,
      0.02752513997256756,
      -0.05727177858352661,
      -0.06754752993583679,
      0.01002109982073307,
      -0.0038941812235862017,
      -0.014561767689883709,
      0.029048990458250046,
      0.017347833141684532,
      -0.036569688469171524,
      0.014395696111023426,
      0.025956889614462852,
      0.02374759316444397,
      0.06560241430997849,
      -0.00895883422344923,
      0.0360526368021965,
      -0.05200750380754471,
      0.0351218581199646,
      -0.01376238465309143,
      0.03160249441862106,
      -0.042918410152196884,
      0.015234308317303658,
      -0.059799451380968094,
      -0.0024543546605855227,
      -0.03147582337260246,
      -0.02428629621863365,
      -0.05794127658009529,
      -0.028716985136270523,
      0.08721411228179932,
      0.027830669656395912,
      -0.06732957065105438,
      -0.034322332590818405,
      0.00300433486700058,
      -0.09290935099124908,
      -0.03843267261981964,
      0.039665576070547104,
      0.0742315724492073,
      0.014490782283246517,
      -0.08339422941207886,
      -0.03816873952746391,
      -0.06206659972667694,
      -0.013954529538750648,
      -0.04361759126186371,
      -0.0392492450773716,
      0.00895068608224392,
      -0.005642810370773077,
      0.006702112965285778,
      -0.008838769048452377,
      0.037424925714731216,
      -0.021093113347887993,
      -0.07305057346820831,
      0.00905563309788704,
      -0.003922550939023495,
      -0.043642476201057434,
      -0.01052189152687788,
      -0.011129249818623066,
      0.048199478536844254,
      0.032198164612054825,
      -0.06934618949890137,
      0.06914189457893372,
      0.0009236384066753089,
      -0.03995594009757042,
      0.016055619344115257,
      -0.06300867348909378,
      -0.040706098079681396,
      0.03223041445016861,
      0.0766458809375763,
      -0.028117893263697624,
      -0.037929240614175797,
      -0.01691686175763607,
      -0.04139941185712814,
      0.0380537286400795,
      0.049177274107933044,
      0.04227413609623909,
      0.02069549821317196,
      0.06146220862865448,
      -0.012574473395943642,
      0.0686778649687767,
      0.006094388198107481,
      -0.018229598179459572,
      0.04493515565991402,
      -0.0007543680840171874,
      -0.012520547956228256,
      -3.852209965685826e-33,
      -0.03821166604757309,
      -0.054951220750808716,
      -0.061053965240716934,
      0.023091085255146027,
      0.007793289143592119,
      -0.10718477517366409,
      0.01593289151787758,
      0.030971728265285492,
      0.02320375293493271,
      0.006263230461627245,
      0.006699212361127138,
      -0.040675196796655655,
      0.05640195682644844,
      -0.023776991292834282,
      0.018234485760331154,
      0.07590752840042114,
      -0.029842253774404526,
      -0.10217424482107162,
      0.1268315315246582,
      -0.06085088849067688,
      -0.023445401340723038,
      0.09388259798288345,
      -0.029953647404909134,
      -0.02062109485268593,
      -0.07324463129043579,
      -0.017154337838292122,
      0.0540916845202446,
      0.0011524006258696318,
      -0.06809677928686142,
      -0.0010839694878086448,
      0.031227631494402885,
      -0.0336344875395298,
      -0.041259896010160446,
      0.07446925342082977,
      0.013351540081202984,
      0.011279583908617496,
      0.052848830819129944,
      -0.03773040696978569,
      0.08014639467000961,
      -0.027163811028003693,
      0.08730438351631165,
      -0.024799251928925514,
      -0.044907718896865845,
      0.0006804343429394066,
      -0.05060676857829094,
      0.04372547194361687,
      -0.06805181503295898,
      0.05622805282473564,
      -0.023736663162708282,
      -0.0827774628996849,
      0.0175608042627573,
      -0.011414186097681522,
      -0.06092264875769615,
      -0.012009036727249622,
      -0.07518139481544495,
      -0.00733779463917017,
      0.007564882282167673,
      0.0014052512124180794,
      -0.06572408974170685,
      0.04854271560907364,
      0.011334100738167763,
      -0.05821630731225014,
      -0.02527112141251564,
      -0.04395882785320282,
      -0.070281021296978,
      -0.01215402688831091,
      -0.15255297720432281,
      0.060162436217069626,
      0.036265186965465546,
      -0.041347354650497437,
      -0.055215880274772644,
      0.041207171976566315,
      0.03493167459964752,
      -0.016422202810645103,
      0.0019642156548798084,
      -0.030202161520719528,
      -0.025663159787654877,
      -0.09828668087720871,
      0.06448545306921005,
      -0.003997610881924629,
      -0.06250576674938202,
      -0.004094353411346674,
      -0.020628243684768677,
      0.00024238138576038182,
      0.011257580481469631,
      0.036210715770721436,
      -0.016532160341739655,
      0.030532844364643097,
      -0.023888081312179565,
      -0.039746932685375214,
      -0.009004917927086353,
      0.039410918951034546,
      -0.06558197736740112,
      0.03553904965519905,
      0.09324171394109726,
      -5.7518832363712136e-08,
      0.04074319452047348,
      0.06623686850070953,
      -0.06426014006137848,
      0.006820873823016882,
      0.023705698549747467,
      0.04104015231132507,
      0.019897205755114555,
      0.10616067051887512,
      0.036928072571754456,
      0.08661375939846039,
      -0.0004427711828611791,
      -0.012054438702762127,
      0.05391165614128113,
      0.053077198565006256,
      -0.0232731644064188,
      0.06377220153808594,
      -0.0012045790208503604,
      0.017396965995430946,
      -0.023972049355506897,
      -0.054476212710142136,
      0.013384930789470673,
      -0.01397004071623087,
      0.011738779954612255,
      -0.03631536662578583,
      0.044472452253103256,
      0.0030162991024553776,
      0.04851793125271797,
      -0.006066779140383005,
      -0.0013895167503505945,
      -0.12154682725667953,
      -0.010263387113809586,
      -0.0063061947003006935,
      -0.0408286489546299,
      0.06219344586133957,
      -0.020067201927304268,
      0.0332532562315464,
      0.0061036283150315285,
      -0.02519298903644085,
      0.07386307418346405,
      0.057964224368333817,
      0.029594168066978455,
      -0.02905072085559368,
      -0.03353417292237282,
      0.01716485619544983,
      -0.08268772810697556,
      -0.07289829105138779,
      -0.007612911518663168,
      -0.042256806045770645,
      0.03781886026263237,
      -0.01652088575065136,
      0.032110635191202164,
      -0.07061512023210526,
      0.023029768839478493,
      0.049263644963502884,
      0.05128978565335274,
      0.03654015436768532,
      0.01214594580233097,
      -0.06383054703474045,
      0.013238153420388699,
      0.05071375146508217,
      0.06644723564386368,
      0.00408706720918417,
      0.06871127337217331,
      0.002407252322882414
    ]
  },
  {
    "hash": "61d44c66508f49fb66178290fd8b48dd1dc5c03b",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-07-13T06:42:15+01:00",
    "message": "url update",
    "diff": "@@ -3,20 +3,20 @@ import { LuArrowUpRight } from \"react-icons/lu\";\n \n export default function SubGithubCTA() {\n   const codeString = `\n-def calculate_expression():\n-    print(\"Simple Calculator\")\n-    user_input = input(\"Enter a math expression (e.g. 2 + 3 * 4): \")\n-    \n-    try:\n-        # WARNING: This is dangerous!\n-        result = eval(user_input)\n-        print(\"Result:\", result)\n-    except Exception as e:\n-        print(\"Invalid input:\", e)\n-\n-if __name__ == \"__main__\":\n-    calculate_expression()\n-`;\n+const companies = await expand({\n+  const dataset = await expand.dataset({\n+    sources: ['https://www.ycombinator.com/companies'],\n+    schema: Model('Company', {\n+      name: Expand.String,\n+      batch: Expand.String,\n+      url: Expand.String,\n+      industry: Expand.String,\n+    }),\n+    name: 'yc-companies-db',\n+  })\n+  \n+  const companies = await db.findMany('Company')\n+  `;\n \n   // Basic syntax highlighting\n   const highlightedCode = codeString\n@@ -12,7 +12,6 @@ import ScannerBoard from \"../scannerboard/page\";\n import TerminalBox from \"./TerminalBox\";\n import ThemeToggle from \"../themetoggle/ThemeToggle\";\n import '../globals.css'\n-import ThirdGithubCTA from \"../thirdgitcta/page\";\n \n export default function Home() {\n   const codeString = `\n@@ -36,12 +35,10 @@ const companies = await expand({\n         <div className=\"hero-container\">\n           <div className=\"hero-text\">\n             <h2>Vyn</h2>\n-            <div>\n-          \n-               Instantly finds security flaws and returns clear, actionable fixes.\n-              <br/>\n-              <p style={{fontWeight: \"200\", fontStyle:'italic'}}>No More Guesswork. Just Clear, AI-Backed Security</p>\n-            </div>\n+            <p>\n+              expand.ai instantly turns any website into a type-safe API you can\n+              rely on.\n+            </p>\n           </div>\n           <ul>\n              <li> <FaCheck\n@@ -51,7 +48,7 @@ const companies = await expand({\n                   fontWeight: \"100\",\n                 }}\n               />\n-              Reliable scanning infrastructure</li>\n+              Reliable scraping infrastructure</li>\n               <li>\n               <FaCheck\n                 style={{\n@@ -60,7 +57,7 @@ const companies = await expand({\n                   fontWeight: \"200\",\n                 }}\n               />{\" \"}\n-              Reduce security risks in production</li>\n+              High quality with back checking</li>\n                 <li> <FaCheck\n                 style={{\n                   color: \"#4A6FA5\",\n@@ -76,7 +73,7 @@ const companies = await expand({\n                   fontWeight: \"200\",\n                 }}\n               />{\" \"}\n-           AI-Powered Fixes</li>\n+           Instant API for any website</li>\n           </ul>\n         </div>\n         <div className=\"second-half\">\n@@ -109,7 +106,7 @@ const companies = await expand({\n       <Compatibility />\n       <GithubCTA />\n       <SubGithubCTA/>\n-      <ThirdGithubCTA/>\n+      <GithubCTA/>\n       <Footer/>\n \n     </div>\n@@ -23,7 +23,7 @@ const patrickHand = Patrick_Hand({\n \n \n export const metadata = {\n-  title: \"Vyn security scanner\",\n+  title: \"Create Next App\",\n   description: \"Generated by create next app\",\n };\n \n@@ -44,9 +44,9 @@ export default function RootLayout({ children }) {\n                   <a className=\"docs-link\">Read docs</a>\n                 </Link> */}\n \n-               <Link href=\"/scannerboard\" className=\"scan-link\">\n-  Try Vyn web\n-</Link>\n+                <Link href=\"/scannerboard\" passHref legacyBehavior>\n+                  <a className=\"scan-link\"> Try Vyn web</a>\n+                </Link>\n               </div>\n \n             </div>\n@@ -1,273 +1,244 @@\n-\"use client\";\n+\"use client\"\n \n-import React, { useState } from \"react\";\n-import {\n-  AlertTriangle,\n-  Shield,\n-  Code,\n-  FileText,\n-  Lightbulb,\n-  ChevronDown,\n-  ChevronUp,\n-  Github,\n-  TerminalIcon,\n-} from \"lucide-react\";\n-import \"./boards.css\";\n-import axios from \"axios\";\n-import \"../globals.css\";\n+import React, { useState } from 'react';\n+import { AlertTriangle, Shield, Code, FileText, Lightbulb, ChevronDown, ChevronUp, Github, TerminalIcon } from 'lucide-react';\n+import './boards.css';\n+import axios from 'axios';\n+import '../globals.css'\n \n const ScannerBoard = () => {\n-  const [repolink, setRepoLink] = useState(\"\");\n-  const [scanResult, setScanResult] = useState(null);\n-  const [loading, setLoading] = useState(false);\n-  const [error, setError] = useState(null);\n-\n-  const parseScanResult = (resultText) => {\n-    if (!resultText) return [];\n-\n-    const issues = [];\n-    const sections = resultText.split(\n-      \"==================================================\"\n-    );\n+    const [repolink, setRepoLink] = useState('');\n+    const [scanResult, setScanResult] = useState(null);\n+    const [loading, setLoading] = useState(false);\n+    const [error, setError] = useState(null);\n+\n+    // Parse the scan result text into structured data\n+    const parseScanResult = (resultText) => {\n+        if (!resultText) return [];\n+\n+        const issues = [];\n+        const sections = resultText.split('==================================================');\n+\n+        sections.forEach(section => {\n+            if (section.trim()) {\n+                const lines = section.split('\\n').filter(line => line.trim());\n+                const issue = {};\n+                let collectingSuggestion = false;\n+                let suggestionLines = [];\n+\n+                lines.forEach(line => {\n+                    if (line.includes('\u2192 Issue      :')) {\n+                        issue.title = line.replace('\u2192 Issue      :', '').trim();\n+                    } else if (line.includes('\u2192 File       :')) {\n+                        issue.file = line.replace('\u2192 File       :', '').trim();\n+                    } else if (line.includes('\u2192 Line       :')) {\n+                        issue.line = line.replace('\u2192 Line       :', '').trim();\n+                    } else if (line.includes('\u2192 Severity   :')) {\n+                        issue.severity = line.replace('\u2192 Severity   :', '').trim();\n+                    } else if (line.includes('\u2192 Confidence :')) {\n+                        issue.confidence = line.replace('\u2192 Confidence :', '').trim();\n+                    } else if (line.includes('\u2192 AI Suggestion:')) {\n+                        collectingSuggestion = true;\n+                        suggestionLines.push(line.replace('\u2192 AI Suggestion:', '').trim());\n+                    } else if (collectingSuggestion) {\n+                        suggestionLines.push(line);\n+                    }\n+                });\n \n-    sections.forEach((section) => {\n-      if (section.trim()) {\n-        const lines = section.split(\"\\n\").filter((line) => line.trim());\n-        const issue = {};\n-        let collectingSuggestion = false;\n-        let suggestionLines = [];\n+                if (suggestionLines.length > 0) {\n+                    issue.suggestion = suggestionLines.join('\\n').trim();\n+                }\n \n-        lines.forEach((line) => {\n-          if (line.includes(\"\u2192 Issue      :\")) {\n-            issue.title = line.replace(\"\u2192 Issue      :\", \"\").trim();\n-          } else if (line.includes(\"\u2192 File       :\")) {\n-            issue.file = line.replace(\"\u2192 File       :\", \"\").trim();\n-          } else if (line.includes(\"\u2192 Line       :\")) {\n-            issue.line = line.replace(\"\u2192 Line       :\", \"\").trim();\n-          } else if (line.includes(\"\u2192 Severity   :\")) {\n-            issue.severity = line.replace(\"\u2192 Severity   :\", \"\").trim();\n-          } else if (line.includes(\"\u2192 Confidence :\")) {\n-            issue.confidence = line.replace(\"\u2192 Confidence :\", \"\").trim();\n-          } else if (line.includes(\"\u2192 AI Suggestion:\")) {\n-            collectingSuggestion = true;\n-            suggestionLines.push(line.replace(\"\u2192 AI Suggestion:\", \"\").trim());\n-          } else if (collectingSuggestion) {\n-            suggestionLines.push(line);\n-          }\n+                if (issue.title) {\n+                    issues.push(issue);\n+                }\n+            }\n         });\n \n-        if (suggestionLines.length > 0) {\n-          issue.suggestion = suggestionLines.join(\"\\n\").trim();\n+        return issues;\n+    };\n+\n+    const scanrepo = async () => {\n+        if (repolink) {\n+            setLoading(true);\n+            setError(null);\n+            setScanResult(null);\n+\n+            try {\n+                // Remove the mock response and use the actual API call\n+                const response = await axios.post('https://vyn-web-demo.onrender.com/scan_repo/', {\n+                    repo_url: repolink\n+                });\n+                \n+                console.log('Scan successful:', response);\n+                setScanResult(response.data); // Store only the data part\n+            } catch (error) {\n+                console.error('Error scanning repo:', error);\n+                setError('Failed to scan the repository. Please try again.');\n+            } finally {\n+                setLoading(false);\n+            }\n+        } else {\n+            alert(\"Please enter a repository URL.\");\n         }\n-\n-        if (issue.title) {\n-          issues.push(issue);\n+    };\n+\n+    const getSeverityClass = (severity) => {\n+        switch (severity?.toUpperCase()) {\n+            case 'HIGH': return 'severity-high';\n+            case 'MEDIUM': return 'severity-medium';\n+            case 'LOW': return 'severity-low';\n+            default: return 'severity-default';\n         }\n-      }\n-    });\n-\n-    return issues;\n-  };\n-\n-  const scanrepo = async () => {\n-    if (repolink) {\n-      setLoading(true);\n-      setError(null);\n-      setScanResult(null);\n-\n-      try {\n-        // Remove the mock response and use the actual API call\n-        const response = await axios.post(\"https://cautious-anne-corinne-yemi-21a9f9d2.koyeb.app/scan_repo/\", {\n-          repo_url: repolink,\n-        });\n-\n-        console.log(\"Scan successful:\", response);\n-        setScanResult(response.data);\n-\n-        // if (response.data.report && response.data.report.startsWith(\"=====\")) {\n-        //   setScanResult(response.data.report);\n-        // } else setError(response.data.report);\n-      } catch (error) {\n-        console.error(\"Error scanning repo:\", error);\n-        setError('Failed to scan the repository. Please try again.');\n-      } finally {\n-        setLoading(false);\n-      }\n-    } else {\n-      alert(\"Please enter a repository URL.\");\n-    }\n-  };\n-\n-  const getSeverityClass = (severity) => {\n-    switch (severity?.toUpperCase()) {\n-      case \"HIGH\":\n-        return \"severity-high\";\n-      case \"MEDIUM\":\n-        return \"severity-medium\";\n-      case \"LOW\":\n-        return \"severity-low\";\n-      default:\n-        return \"severity-default\";\n-    }\n-  };\n-\n-  const getSeverityIcon = (severity) => {\n-    switch (severity?.toUpperCase()) {\n-      case \"HIGH\":\n-        return <AlertTriangle className=\"severity-icon-medium\" />;\n-      case \"MEDIUM\":\n-        return <Shield className=\"severity-icon-medium\" />;\n-      case \"LOW\":\n-        return <Shield className=\"severity-icon-small\" />;\n-      default:\n-        return <Shield className=\"severity-icon-small\" />;\n-    }\n-  };\n-\n-  const issues = scanResult ? parseScanResult(scanResult.report) : [];\n-\n-  const IssueCard = ({ issue, index }) => {\n-    const [isExpanded, setIsExpanded] = useState(false);\n-\n-    return (\n-      <div className=\"issue-card\">\n-        <div\n-          className=\"issue-header\"\n-          onClick={() => setIsExpanded(!isExpanded)}\n-        >\n-          <div className=\"issue-header-content\">\n-            <div className=\"issue-info\">\n-              <div className=\"issue-badges\">\n-                <span\n-                  className={`severity-badge ${getSeverityClass(\n-                    issue.severity\n-                  )}`}\n+    };\n+\n+    const getSeverityIcon = (severity) => {\n+        switch (severity?.toUpperCase()) {\n+            case 'HIGH': return <AlertTriangle className=\"severity-icon-medium\" />;\n+            case 'MEDIUM': return <Shield className=\"severity-icon-medium\" />;\n+            case 'LOW': return <Shield className=\"severity-icon-small\" />;\n+            default: return <Shield className=\"severity-icon-small\" />;\n+        }\n+    };\n+\n+    // Fix: Access scanResult.report directly since we're now storing response.data\n+    const issues = scanResult ? parseScanResult(scanResult.report) : [];\n+\n+    const IssueCard = ({ issue, index }) => {\n+        const [isExpanded, setIsExpanded] = useState(false);\n+        \n+        return (\n+            <div className=\"issue-card\">\n+                <div \n+                    className=\"issue-header\"\n+                    onClick={() => setIsExpanded(!isExpanded)}\n                 >\n-                  {getSeverityIcon(issue.severity)}\n-                  {issue.severity}\n-                </span>\n-                <span className=\"confidence-badge\">\n-                  <FileText className=\"confidence-icon\" />\n-                  {issue.confidence} Confidence\n-                </span>\n-              </div>\n-              <h3 className=\"issue-title\">{issue.title}</h3>\n-              <div className=\"issue-details\">\n-                <span className=\"issue-file\">\n-                  <Code className=\"file-icon\" />\n-                  {issue.file?.split(\"\\\\\").pop() || \"Unknown file\"}\n-                </span>\n-                <span>Line {issue.line}</span>\n-              </div>\n-            </div>\n-            <div className=\"chevron-icon\">\n-              {isExpanded ? <ChevronUp /> : <ChevronDown />}\n+                    <div className=\"issue-header-content\">\n+                        <div className=\"issue-info\">\n+                            <div className=\"issue-badges\">\n+                                <span className={`severity-badge ${getSeverityClass(issue.severity)}`}>\n+                                    {getSeverityIcon(issue.severity)}\n+                                    {issue.severity}\n+                                </span>\n+                                <span className=\"confidence-badge\">\n+                                    <FileText className=\"confidence-icon\" />\n+                                    {issue.confidence} Confidence\n+                                </span>\n+                            </div>\n+                            <h3 className=\"issue-title\">{issue.title}</h3>\n+                            <div className=\"issue-details\">\n+                                <span className=\"issue-file\">\n+                                    <Code className=\"file-icon\" />\n+                                    {issue.file?.split('\\\\').pop() || 'Unknown file'}\n+                                </span>\n+                                <span>Line {issue.line}</span>\n+                            </div>\n+                        </div>\n+                        <div className=\"chevron-icon\">\n+                            {isExpanded ? <ChevronUp /> : <ChevronDown />}\n+                        </div>\n+                    </div>\n+                </div>\n+                \n+                {isExpanded && (\n+                    <div className=\"issue-expanded\">\n+                        <div className=\"suggestion-section\">\n+                            <h4 className=\"suggestion-title\">\n+                                <Lightbulb className=\"suggestion-icon\" />\n+                                AI Suggestion\n+                            </h4>\n+                            <div className=\"suggestion-content\">\n+                                {issue.suggestion}\n+                            </div>\n+                        </div>\n+                        <div className=\"full-path\">\n+                            Full path: {issue.file}\n+                        </div>\n+                    </div>\n+                )}\n             </div>\n-          </div>\n-        </div>\n+        );\n+    };\n \n-        {isExpanded && (\n-          <div className=\"issue-expanded\">\n-            <div className=\"suggestion-section\">\n-              <h4 className=\"suggestion-title\">\n-                <Lightbulb className=\"suggestion-icon\" />\n-                AI Suggestion\n-              </h4>\n-              <div className=\"suggestion-content\">{issue.suggestion}</div>\n-            </div>\n-            <div className=\"full-path\">Full path: {issue.file}</div>\n-          </div>\n-        )}\n-      </div>\n-    );\n-  };\n-\n-  return (\n-    <div className=\"scanner-container\">\n-      <div className=\"scanner-wrapper\">\n-        <div className=\"scanner-header\">\n-          {/* <h2 className=\"scanner-title\">\n+    return (\n+        <div className=\"scanner-container\">\n+            <div className=\"scanner-wrapper\">\n+                <div className=\"scanner-header\">\n+                    {/* <h2 className=\"scanner-title\">\n                         <Shield className=\"scanner-title-icon\" />\n                         Security Scanner\n                     </h2> */}\n-\n-          <div className=\"scanner-form\">\n-            <input\n-              className=\"scanner-input\"\n-              placeholder=\"Paste public git repository URL\"\n-              value={repolink}\n-              onChange={(e) => setRepoLink(e.target.value)}\n-            />\n-            <button\n-              onClick={scanrepo}\n-              disabled={loading}\n-              className=\"scanner-button\"\n-            >\n-              {loading ? <TerminalIcon /> : <Github />}\n-            </button>\n-          </div>\n-\n-          {loading && (\n-            <div className=\"loading-indicator\">\n-              <div className=\"loading-spinner\"></div>\n-              <span>Scanning repository...</span>\n-            </div>\n-          )}\n-\n-          {error && <div className=\"error-message\">{error}</div>}\n-        </div>\n-\n-        {scanResult && (\n-          <div className=\"results-container\">\n-            <div className=\"results-header\">\n-              {/* <h3 className=\"results-title\">Scan Results</h3> */}\n-              <div className=\"results-summary\">\n-                <span className=\"results-count\">\n-                  {issues.length} issue{issues.length !== 1 ? \"s\" : \"\"} found\n-                </span>\n-                <div className=\"severity-badges\">\n-                  {[\"HIGH\", \"MEDIUM\", \"LOW\"].map((severity) => {\n-                    const count = issues.filter(\n-                      (issue) => issue.severity === severity\n-                    ).length;\n-                    if (count > 0) {\n-                      return (\n-                        <span\n-                          key={severity}\n-                          className={`severity-badge ${getSeverityClass(\n-                            severity\n-                          )}`}\n+                    \n+                    <div className=\"scanner-form\">\n+                        <input\n+                            className=\"scanner-input\"\n+                            placeholder=\"Paste public git repository URL\"\n+                            value={repolink}\n+                            onChange={(e) => setRepoLink(e.target.value)}\n+                        />\n+                        <button \n+                            onClick={scanrepo}\n+                            disabled={loading}\n+                            className=\"scanner-button\"\n                         >\n-                          {count} {severity}\n-                        </span>\n-                      );\n-                    }\n-                    return null;\n-                  })}\n+                            {loading ? <TerminalIcon/> : <Github/>}\n+                        </button>\n+                    </div>\n+\n+                    {loading && (\n+                        <div className=\"loading-indicator\">\n+                            <div className=\"loading-spinner\"></div>\n+                            <span>Scanning repository...</span>\n+                        </div>\n+                    )}\n+\n+                    {error && (\n+                        <div className=\"error-message\">\n+                            {error}\n+                        </div>\n+                    )}\n                 </div>\n-              </div>\n-            </div>\n \n-            {issues.length > 0 ? (\n-              <div>\n-                {issues.map((issue, index) => (\n-                  <IssueCard key={index} issue={issue} index={index} />\n-                ))}\n-              </div>\n-            ) : (\n-              <div className=\"no-issues\">\n-                <Shield className=\"no-issues-icon\" />\n-                <p className=\"no-issues-title\">No security issues found!</p>\n-                <p className=\"no-issues-subtitle\">\n-                  Your repository appears to be secure.\n-                </p>\n-              </div>\n-            )}\n-          </div>\n-        )}\n-      </div>\n-    </div>\n-  );\n+                {scanResult && (\n+                    <div className=\"results-container\">\n+                        <div className=\"results-header\">\n+                            {/* <h3 className=\"results-title\">Scan Results</h3> */}\n+                            <div className=\"results-summary\">\n+                                <span className=\"results-count\">\n+                                    {issues.length} issue{issues.length !== 1 ? 's' : ''} found\n+                                </span>\n+                                <div className=\"severity-badges\">\n+                                    {['HIGH', 'MEDIUM', 'LOW'].map(severity => {\n+                                        const count = issues.filter(issue => issue.severity === severity).length;\n+                                        if (count > 0) {\n+                                            return (\n+                                                <span key={severity} className={`severity-badge ${getSeverityClass(severity)}`}>\n+                                                    {count} {severity}\n+                                                </span>\n+                                            );\n+                                        }\n+                                        return null;\n+                                    })}\n+                                </div>\n+                            </div>\n+                        </div>\n+                        \n+                        {issues.length > 0 ? (\n+                            <div>\n+                                \n+                            </div>\n+                        ) : (\n+                            <div className=\"no-issues\">\n+                                <Shield className=\"no-issues-icon\" />\n+                                <p className=\"no-issues-title\">No security issues found!</p>\n+                                <p className=\"no-issues-subtitle\">Your repository appears to be secure.</p>\n+                            </div>\n+                        )}\n+                    </div>\n+                )}\n+            </div>\n+        </div>\n+    );\n };\n \n-export default ScannerBoard;\n+export default ScannerBoard;\n\\ No newline at end of file\n@@ -3,22 +3,19 @@ import { LuArrowUpRight } from \"react-icons/lu\";\n \n export default function SubGithubCTA() {\n   const codeString = `\n-import sqlite3\n-\n-def login():\n-    conn = sqlite3.connect('users.db')\n-    cursor = conn.cursor()\n-\n-    username = input(\"Enter your username: \")\n-    password = input(\"Enter your password: \")\n-\n-    query = f\"SELECT * FROM users WHERE username = '{username}' AND password = '{password}'\"\n-    print(\"Running query:\", query)\n-    cursor.execute(query)\n-\n- \n-\n-\n+const companies = await expand({\n+  const dataset = await expand.dataset({\n+    sources: ['https://www.ycombinator.com/companies'],\n+    schema: Model('Company', {\n+      name: Expand.String,\n+      batch: Expand.String,\n+      url: Expand.String,\n+      industry: Expand.String,\n+    }),\n+    name: 'yc-companies-db',\n+  })\n+  \n+  const companies = await db.findMany('Company')\n   `;\n \n   // Basic syntax highlighting\n@@ -1,111 +0,0 @@\n-.subcta-container {\n-  padding: 3rem 1rem;\n-  background-color: var(--background-color);\n-  background-image: var(--background-image);\n-\n-\n-}\n-\n-.first-subcta-content {\n-  display: flex;\n-  flex-direction: column;\n-  gap: 2rem;\n-  max-width: 90%;\n-  margin: 0 auto;\n-}\n-\n-.subcta-text h2 {\n-  font-size: 3rem;\n-  color: var(--primary-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.subcta-text p {\n-  font-size: 1.2rem;\n-  color: var(--text-color);\n-  margin-bottom: 1.5rem;\n-  line-height: 1.5;\n-  /* padding: 20px; */\n-}\n-\n-.subcta-btn {\n-  background-color: var(--terminal-bg);\n-  color: var(--output-color);\n-  border: 1px solid #435156;\n-  padding: 0.75rem 1.5rem;\n-  font-size: 1rem;\n-  border-radius: 10px;\n-  cursor: pointer;\n-  display: inline-flex;\n-  align-items: center;\n-  gap: 0.5rem;\n-  transition: all 0.3s ease;\n-  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-\n-}\n-\n-.subcta-btn:hover {\n-  background-color: var(--primary-color);\n-  color: #fff;\n-}\n-.subcta-code{\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-}\n-\n-\n-.subcta-code pre {\n-  background-color: var(--terminal-bg);\n-  color: var(--text-color);\n-  border-radius: 8px;\n-  padding: 0.75rem 1rem;\n-  font-size: 0.85rem;\n-  overflow-x: auto;\n-  max-height: 300px;\n-  max-width: 400px;\n-  min-width: 200px;\n-  line-height: 1.4;\n-  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n-  border: 1px solid rgba(255, 255, 255, 0.08);\n-  transition: box-shadow 0.3s ease;\n-}\n-\n-.subcta-code pre:hover {\n-  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);\n-}\n-\n-.code-keyword {\n-  color: #c586c0;\n-  font-weight: 600;\n-}\n-\n-.code-string {\n-  color: #ce9178;\n-}\n-\n-.code-comment {\n-  color: #6a9955;\n-}\n-\n-/* Responsive layout */\n-@media (min-width: 768px) {\n-  .first-subcta-content {\n-    flex-direction: row;\n-    align-items: center;\n-    padding: 20px;\n-  }\n-\n-  .subcta-text, .subcta-code {\n-    flex: 1;\n-  }\n-\n-  .subcta-text  {\n-\n-}\n-\n-  .subcta-code pre {\n-    height: auto;\n-    \n-  }\n-}\n@@ -1,48 +0,0 @@\n-import \"./cta.css\";\n-import { LuArrowUpRight } from \"react-icons/lu\";\n-\n-export default function ThirdGithubCTA() {\n-  const codeString = `\n-import os\n-\n-def delete_file():\n-    print(\"Delete a file from the system\")\n-    filename = input(\"Enter the filename to delete: \")\n-\n-    # Unsafe: input directly embedded in shell command\n-    command = f\"rm {filename}\"\n-    print(f\"Running: {command}\")\n-    os.system(command)\n-\n-if __name__ == \"__main__\":\n-    delete_file()\n-`;\n-\n-  // Basic syntax highlighting\n-  const highlightedCode = codeString\n-    .replace(/(const|await|new|return)/g, '<span class=\"code-keyword\">$1</span>')\n-    .replace(/(['\"].*?['\"])/g, '<span class=\"code-string\">$1</span>')\n-    .replace(/(\\/\\/.*?$)/gm, '<span class=\"code-comment\">$1</span>');\n-\n-  return (\n-    <div className=\"subcta-container\">\n-      <div className=\"first-subcta-content\">\n-        <div className=\"subcta-text\">\n-          <h2>03</h2>\n-          <p>\n-Modern development moves fast. Security shouldn\u2019t slow you down. Our AI-enhanced tool fits into your existing workflow, scanning every commit and pull request for subtle vulnerabilities , so you never have to trade speed for safety.          </p>\n-          <button className=\"subcta-btn\">\n-            <LuArrowUpRight size={14} color=\"#e27e8a\" />\n-            Get Custom Documentation\n-          </button>\n-        </div>\n-\n-        <div className=\"subcta-code\">\n-          <pre>\n-            <code dangerouslySetInnerHTML={{ __html: highlightedCode }} />\n-          </pre>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n",
    "embedding": [
      -0.04709852859377861,
      0.03480137512087822,
      0.028068918734788895,
      0.04950554296374321,
      -0.04507850855588913,
      0.013903215527534485,
      -0.03141620382666588,
      0.04396967217326164,
      -0.025448597967624664,
      -0.05263081565499306,
      0.0013059666380286217,
      -0.07542797178030014,
      -0.0005138987326063216,
      -0.043994929641485214,
      0.03074996918439865,
      0.09133467823266983,
      -0.07308382540941238,
      -0.038972917944192886,
      -0.05417933687567711,
      -0.12623877823352814,
      0.11193722486495972,
      -0.06704427301883698,
      -0.011381953954696655,
      0.014527908526360989,
      0.05918460711836815,
      0.0201195627450943,
      -0.014233207330107689,
      0.02071559429168701,
      0.039355166256427765,
      0.03353586792945862,
      0.008271303027868271,
      0.01042234804481268,
      0.041449446231126785,
      -0.01457397360354662,
      0.01191927120089531,
      0.09997984766960144,
      -0.09975004196166992,
      -0.05910695344209671,
      0.0565616749227047,
      0.07125625759363174,
      -0.0073156883008778095,
      0.0029211868532001972,
      -0.01112235989421606,
      -0.04554173722863197,
      0.06516432017087936,
      -0.029928255826234818,
      -0.06636036187410355,
      -0.048385217785835266,
      -0.03137101233005524,
      0.02783522754907608,
      -0.057355768978595734,
      0.025541726499795914,
      0.001683325506746769,
      -0.029893523082137108,
      0.039061836898326874,
      -0.03497065603733063,
      0.014981098473072052,
      -0.011800329200923443,
      0.0628558099269867,
      -0.10629403591156006,
      0.02923179417848587,
      -0.09916135668754578,
      0.08926869928836823,
      -0.06533213704824448,
      -0.014639421366155148,
      -0.027441101148724556,
      -0.08063684403896332,
      0.03922521322965622,
      -0.07630829513072968,
      0.05277109518647194,
      0.004280358552932739,
      -0.025658953934907913,
      -0.018029890954494476,
      -0.010868741199374199,
      -0.06838473677635193,
      -0.050765883177518845,
      0.003962634596973658,
      0.061660733073949814,
      0.025937112048268318,
      0.007744684815406799,
      0.04472172632813454,
      -0.10710805654525757,
      0.009598872624337673,
      -0.026297342032194138,
      0.0763036459684372,
      0.08106666803359985,
      0.0009559528552927077,
      -0.019803470000624657,
      -0.00010400943574495614,
      -0.045377764850854874,
      0.025943366810679436,
      -0.07175985723733902,
      -0.013339412398636341,
      0.05192909762263298,
      0.012067285366356373,
      0.00295978132635355,
      -0.05814874917268753,
      -0.00402022572234273,
      -0.06072453781962395,
      0.05703520029783249,
      -0.04871489852666855,
      0.031748589128255844,
      0.027504080906510353,
      -0.06559872627258301,
      -0.007642586249858141,
      0.015695475041866302,
      0.06905524432659149,
      0.054811351001262665,
      0.04820951074361801,
      0.00018365823780186474,
      -0.023112880066037178,
      0.016438039019703865,
      -0.004142757039517164,
      0.006635173689574003,
      -0.06805986166000366,
      0.0020954031497240067,
      0.011012367904186249,
      -0.016898153349757195,
      0.05258757248520851,
      0.007514783646911383,
      0.13315701484680176,
      0.07543205469846725,
      -0.026085257530212402,
      0.00962392520159483,
      -0.052207544445991516,
      -0.07542835175991058,
      -0.056177012622356415,
      6.075042599783909e-33,
      0.04019208624958992,
      -0.0005625307676382363,
      0.004013650119304657,
      0.033095937222242355,
      0.013718394562602043,
      -0.03853115066885948,
      0.00432071415707469,
      -0.03546588867902756,
      -0.03157370910048485,
      0.04640735313296318,
      -0.07769254595041275,
      0.05546976253390312,
      0.0030902817379683256,
      -0.03340740501880646,
      -0.0788852721452713,
      0.04967902600765228,
      0.08556202054023743,
      -0.06162088364362717,
      -0.004973744507879019,
      -0.06285227835178375,
      0.06967703998088837,
      -0.06957793235778809,
      -0.042698752135038376,
      0.010104628279805183,
      -0.028706543147563934,
      0.0011475052451714873,
      0.02421758882701397,
      0.08945184201002121,
      0.009638980031013489,
      -0.006159371696412563,
      0.05568085238337517,
      -0.0023557834792882204,
      0.012589508667588234,
      0.06522386521100998,
      -0.0007436309242621064,
      -0.042442262172698975,
      0.05950434133410454,
      -0.036562591791152954,
      -0.02786720171570778,
      0.01996074803173542,
      -0.022953210398554802,
      -0.013566294685006142,
      0.033981919288635254,
      0.04499194771051407,
      -0.014808246865868568,
      0.04295716807246208,
      0.011146415024995804,
      0.014799628406763077,
      0.08875170350074768,
      0.07047785818576813,
      -0.14198864996433258,
      0.029861392453312874,
      -0.01723792590200901,
      -0.03774028643965721,
      0.012559853494167328,
      0.011413870379328728,
      -0.07193611562252045,
      -0.0020732777193188667,
      0.0551651269197464,
      -0.05102142319083214,
      -0.1053013876080513,
      0.056790754199028015,
      0.04965335503220558,
      -0.00859724823385477,
      -0.1439533829689026,
      0.09644611924886703,
      -0.004474776331335306,
      -0.019096283242106438,
      0.0038535206113010645,
      0.006863531656563282,
      -0.013502889312803745,
      -0.010367672890424728,
      0.03424989804625511,
      -0.030088305473327637,
      0.03479854390025139,
      -0.0904325544834137,
      -0.0589267797768116,
      -0.0527414008975029,
      -0.07399396598339081,
      -0.012959514744579792,
      0.10210149735212326,
      -0.01732717826962471,
      0.008679316379129887,
      0.10693254321813583,
      0.08537694066762924,
      0.0596204437315464,
      0.0016725161112844944,
      -0.024592453613877296,
      -0.02842555195093155,
      0.05086769536137581,
      -0.08576656877994537,
      -0.06944097578525543,
      -0.039837975054979324,
      -0.036315713077783585,
      -0.03215744346380234,
      -6.155968038998331e-33,
      0.030324900522828102,
      0.062241002917289734,
      -0.0048739369958639145,
      -0.006896612234413624,
      -0.05318307876586914,
      0.024160003289580345,
      0.14623725414276123,
      -0.01937710866332054,
      0.04608310014009476,
      0.04338768124580383,
      -0.0501604788005352,
      0.04219333082437515,
      0.012281420640647411,
      -0.0877634584903717,
      -0.019903812557458878,
      0.10545020550489426,
      -0.03686933591961861,
      -0.026139279827475548,
      -0.030550234019756317,
      -0.035706061869859695,
      0.0013779120054095984,
      0.03307291492819786,
      -0.05525943636894226,
      0.03806810826063156,
      -0.08490511029958725,
      0.09298880398273468,
      0.08334705978631973,
      -0.04516051709651947,
      0.04526738449931145,
      -0.04029514640569687,
      -0.1070740818977356,
      -0.03890320286154747,
      -0.08802682161331177,
      0.08957704901695251,
      -0.03937176242470741,
      -0.07639529556035995,
      0.044346440583467484,
      0.016459135338664055,
      -0.029550090432167053,
      0.046226125210523605,
      0.018902070820331573,
      -0.01499729510396719,
      -0.021447231993079185,
      0.08545291423797607,
      0.05236826464533806,
      -0.09978791326284409,
      0.044064439833164215,
      -0.033329758793115616,
      -0.0298394113779068,
      -0.003425844246521592,
      0.008341921493411064,
      -0.08328608423471451,
      -0.08252692967653275,
      0.028598211705684662,
      -0.0679517537355423,
      -0.00647320132702589,
      0.015320690348744392,
      0.00806704442948103,
      -0.07551645487546921,
      0.05107840523123741,
      -0.03272828087210655,
      -0.03858570754528046,
      0.0637042373418808,
      0.06548284739255905,
      0.01481623388826847,
      0.017265990376472473,
      -0.056025415658950806,
      0.035537123680114746,
      0.09223052114248276,
      0.0038916454650461674,
      0.07515623420476913,
      0.0382731594145298,
      0.04865622520446777,
      -0.02475469931960106,
      0.02315707877278328,
      -0.0023347078822553158,
      -0.04511542618274689,
      0.017365114763379097,
      0.050233110785484314,
      0.07232704758644104,
      0.02686055563390255,
      0.024324435740709305,
      0.12149596214294434,
      0.014021582901477814,
      -0.02719869650900364,
      -0.041672926396131516,
      0.045932237058877945,
      0.08790119737386703,
      -0.0872003361582756,
      -0.05575614795088768,
      -0.05488259345293045,
      -0.010592103935778141,
      -0.007358745206147432,
      0.07871916145086288,
      0.039787426590919495,
      -6.643502814540625e-08,
      -0.08267418295145035,
      0.015948083251714706,
      -0.013867886736989021,
      -0.0016301682917401195,
      0.050000473856925964,
      -0.0589337982237339,
      0.04429997503757477,
      -0.04751810431480408,
      -0.027335861697793007,
      0.02365550398826599,
      -0.054023999720811844,
      0.06281477212905884,
      -0.05744151771068573,
      -0.002720378339290619,
      -0.0505710132420063,
      0.05488300696015358,
      -0.03173951432108879,
      0.04153589531779289,
      7.212045602500439e-05,
      -0.006737309508025646,
      0.0471942313015461,
      0.019640477374196053,
      0.02871975488960743,
      -0.013764390721917152,
      0.0633428692817688,
      -0.047694288194179535,
      -0.08178731054067612,
      0.043913327157497406,
      -0.004271209239959717,
      0.002109154360368848,
      0.018291298300027847,
      -0.010002419352531433,
      0.057096127420663834,
      0.0030825533904135227,
      -0.05196521058678627,
      -0.06679332256317139,
      0.07022502273321152,
      -0.025458799675107002,
      0.05250454694032669,
      0.07881778478622437,
      -0.015253563411533833,
      -0.003563979407772422,
      0.06364863365888596,
      0.01572474092245102,
      -0.026267951354384422,
      -0.008022846654057503,
      -0.009291564114391804,
      -0.028150388970971107,
      0.06901935487985611,
      0.007275348529219627,
      0.06838250905275345,
      -0.04969227686524391,
      -0.12665627896785736,
      0.034862127155065536,
      0.0026223415043205023,
      -0.091687873005867,
      -0.03931063041090965,
      -0.02269984781742096,
      0.009912886656820774,
      0.07683271914720535,
      0.02365032024681568,
      -0.04373673349618912,
      -0.0038350021932274103,
      -0.03818719461560249
    ]
  },
  {
    "hash": "8a2b446de08691358abf397964627668c689d95d",
    "author": "hyemiie",
    "email": "124187333+hyemiie@users.noreply.github.com",
    "date": "2025-07-09T06:56:37+01:00",
    "message": "Update README.md",
    "diff": "@@ -1,5 +1,4 @@\n-This is the frontend repository for **Vyn**, an AI powered code vulnerability scanner. It's built with **Next.js** and consumes REST APIs from the Django backend to render vulnerability reports.\n-\n+This is the frontend for **Vyn**, a code vulnerability scanner. It's built with **Next.js** and delivers a clean, fast interface to display scan results from the Django backend.\n \ud83d\udd17 Live: [vyn-web-scanner.vercel.app](https://vyn-web-scanner.vercel.app)\n \n \n",
    "embedding": [
      -0.04700276255607605,
      0.037997350096702576,
      -0.12111129611730576,
      0.013981350697577,
      0.06891036033630371,
      -0.03271128237247467,
      -0.09287203103303909,
      0.02396075427532196,
      -0.07005694508552551,
      -0.061841435730457306,
      -0.030448364093899727,
      0.022392811253666878,
      0.02582109533250332,
      0.032684363424777985,
      -0.06749563664197922,
      0.0365772470831871,
      0.018438704311847687,
      0.09609927237033844,
      0.07105143368244171,
      -0.03873313218355179,
      -0.08718068152666092,
      0.12292511761188507,
      0.03132541850209236,
      -0.014160090126097202,
      -0.04408484324812889,
      0.03437069430947304,
      -0.07355814427137375,
      -0.015501986257731915,
      -0.05069223418831825,
      -0.02172006666660309,
      0.02009466663002968,
      -0.013784937560558319,
      -0.05623707175254822,
      0.05503661185503006,
      -0.011197173967957497,
      0.018556158989667892,
      0.015980076044797897,
      -0.07818415015935898,
      -0.019687769934535027,
      -0.00993774551898241,
      0.023860851302742958,
      0.033750269562006,
      -0.05956818908452988,
      -0.008199128322303295,
      -0.028725896030664444,
      -0.14079058170318604,
      -0.070382259786129,
      -0.07638180255889893,
      -0.010088934563100338,
      -0.07724875211715698,
      -0.07497414201498032,
      -0.08818845450878143,
      0.0031592121813446283,
      -0.027115069329738617,
      -0.10381199419498444,
      -0.038056518882513046,
      0.05461980402469635,
      -0.03652936965227127,
      -0.0776396244764328,
      0.03690844774246216,
      0.09347882121801376,
      0.008968177251517773,
      0.06298545002937317,
      0.027436375617980957,
      -0.03271947056055069,
      0.03314885497093201,
      0.008085534907877445,
      0.05355553328990936,
      0.0799780935049057,
      -0.07138195633888245,
      -0.04238571599125862,
      0.014943163841962814,
      -0.010185422375798225,
      -0.07426537573337555,
      0.008588205091655254,
      -0.007205987349152565,
      0.015042834915220737,
      0.01479767169803381,
      0.12742435932159424,
      -0.10693255066871643,
      -0.01780722290277481,
      -0.03515944257378578,
      -0.024422327056527138,
      0.1386457085609436,
      0.0521414652466774,
      0.01250037644058466,
      0.031201953068375587,
      0.08306697756052017,
      0.07645270228385925,
      -0.0023854458704590797,
      0.07404809445142746,
      -0.02049672044813633,
      -0.050625454634428024,
      0.03256380185484886,
      -0.05356734246015549,
      0.03329383581876755,
      0.06491804122924805,
      -0.06576430797576904,
      -0.04633147642016411,
      0.03587156534194946,
      -0.013504444621503353,
      -0.10108283162117004,
      0.06632204353809357,
      -0.06483785063028336,
      0.038172367960214615,
      -0.01519136130809784,
      0.12070212513208389,
      -0.004356593359261751,
      -0.0009937784634530544,
      -0.0813136175274849,
      0.024091044440865517,
      0.07578668743371964,
      0.042643364518880844,
      -0.08667485415935516,
      0.005663711577653885,
      0.007898095063865185,
      0.05139411985874176,
      0.042317841202020645,
      0.07106129080057144,
      0.019184987992048264,
      0.10346900671720505,
      0.05936102196574211,
      -0.013397954404354095,
      -0.05831151828169823,
      0.10350754112005234,
      -0.007813043892383575,
      -0.02818194217979908,
      1.928853802913914e-33,
      0.06588031351566315,
      0.09187514334917068,
      0.061629410833120346,
      -0.009829798713326454,
      0.052414752542972565,
      -0.019929256290197372,
      -0.015481969341635704,
      0.057927265763282776,
      -0.06534548103809357,
      -0.010625365190207958,
      -0.02651732973754406,
      0.04230688884854317,
      0.03011375106871128,
      0.04990559071302414,
      -0.07627483457326889,
      -0.029248246923089027,
      -0.0049508074298501015,
      0.03644649311900139,
      -0.03361869603395462,
      0.02720532938838005,
      0.004259721376001835,
      -0.08342334628105164,
      -0.00035265021142549813,
      0.025896111503243446,
      0.006415828131139278,
      0.05959217995405197,
      -0.0015400891425088048,
      0.03992611914873123,
      -0.032914433628320694,
      0.03381352871656418,
      -0.01881507597863674,
      0.01062812376767397,
      -0.032484270632267,
      -0.013098147697746754,
      -0.09622947126626968,
      -0.02501607872545719,
      -0.04102018103003502,
      -0.019946856424212456,
      -0.013933926820755005,
      -0.05697451904416084,
      0.014127849601209164,
      0.005913996137678623,
      -0.023205993697047234,
      -0.035791799426078796,
      -0.008021274581551552,
      -0.05270317569375038,
      -0.1009485125541687,
      0.07473549991846085,
      0.06400622427463531,
      0.010963916778564453,
      -0.057035963982343674,
      -0.05139841511845589,
      -0.03234203904867172,
      -0.03264765813946724,
      -0.06335967779159546,
      -0.011663488112390041,
      0.045321136713027954,
      0.01547720842063427,
      0.031086282804608345,
      0.03225799649953842,
      0.054106876254081726,
      -0.010207690298557281,
      -0.02784601040184498,
      -0.06228161230683327,
      0.013150720857083797,
      -0.060972798615694046,
      0.0015536840073764324,
      0.0005646112840622663,
      0.03500062972307205,
      0.04759731516242027,
      -0.09543013572692871,
      0.05608568340539932,
      -0.002595561556518078,
      -0.016189007088541985,
      -0.0030137135181576014,
      -0.07917199283838272,
      -0.01803835667669773,
      0.022203469648957253,
      0.029683934524655342,
      -0.021712319925427437,
      -0.024017982184886932,
      -0.06389860063791275,
      0.036970190703868866,
      0.02064529061317444,
      0.023458104580640793,
      0.05724829062819481,
      0.004743298050016165,
      0.040422867983579636,
      -0.003977544605731964,
      0.06377764046192169,
      0.02143978700041771,
      -0.010275579988956451,
      0.05023978650569916,
      -0.04844140261411667,
      -0.0019645269494503736,
      -2.0146775638224108e-33,
      -0.0422295406460762,
      -0.04477490484714508,
      -0.06420032680034637,
      0.050362732261419296,
      0.0045883446000516415,
      -0.13357022404670715,
      -0.00479363976046443,
      0.08738874644041061,
      0.015413789078593254,
      0.028254738077521324,
      0.035429563373327255,
      -0.0712192952632904,
      0.02644186094403267,
      -0.04538886621594429,
      0.05275893211364746,
      0.04678864777088165,
      -0.046565938740968704,
      -0.0969923660159111,
      0.08281867206096649,
      0.0018839925760403275,
      -0.05429166555404663,
      0.07380518317222595,
      -0.00025179132353514433,
      -0.010118714533746243,
      -0.07918758690357208,
      -0.013882097788155079,
      0.07509598135948181,
      -0.023353196680545807,
      -0.06069355458021164,
      -0.013948236592113972,
      0.016360973939299583,
      0.025802532210946083,
      -0.04134362190961838,
      0.05632484331727028,
      0.045362960547208786,
      0.044226016849279404,
      0.0839538425207138,
      -0.03612793609499931,
      0.039153482764959335,
      0.033945608884096146,
      0.0637284368276596,
      0.020759841427206993,
      -0.05227883905172348,
      0.04195508733391762,
      -0.03625499829649925,
      0.043129269033670425,
      -0.08083774894475937,
      0.09414433687925339,
      0.012686152942478657,
      -0.059605132788419724,
      -0.0029408889822661877,
      -0.02347075752913952,
      -0.07046698778867722,
      -0.01324857771396637,
      -0.0707617849111557,
      -0.0302580613642931,
      0.00022394831466954201,
      -0.0046613034792244434,
      -0.07505757361650467,
      0.10269937664270401,
      -0.07275396585464478,
      -0.030894264578819275,
      -0.05914699658751488,
      -0.04071373492479324,
      -0.04342611879110336,
      0.004279986023902893,
      -0.11326900124549866,
      0.03468003869056702,
      0.019857684150338173,
      -0.06591681391000748,
      0.0743183121085167,
      0.012443408370018005,
      -0.0021519658621400595,
      -0.0027481787838041782,
      0.014746356755495071,
      -0.011765817180275917,
      -0.008057201281189919,
      -0.04191933944821358,
      0.02077271230518818,
      0.019058771431446075,
      0.057059336453676224,
      -0.04941372200846672,
      0.00038975838106125593,
      0.026447080075740814,
      -0.026179565116763115,
      0.023900441825389862,
      -0.01193287130445242,
      0.04971842095255852,
      -0.025348946452140808,
      -0.024319717660546303,
      -0.02285163477063179,
      0.038493745028972626,
      -0.0867510586977005,
      0.033351365476846695,
      0.10608933866024017,
      -4.8462084123457316e-08,
      0.023347431793808937,
      0.027810078114271164,
      -0.011218730360269547,
      -0.008057150058448315,
      0.02902611903846264,
      0.050893619656562805,
      0.015229887329041958,
      0.09920117259025574,
      0.026343993842601776,
      0.05273767560720444,
      0.007146072573959827,
      -0.05231313779950142,
      0.03909072279930115,
      0.004172348417341709,
      0.0022198052611202,
      0.07017756253480911,
      -0.019286341965198517,
      0.07308237999677658,
      -0.036695487797260284,
      -0.04008951038122177,
      0.04678015410900116,
      0.02370651625096798,
      0.04060898721218109,
      -0.04822207987308502,
      0.05638477951288223,
      -0.018869560211896896,
      0.04091636463999748,
      -0.004506031982600689,
      0.029668733477592468,
      -0.12031538039445877,
      0.045523788779973984,
      -0.018626773729920387,
      0.005607441999018192,
      0.009492512792348862,
      -0.005746582988649607,
      0.08277968317270279,
      -0.03756231069564819,
      -0.034201961010694504,
      0.027896931394934654,
      0.08517413586378098,
      0.0356445387005806,
      -0.0366361029446125,
      -0.02199407108128071,
      -0.01975967548787594,
      -0.12188135832548141,
      -0.04683413356542587,
      -0.0054190270602703094,
      -0.059016577899456024,
      0.07610857486724854,
      -0.03347385302186012,
      0.003347718622535467,
      -0.0851442739367485,
      0.03677840530872345,
      0.0331219844520092,
      -0.03125232458114624,
      0.01986003667116165,
      0.03943650424480438,
      -0.07093247026205063,
      0.032939378172159195,
      0.06191593036055565,
      0.08137419074773788,
      0.02673332393169403,
      0.0773250162601471,
      0.04039425775408745
    ]
  },
  {
    "hash": "c7591b11b8597741a91a4f0abd85fee8922843a0",
    "author": "hyemiie",
    "email": "124187333+hyemiie@users.noreply.github.com",
    "date": "2025-07-07T14:20:34+01:00",
    "message": "Update README.md",
    "diff": "@@ -1,4 +1,4 @@\n-This is the frontend for **Vyn**, a code vulnerability scanner. It's built with **Next.js** and delivers a clean, fast interface to display scan results from the Django backend.\n+This is the frontend for **Vyn**, a code vulnerability scanner. Built with **Next.js**, it delivers a clean, fast interface to display scan results from the Django backend.\n \ud83d\udd17 Live: [vyn-web-scanner.vercel.app](https://vyn-web-scanner.vercel.app)\n \n \n@@ -43,7 +43,7 @@ npm install\n ```bash\n npm run dev\n ```\n-once it starts running navigate to `http://localhost:3000` to view the application in your browser.\n+once it starts running go to `http://localhost:3000` to view the application in your browser.\n \n This frontend connects to the [Vyn Backend](https://github.com/hyemiie/vyn-web-demo), which processes scans and serves results via an API.\n \n",
    "embedding": [
      -0.024018971249461174,
      0.0339127741754055,
      -0.12224403023719788,
      -0.012867441400885582,
      0.07666897028684616,
      -0.06028158962726593,
      -0.08995485305786133,
      0.025670189410448074,
      -0.06512252241373062,
      -0.036775853484869,
      -0.018150504678487778,
      0.04482799023389816,
      -0.0013629855820909142,
      0.035774827003479004,
      -0.05184634402394295,
      0.02243560366332531,
      0.029225079342722893,
      0.06223578006029129,
      0.07449885457754135,
      -0.02652653492987156,
      -0.10268431901931763,
      0.10219073295593262,
      0.056024424731731415,
      -0.004817419685423374,
      -0.07488706707954407,
      -0.023016029968857765,
      -0.07138209044933319,
      -0.0035041861701756716,
      -0.03336400166153908,
      -0.020973030477762222,
      0.011695356108248234,
      -0.002553581725805998,
      -0.06940005719661713,
      0.016764046624302864,
      -0.024343226104974747,
      0.07997580617666245,
      0.00018193712458014488,
      -0.07461085915565491,
      -0.07905875146389008,
      -0.02186356857419014,
      0.10064312070608139,
      0.012846509926021099,
      -0.08625375479459763,
      -0.0224932711571455,
      -0.010883755050599575,
      -0.15694090723991394,
      -0.04554889351129532,
      -0.05707237124443054,
      0.012678056955337524,
      -0.07065480202436447,
      -0.11841149628162384,
      -0.06132260337471962,
      -0.033616065979003906,
      -0.038025785237550735,
      -0.12954911589622498,
      0.00957989227026701,
      0.07146044075489044,
      0.0003402337315492332,
      -0.0518888421356678,
      0.04780300706624985,
      0.0469617061316967,
      0.010626846924424171,
      0.04033233970403671,
      0.01935153640806675,
      -0.010950949043035507,
      0.0068653905764222145,
      0.022631948813796043,
      0.023738961666822433,
      0.08295123279094696,
      -0.015146425925195217,
      -0.005863850470632315,
      0.037050604820251465,
      -0.014329221099615097,
      -0.08932086080312729,
      -0.04665046185255051,
      -0.08596564829349518,
      0.030972715467214584,
      0.02890115976333618,
      0.0976211428642273,
      -0.045688729733228683,
      -0.011205131188035011,
      -0.04586410149931908,
      -0.04383283108472824,
      0.09802804887294769,
      0.024027230218052864,
      0.03151239827275276,
      -3.366038799867965e-05,
      0.02932743914425373,
      0.06724457442760468,
      -0.027038726955652237,
      0.05812530219554901,
      -0.027691535651683807,
      -0.12036573141813278,
      0.03815385326743126,
      -0.017237823456525803,
      0.016131659969687462,
      0.1020728349685669,
      0.011571355164051056,
      -0.029607316479086876,
      0.048929959535598755,
      0.020064285025000572,
      -0.11694198101758957,
      0.06820743530988693,
      -0.03058582730591297,
      0.04126739874482155,
      -0.003588669700548053,
      0.11064095050096512,
      0.016854487359523773,
      0.02012261189520359,
      -0.08825881779193878,
      0.011181026697158813,
      0.06447166204452515,
      0.06265474110841751,
      -0.046701330691576004,
      -0.018479634076356888,
      0.01769530586898327,
      0.08566605299711227,
      0.03926919028162956,
      0.07146111875772476,
      0.04966843128204346,
      0.08575887978076935,
      0.055313803255558014,
      0.011663511395454407,
      -0.09826511889696121,
      0.08334939181804657,
      -0.023822171613574028,
      0.016244307160377502,
      4.1770725232149504e-33,
      0.06542752683162689,
      0.04180129989981651,
      0.052359722554683685,
      0.006992833688855171,
      0.06119702011346817,
      0.010037078522145748,
      0.020990880206227303,
      0.09044629335403442,
      -0.087372325360775,
      0.008447723463177681,
      0.0051276180893182755,
      0.016959622502326965,
      0.052156962454319,
      0.05433877930045128,
      -0.0628255307674408,
      -0.04578781872987747,
      0.008705605752766132,
      0.020777136087417603,
      5.185667032492347e-05,
      0.01215442456305027,
      0.011764775961637497,
      -0.08886829763650894,
      -0.02251431532204151,
      0.03684220463037491,
      -0.00818378571420908,
      0.04727034270763397,
      -0.017244407907128334,
      0.05391161888837814,
      -0.04883841425180435,
      0.03869910165667534,
      0.029832229018211365,
      0.029852058738470078,
      -0.04930751770734787,
      -0.026816193014383316,
      -0.0930308997631073,
      -0.04172779992222786,
      -0.03536694496870041,
      -0.029536033049225807,
      -0.015505658462643623,
      -0.07741499692201614,
      -0.00660546263679862,
      -0.004779882729053497,
      -0.03511163592338562,
      -0.04542451351881027,
      -0.03335839509963989,
      -0.06387703865766525,
      -0.09798745065927505,
      0.09052357077598572,
      0.0281862523406744,
      0.06750112026929855,
      -0.06394654512405396,
      -0.057681627571582794,
      -0.029623527079820633,
      -0.04806043580174446,
      -0.055904023349285126,
      0.016272705048322678,
      0.03919270634651184,
      0.011852962896227837,
      -0.010063515976071358,
      0.04439506307244301,
      0.05984502285718918,
      -0.007325757294893265,
      -0.027074309065937996,
      -0.02819976583123207,
      0.022038299590349197,
      -0.06083405762910843,
      -0.006901622284203768,
      -0.0163588710129261,
      0.03725217282772064,
      0.025386737659573555,
      -0.0999537855386734,
      0.05071409419178963,
      0.006528227124363184,
      -0.002517320681363344,
      0.031495820730924606,
      -0.06407291442155838,
      -0.014422882348299026,
      0.03504323959350586,
      0.03774379566311836,
      -0.027708424255251884,
      -0.012208439409732819,
      -0.03521092236042023,
      0.021654890850186348,
      -0.0020896275527775288,
      0.01797744259238243,
      0.036699358373880386,
      0.012124556116759777,
      0.025219211354851723,
      0.0036161679308861494,
      0.07758131623268127,
      0.035408418625593185,
      0.009768183343112469,
      0.03306586667895317,
      -0.040435418486595154,
      -0.014076064340770245,
      -4.83338959018742e-33,
      -0.032683055847883224,
      -0.025341948494315147,
      -0.08671431988477707,
      0.050727784633636475,
      0.0024342192336916924,
      -0.13069823384284973,
      -0.001397476065903902,
      0.06408435851335526,
      -0.0013331830268725753,
      -0.022570427507162094,
      0.03283623605966568,
      -0.018575934693217278,
      0.06212686002254486,
      -0.019566938281059265,
      0.017662987112998962,
      0.07454297691583633,
      -0.0323583148419857,
      -0.0996410921216011,
      0.08507955819368362,
      -0.007397203706204891,
      -0.04828207194805145,
      0.1000400185585022,
      -0.01197054237127304,
      0.006591270677745342,
      -0.0935901626944542,
      -0.030284594744443893,
      0.06650970131158829,
      -0.01674572564661503,
      -0.09279491007328033,
      0.002158954506739974,
      0.010701910592615604,
      0.016740666702389717,
      -0.08405497670173645,
      0.0956362783908844,
      0.0481598898768425,
      0.05276762321591377,
      0.07260498404502869,
      -0.011262754909694195,
      0.07823356986045837,
      -0.017612222582101822,
      0.07819674909114838,
      0.013078322634100914,
      -0.04515058919787407,
      0.017565865069627762,
      -0.03264326974749565,
      0.03004498966038227,
      -0.0745835229754448,
      0.08402301371097565,
      -0.002741200150921941,
      -0.025352198630571365,
      -0.017095817252993584,
      0.005247468128800392,
      -0.036897722631692886,
      -0.014752238988876343,
      -0.053146880120038986,
      -0.025589268654584885,
      0.004314786288887262,
      -0.005251217633485794,
      -0.07982933521270752,
      0.07127442955970764,
      -0.020453011617064476,
      -0.052000340074300766,
      -0.08665125072002411,
      -0.034724973142147064,
      -0.02799217961728573,
      0.002291783457621932,
      -0.1213776096701622,
      0.045101843774318695,
      0.0754687637090683,
      -0.0613723061978817,
      0.01452891156077385,
      0.06837625056505203,
      0.010516182519495487,
      0.022947633638978004,
      -0.007038261275738478,
      0.025456998497247696,
      0.013123462907969952,
      -0.05311207100749016,
      0.0169213954359293,
      0.01850849762558937,
      0.05152071267366409,
      -0.00038546364521607757,
      -0.015194506384432316,
      -0.042178358882665634,
      -0.06628874689340591,
      0.022970272228121758,
      -0.04013494402170181,
      0.019141878932714462,
      -0.015030386857688427,
      -0.06011872738599777,
      0.018607869744300842,
      0.02834758535027504,
      -0.09514816105365753,
      0.007879840210080147,
      0.09772097319364548,
      -5.85994754942476e-08,
      0.021418478339910507,
      0.0310177244246006,
      -0.03301441669464111,
      -0.009142184630036354,
      0.049501582980155945,
      0.03877202421426773,
      0.023463670164346695,
      0.08741502463817596,
      0.033224787563085556,
      0.06696344166994095,
      -0.010144582949578762,
      -0.048416607081890106,
      0.03680059313774109,
      0.016337351873517036,
      0.026570960879325867,
      0.04831256717443466,
      -0.03233202546834946,
      0.05396721139550209,
      -0.048300568014383316,
      -0.0423947311937809,
      0.052721913903951645,
      0.01594790630042553,
      0.003499139565974474,
      0.013735327869653702,
      0.05969071760773659,
      -0.039412230253219604,
      0.0446803942322731,
      -0.012518742121756077,
      -0.024517085403203964,
      -0.10204774141311646,
      -0.006851906888186932,
      -0.018184952437877655,
      -0.04155208542943001,
      0.06349560618400574,
      -0.02117333747446537,
      0.06326130032539368,
      -0.046370185911655426,
      -0.012993289157748222,
      0.03358133137226105,
      0.05420148745179176,
      0.039426375180482864,
      -0.0457732118666172,
      -0.009100041352212429,
      -0.03012470155954361,
      -0.1319883167743683,
      -0.043221358209848404,
      -0.0038156004156917334,
      -0.0422363355755806,
      0.06627412885427475,
      -0.01695534586906433,
      0.013408055528998375,
      -0.08696731179952621,
      0.05783659592270851,
      -0.02532365545630455,
      -0.022515779361128807,
      0.023767201229929924,
      0.034614093601703644,
      -0.0910884439945221,
      0.01098683848977089,
      0.07348638772964478,
      0.06445031613111496,
      0.015388277359306812,
      0.0658445954322815,
      0.027482986450195312
    ]
  },
  {
    "hash": "5d87fcc877274772b87d2db4054f3d6b973e1bf4",
    "author": "hyemiie",
    "email": "124187333+hyemiie@users.noreply.github.com",
    "date": "2025-07-06T14:06:41+01:00",
    "message": "Update README.md",
    "diff": "@@ -1,54 +1,37 @@\n-This is the frontend for **Vyn**, a code vulnerability scanner. Built with **Next.js**, it delivers a clean, fast interface to display scan results from the Django backend.\n-\ud83d\udd17 Live: [vyn-web-scanner.vercel.app](https://vyn-web-scanner.vercel.app)\n+This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n \n+## Getting Started\n \n----\n+First, run the development server:\n \n-## \ud83d\ude80 What It Does\n-\n-- Loads and displays code scan results\n-- Connects to a backend API for vulnerability data\n-- Uses modern Next.js 14 features (`app/` directory, fast routing)\n-- Serves static assets and responsive pages\n-\n----\n-\n-## \ud83d\udee0\ufe0f Tech Stack used\n-\n-- **Framework**: Next.js 14\n-- **Language**: JavaScript (ES Modules)\n-- **Styling**: Tailwind CSS (optional, add if used)\n-- **Hosting**: [Vercel](https://vercel.com)\n-\n----\n+```bash\n+npm run dev\n+# or\n+yarn dev\n+# or\n+pnpm dev\n+# or\n+bun dev\n+```\n \n-## \u2699\ufe0f How to Run Locally\n+Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n \n-**Prerequisites**: Node.js \u2265 18\n+You can start editing the page by modifying `app/page.js`. The page auto-updates as you edit the file.\n \n-1. **Clone the repo**\n-   ```bash\n-   git clone https://github.com/hyemiie/vyn_web_scanner.git\n-   cd vyn_web_scanner\n+This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.\n \n-2. **Install dependencies**\n+## Learn More\n \n-```bash\n-npm install\n-# or yarn / pnpm / bun install\n-```\n+To learn more about Next.js, take a look at the following resources:\n \n-3. **Start the dev server**\n+- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n+- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n \n-```bash\n-npm run dev\n-```\n-once it starts running go to `http://localhost:3000` to view the application in your browser.\n+You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n \n-This frontend connects to the [Vyn Backend](https://github.com/hyemiie/vyn-web-demo), which processes scans and serves results via an API.\n+## Deploy on Vercel\n \n-## \ud83e\udd1d Connect \n-I'm always open to feedback and suggestions, you can reach me at;\n+The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n \n-GitHub: @hyemiie\n-Email: yemiojedapo1@gmail.com\n+Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.\n+# vyn_web_scanner\n",
    "embedding": [
      -0.0955967828631401,
      0.052141521126031876,
      -0.08584520220756531,
      -0.03157796338200569,
      0.07000623643398285,
      -0.03748675808310509,
      -0.11029700934886932,
      0.029438888654112816,
      -0.03042699582874775,
      -0.03971512243151665,
      0.01095496490597725,
      0.03511035442352295,
      0.02813667431473732,
      0.04366090148687363,
      -0.05917821824550629,
      -0.0031402395106852055,
      0.04274632781744003,
      0.03878938779234886,
      0.08321154117584229,
      -0.05267610400915146,
      -0.04692699387669563,
      0.10888901352882385,
      0.054402466863393784,
      -0.031246352940797806,
      -0.06263590604066849,
      -0.01477823592722416,
      -0.07297607511281967,
      -0.000693668145686388,
      0.01507400069385767,
      0.04375821352005005,
      0.014016321860253811,
      -0.010412457399070263,
      -0.1554626226425171,
      0.030354883521795273,
      -0.05141565203666687,
      0.037747327238321304,
      0.012496821582317352,
      -0.08017634600400925,
      -0.027346042916178703,
      -0.026518015190958977,
      0.04326362907886505,
      0.022325817495584488,
      -0.07308775931596756,
      -0.016933366656303406,
      -0.01391854789108038,
      -0.15937596559524536,
      -0.09179870039224625,
      -0.0851263627409935,
      -0.025548310950398445,
      -0.07861558347940445,
      -0.11261627078056335,
      -0.09384100139141083,
      0.03867426887154579,
      -0.04538892209529877,
      -0.11418259143829346,
      0.02455943636596203,
      0.026243509724736214,
      -0.02055615931749344,
      -0.07058148831129074,
      0.05949513614177704,
      0.09393922984600067,
      -0.02362734265625477,
      0.05356994643807411,
      0.029792852699756622,
      0.00785026978701353,
      0.01725045219063759,
      -0.025065572932362556,
      0.06590483337640762,
      0.09053169190883636,
      -0.04086887463927269,
      -0.010921361856162548,
      0.040664806962013245,
      0.015201034024357796,
      -0.07158772647380829,
      -0.01707230880856514,
      -0.07938367128372192,
      -0.0009630908607505262,
      0.07611414045095444,
      0.06414879113435745,
      -0.08873751759529114,
      -0.026440171524882317,
      -0.044452913105487823,
      -0.04803172126412392,
      0.11732641607522964,
      -0.01618705503642559,
      -0.036040909588336945,
      0.007616939954459667,
      0.062363285571336746,
      0.0540509931743145,
      -0.007102223578840494,
      0.07003519684076309,
      -0.021013541147112846,
      -0.0825798511505127,
      0.05159234628081322,
      -0.025278767570853233,
      0.04195326939225197,
      0.061697136610746384,
      -0.024417905136942863,
      -0.021307460963726044,
      -0.020214147865772247,
      -0.01793064922094345,
      -0.10508865863084793,
      0.10357639938592911,
      -0.04745008051395416,
      0.04217607155442238,
      -0.03468933328986168,
      0.08756956458091736,
      -0.04024863988161087,
      0.024220775812864304,
      -0.03046753816306591,
      0.00800633616745472,
      0.08830791711807251,
      0.017985550686717033,
      -0.05739163979887962,
      0.008197396993637085,
      0.002295549726113677,
      0.06536097824573517,
      0.02113180048763752,
      0.08321845531463623,
      0.04963070526719093,
      0.10801182687282562,
      0.0591825433075428,
      -0.021082663908600807,
      -0.07053828239440918,
      0.12372055649757385,
      -0.018878057599067688,
      -0.018782539293169975,
      1.80380182105531e-34,
      0.08239637315273285,
      0.050052110105752945,
      0.042148739099502563,
      0.05344373360276222,
      0.03765076771378517,
      0.005395948421210051,
      0.0066710952669382095,
      0.08174101263284683,
      -0.10342079401016235,
      0.049664925783872604,
      -0.03837396949529648,
      0.07140278071165085,
      0.0317218042910099,
      0.05127871409058571,
      -0.042387064546346664,
      -0.06531695276498795,
      0.018384793773293495,
      -0.014733631163835526,
      0.006253156810998917,
      0.03315268084406853,
      0.022379808127880096,
      -0.053435683250427246,
      0.01461012102663517,
      0.027977798134088516,
      0.026280846446752548,
      0.07387755811214447,
      -0.01116907224059105,
      0.027112234383821487,
      -0.058612801134586334,
      0.03858143091201782,
      -0.014295634813606739,
      0.020975477993488312,
      -0.05163983255624771,
      -0.011808379553258419,
      -0.06917741149663925,
      -0.0027655749581754208,
      -0.03806733712553978,
      -0.036103058606386185,
      -0.02415120042860508,
      -0.03276543319225311,
      0.07197827100753784,
      0.00024727138224989176,
      -0.053004469722509384,
      -0.04552138224244118,
      -0.043576519936323166,
      -0.06598180532455444,
      -0.032652828842401505,
      0.061698347330093384,
      0.0462842732667923,
      0.03646427020430565,
      -0.05296841263771057,
      -0.03917820006608963,
      -0.07688362896442413,
      0.01159950066357851,
      -0.033960361033678055,
      -0.02500181831419468,
      0.025063849985599518,
      0.019784843549132347,
      0.005850390065461397,
      0.004193039145320654,
      0.051129817962646484,
      -0.031866613775491714,
      -0.058470793068408966,
      0.009042182005941868,
      -0.03905792161822319,
      -0.07790283858776093,
      -0.018616531044244766,
      -0.017847931012511253,
      0.03537032753229141,
      0.03845705837011337,
      -0.0730426013469696,
      0.05859583616256714,
      0.015803547576069832,
      -0.027194367721676826,
      0.042482707649469376,
      -0.045043252408504486,
      -0.04881682246923447,
      0.03024684265255928,
      0.07005345821380615,
      -0.03270697593688965,
      -0.014144234359264374,
      -0.02774083986878395,
      -0.052345361560583115,
      0.03094598464667797,
      0.04456857964396477,
      0.0314587764441967,
      0.021092012524604797,
      0.04864539951086044,
      -0.010298045352101326,
      0.052523061633110046,
      -0.00021472088701557368,
      0.003952253609895706,
      0.04378867521882057,
      0.00016213372873608023,
      -0.02015416882932186,
      -2.6709196930300153e-33,
      -0.013079624623060226,
      -0.04973674193024635,
      -0.048800028860569,
      0.03537023812532425,
      0.017603039741516113,
      -0.12419484555721283,
      0.02543536014854908,
      0.05880061909556389,
      0.030965331941843033,
      -0.008689962327480316,
      0.003598899347707629,
      -0.04157757759094238,
      0.0683898851275444,
      -0.044024594128131866,
      0.00767928920686245,
      0.08752389997243881,
      -0.0190003402531147,
      -0.13387641310691833,
      0.12525272369384766,
      -0.06051836162805557,
      -0.03187502175569534,
      0.09168922156095505,
      -0.03610985726118088,
      -0.004062748048454523,
      -0.08561775088310242,
      -0.022406144067645073,
      0.048077281564474106,
      -0.005554691422730684,
      -0.09695342928171158,
      0.0017007982823997736,
      0.0042608012445271015,
      -0.023807061836123466,
      -0.016508447006344795,
      0.06912696361541748,
      0.02475101314485073,
      0.01959867775440216,
      0.06805378198623657,
      -0.032503608614206314,
      0.09483897686004639,
      -0.026666387915611267,
      0.08355338871479034,
      -0.007235974073410034,
      -0.02251056395471096,
      0.017254669219255447,
      -0.06175478547811508,
      0.02895100601017475,
      -0.0822722390294075,
      0.043870214372873306,
      0.002699541160836816,
      -0.04111424833536148,
      0.026599444448947906,
      -0.01637328416109085,
      -0.054591428488492966,
      -0.016510413959622383,
      -0.060004282742738724,
      -0.020573463290929794,
      -0.03531206399202347,
      -0.01765340194106102,
      -0.06550965458154678,
      0.051871407777071,
      0.0019222062546759844,
      -0.08151882141828537,
      -0.03839719295501709,
      -0.03548770025372505,
      -0.04790150374174118,
      -0.00618074182420969,
      -0.1391276866197586,
      0.04740746319293976,
      0.05505705252289772,
      -0.03574678301811218,
      -0.04082077741622925,
      0.035941850394010544,
      0.02924342267215252,
      0.004532852675765753,
      -0.000757227186113596,
      -0.014690185897052288,
      -0.007676485925912857,
      -0.08745721727609634,
      0.07192973047494888,
      0.002878391183912754,
      -0.024036327376961708,
      0.011813162826001644,
      -0.016823550686240196,
      -0.010812750086188316,
      -0.012609085999429226,
      0.05939368158578873,
      -0.037830088287591934,
      0.02386070415377617,
      -0.023836761713027954,
      -0.04297156259417534,
      0.0060734823346138,
      0.036559492349624634,
      -0.07644939422607422,
      0.02279401756823063,
      0.09608118236064911,
      -5.830251836869138e-08,
      0.012450769543647766,
      0.04717366024851799,
      -0.04189768806099892,
      -0.013063387013971806,
      -0.002934313379228115,
      0.04297897592186928,
      0.030931351706385612,
      0.10058417171239853,
      0.054457053542137146,
      0.0652456060051918,
      -0.006767578423023224,
      -0.03657960519194603,
      0.05181684345006943,
      0.05933550000190735,
      -0.0008337025064975023,
      0.07395751029253006,
      -0.005752700846642256,
      0.019099406898021698,
      -0.03675105795264244,
      -0.04759494587779045,
      0.005417793057858944,
      0.022024476900696754,
      0.005835802759975195,
      -0.012596585787832737,
      0.03374326229095459,
      0.01798299513757229,
      0.028728652745485306,
      -0.03310225158929825,
      0.006503823213279247,
      -0.12549519538879395,
      -0.04441618546843529,
      -0.026634061709046364,
      -0.03228982165455818,
      0.061262812465429306,
      -0.030709896236658096,
      0.06240531802177429,
      0.006443912163376808,
      -0.02563680335879326,
      0.0720757469534874,
      0.06426768749952316,
      0.029442565515637398,
      -0.038886941969394684,
      -0.0465690940618515,
      0.00015577395970467478,
      -0.09797206521034241,
      -0.06732788681983948,
      -0.018055826425552368,
      -0.03825102373957634,
      0.018991021439433098,
      -0.024084949865937233,
      0.03481017425656319,
      -0.06887634098529816,
      0.007601624820381403,
      0.015362927690148354,
      0.03092326782643795,
      0.019756479188799858,
      0.02240840718150139,
      -0.04414329677820206,
      0.017611144110560417,
      0.055217280983924866,
      0.06045529618859291,
      0.013408638536930084,
      0.05134986340999603,
      0.021883869543671608
    ]
  },
  {
    "hash": "4a8f7814a70c5a148ccb47d09c9ad7bb96d9b587",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T22:01:52+01:00",
    "message": "nav update",
    "diff": "@@ -1,6 +1,4 @@\n /* Compatibility.css */\n-@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');\n-\n \n .compatibility-wrapper {\n   font-family: sans-serif;\n@@ -11,9 +9,7 @@\n \n .compatibility-heading {\n   text-align: center;\n-  font-size: 2rem;\n-    font-family: 'Indie Flower', cursive;\n-\n+  font-size: 1.5rem;\n }\n \n .compatibility-marquee-container {\n@@ -72,8 +68,6 @@\n .compatibility-errors-heading {\n   font-size: 2rem;\n   margin-bottom: 1rem;\n-    font-family: 'Indie Flower', cursive;\n-\n   text-align: center;\n }\n \n@@ -89,8 +83,7 @@\n   padding: 1rem;\n   /* background: linear-gradient(180deg, #F9F9F9, #E9E9E9); */\n   background: var(--card);\n-    /* font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace; */\n-  font-family: 'Indie Flower', cursive;\n+    font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n \n \n   box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n@@ -11,10 +11,11 @@\n   border: 2px dashed rgba(0, 0, 0, 0.2);\n   /* font-family: 'Patrick Hand', cursive; */\n     /* font-family: 'Caveat', cursive; */\n-  font-family: 'Indie Flower', cursive;\n-  /* font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace; */\n+  /* font-family: 'Indie Flower', cursive; */\n+  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n+\n   color: var(--text-color);\n-  padding-top: 10px;\n+  padding-top: 40px;\n   border-top: none;\n   width: 100%;\n   box-sizing: border-box; \n@@ -28,9 +28,7 @@ const companies = await expand({\n   `;\n   return (\n     <div className=\"hero\">\n-    \n       <div className=\"hero-page\">\n-      \n       {/* <ThemeToggle/> */}\n         <div className=\"hero-container\">\n           <div className=\"hero-text\">\n@@ -40,12 +40,12 @@ export default function RootLayout({ children }) {\n               </Link>\n \n               <div className=\"heroBtndiv\">\n-                {/* <Link href=\"/documentation\" passHref legacyBehavior>\n+                <Link href=\"/documentation\" passHref legacyBehavior>\n                   <a className=\"docs-link\">Read docs</a>\n-                </Link> */}\n+                </Link>\n \n                 <Link href=\"/scannerboard\" passHref legacyBehavior>\n-                  <a className=\"scan-link\"> Try Vyn web</a>\n+                  <a className=\"scan-link\">Scan repo</a>\n                 </Link>\n               </div>\n \n@@ -4,17 +4,16 @@\n   padding: 1rem;\n   display: flex;\n   align-items: center;\n-  justify-content: space-between;\n-  /* background: var(--nav-bg); */\n-  /* position: fixed;\n+  justify-content: center;\n+  background: var(--nav-bg);\n+  position: fixed;\n   top: 0;\n-  z-index: 1; */\n+  z-index: 1;\n   margin-top: 10px;\n-  height: 10px;\n-  width: 100%;\n+  height: 20px;\n+  width: 80%;\n   border-radius: 15px;\n   box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.1);\n-  /* background-image: var(--background-image); */\n }\n \n .nav-inner {\n@@ -40,9 +39,9 @@\n }\n \n .heroBtndiv {\n-  width: 20%;\n+  width: 25%;\n   display: flex;\n-  justify-content: center;\n+  justify-content: space-evenly;\n }\n \n .docs-link {\n@@ -57,7 +56,7 @@\n }\n \n .scan-link {\n-  /* border-radius: 12px; */\n+  border-radius: 12px;\n   padding: 0.5rem 1rem;\n   background: linear-gradient(135deg, #4A6FA5, #85B3D1);\n   color: #fff;\n@@ -70,7 +69,7 @@\n @media(max-width: 600px) {\n     .nav-container{\n         /* background-color: rgb(219, 168, 98) !important; */\n-        width: 80%;\n+        width: 65%;\n     }\n \n     .nav-inner{\n",
    "embedding": [
      -0.0633140355348587,
      0.06431594491004944,
      0.058329541236162186,
      -0.04109874740242958,
      0.06855031847953796,
      0.022426478564739227,
      -0.08204502612352371,
      -0.06140745058655739,
      -0.03596317395567894,
      -0.02793707326054573,
      0.011179865337908268,
      0.025589555501937866,
      0.03134069964289665,
      -0.059393223375082016,
      0.06787571310997009,
      0.025161370635032654,
      -0.09907036274671555,
      -0.029761163517832756,
      -0.043425898998975754,
      0.09327008575201035,
      -0.08388806879520416,
      0.011665930040180683,
      0.07937562465667725,
      0.07159142941236496,
      -0.10121005028486252,
      0.08278132230043411,
      0.022451451048254967,
      0.039586737751960754,
      -0.0925828218460083,
      -0.06664805114269257,
      0.017883287742733955,
      0.042417973279953,
      0.04666716977953911,
      0.01864517293870449,
      -0.049310103058815,
      -0.045960430055856705,
      -0.036702677607536316,
      0.02896430343389511,
      0.013409700244665146,
      0.02000870741903782,
      0.048463307321071625,
      -0.08901167660951614,
      0.050209373235702515,
      -0.02912476658821106,
      -0.006528645753860474,
      -0.022550540044903755,
      -0.04594617709517479,
      0.014257737435400486,
      0.021529169753193855,
      0.05737288296222687,
      -0.07104448974132538,
      -0.10673458874225616,
      -0.018077224493026733,
      -0.10866739600896835,
      -0.028133202344179153,
      0.10332002490758896,
      -0.07528641074895859,
      -0.0050467150285840034,
      0.05309585481882095,
      0.007770542521029711,
      0.07584214955568314,
      0.06003621965646744,
      0.07284531742334366,
      -0.01575775071978569,
      0.007952609099447727,
      -0.02289971336722374,
      0.03774101287126541,
      0.053606487810611725,
      -0.07175055891275406,
      0.03225884959101677,
      0.01168600469827652,
      -0.01150027196854353,
      -0.01435489859431982,
      0.027865709736943245,
      -0.04446927085518837,
      0.04388415440917015,
      -0.026587022468447685,
      -0.016446776688098907,
      -0.02415434457361698,
      -0.04224344715476036,
      -0.10257629305124283,
      -0.009114484302699566,
      -0.012402672320604324,
      0.10075701028108597,
      0.040678296238183975,
      -0.019522009417414665,
      0.005949751939624548,
      -0.10949692130088806,
      -0.044468555599451065,
      -0.06837644428014755,
      0.03776984289288521,
      -0.07039648294448853,
      0.014794707298278809,
      0.01806139014661312,
      -0.06728707998991013,
      0.04113655909895897,
      -0.052263420075178146,
      -0.09727773070335388,
      -0.0630815252661705,
      0.10869119316339493,
      0.007622518576681614,
      -0.0033432110212743282,
      0.06289616972208023,
      -0.02030077576637268,
      -0.04033203050494194,
      0.013754879124462605,
      0.027600625529885292,
      0.025855856016278267,
      -0.03599882870912552,
      -0.010860306210815907,
      0.04016164690256119,
      -0.02893015556037426,
      -0.07263319194316864,
      -0.06130260229110718,
      -0.09142393618822098,
      -0.05009087175130844,
      -0.024752074852585793,
      -0.09109751135110855,
      0.13906089961528778,
      0.004659012425690889,
      0.029117779806256294,
      -0.01020078919827938,
      -0.05846452713012695,
      -0.04347857087850571,
      -0.036036815494298935,
      0.03183581307530403,
      0.028860727325081825,
      5.073468148295548e-33,
      -0.04292173683643341,
      0.09450703859329224,
      -0.01998831517994404,
      0.07534491270780563,
      0.06512937694787979,
      -0.02580842934548855,
      -0.10667934268712997,
      -0.04048042744398117,
      -0.10893184691667557,
      -0.01972414366900921,
      -0.013368590734899044,
      0.09061668068170547,
      -0.11981912702322006,
      -0.03336470201611519,
      0.033996034413576126,
      -0.049930304288864136,
      -0.004096157383173704,
      -0.014157883822917938,
      0.0056465729139745235,
      -0.03031894564628601,
      -0.06327763944864273,
      0.04646424949169159,
      -0.027591466903686523,
      -0.07903971523046494,
      -0.07869702577590942,
      0.0793011486530304,
      0.03925222158432007,
      0.006701485253870487,
      -0.05431721732020378,
      -0.021716998890042305,
      0.12664122879505157,
      0.018555283546447754,
      0.0464661568403244,
      0.024018989875912666,
      0.017506297677755356,
      -0.04752476140856743,
      -0.0757133737206459,
      -0.060081467032432556,
      -0.03884703665971756,
      0.07094278186559677,
      -0.049266792833805084,
      0.0283970907330513,
      0.052981019020080566,
      0.06651298701763153,
      0.0004695781972259283,
      0.09315796196460724,
      0.08632000535726547,
      -0.025102604180574417,
      0.07583460211753845,
      0.018471572548151016,
      0.0008919754764065146,
      -0.03423213213682175,
      -0.06754964590072632,
      0.012343154288828373,
      -0.04546487703919411,
      -0.03611733764410019,
      -0.07483774423599243,
      0.0363406166434288,
      0.025982948020100594,
      -0.04686488211154938,
      0.0680742859840393,
      -0.0010476555908098817,
      0.05552271381020546,
      -0.06989796459674835,
      0.09717036038637161,
      0.06891439855098724,
      0.016667354851961136,
      -0.007870997302234173,
      -0.0014275630237534642,
      -0.016240807250142097,
      0.0693214163184166,
      0.016783669590950012,
      0.033358000218868256,
      0.07505559176206589,
      0.003948856610804796,
      0.026186108589172363,
      0.030543772503733635,
      0.001822392106987536,
      0.07319115847349167,
      -0.016638372093439102,
      -0.05056820437312126,
      -0.04858226701617241,
      -0.0190022811293602,
      0.012205764651298523,
      -0.03632696345448494,
      -0.07427746057510376,
      0.026806967332959175,
      0.07975226640701294,
      0.011113912798464298,
      0.06395251303911209,
      -0.05779607966542244,
      0.013690769672393799,
      0.06806772947311401,
      -0.103397898375988,
      -0.014301994815468788,
      -5.621794753309882e-33,
      0.06106554716825485,
      -0.003400054294615984,
      0.01682429574429989,
      0.09798609465360641,
      0.04757086560130119,
      0.018466610461473465,
      0.059984240680933,
      0.05127981677651405,
      0.045362479984760284,
      0.029133373871445656,
      0.0353180356323719,
      0.08104545623064041,
      0.07229796797037125,
      -0.034638747572898865,
      -0.03558957949280739,
      0.011973969638347626,
      0.04065932705998421,
      0.06869223713874817,
      0.0012558752205222845,
      0.0076152062974870205,
      0.00747469998896122,
      0.054661840200424194,
      -0.035420749336481094,
      0.048991139978170395,
      0.024843059480190277,
      -0.0112134525552392,
      0.06291591376066208,
      0.01653020642697811,
      -0.06624127179384232,
      -0.03982044756412506,
      0.060012269765138626,
      -0.02013828605413437,
      -0.029514463618397713,
      0.10144556313753128,
      -0.010189111344516277,
      -0.036009132862091064,
      -0.07163012027740479,
      0.027602778747677803,
      -0.015308589674532413,
      -0.0024788801092654467,
      0.022233812138438225,
      -0.0831194743514061,
      -0.03413185849785805,
      -0.00913285743445158,
      0.0634327232837677,
      -0.012690707109868526,
      -0.009037407115101814,
      0.026019427925348282,
      0.015234624035656452,
      0.029200147837400436,
      0.04395390301942825,
      0.038501255214214325,
      0.04961490258574486,
      -0.04673144221305847,
      0.03414572402834892,
      0.01265732292085886,
      -0.0005122123402543366,
      -0.013038977049291134,
      -0.09196841716766357,
      0.04298195242881775,
      -0.019716667011380196,
      -0.025952761992812157,
      0.01990589313209057,
      -0.11269545555114746,
      0.04202411323785782,
      0.0075022685341537,
      -0.0905630886554718,
      0.00965801440179348,
      -0.01477725151926279,
      0.02750714309513569,
      -0.009045432321727276,
      -0.042400795966386795,
      -0.008985403925180435,
      -0.059846412390470505,
      -0.020400196313858032,
      -0.05751946195960045,
      0.10322512686252594,
      0.0011607455089688301,
      0.1017468199133873,
      -0.012733407318592072,
      -0.041363634169101715,
      -0.005771907977759838,
      -0.019857507199048996,
      -0.016438862308859825,
      -0.016461998224258423,
      0.06488156318664551,
      -0.0471668466925621,
      0.015989312902092934,
      0.06100920960307121,
      -0.036565110087394714,
      -0.05288682505488396,
      -0.005855411756783724,
      0.032004162669181824,
      -0.03233768418431282,
      -0.08376789838075638,
      -6.155418219577768e-08,
      0.0332595519721508,
      -0.04716145247220993,
      -0.05483381450176239,
      0.004993345122784376,
      -0.013028708286583424,
      0.02509203553199768,
      -0.03686125576496124,
      -0.1482785940170288,
      -0.02462170645594597,
      0.011182822287082672,
      -0.0007519286009483039,
      0.09863519668579102,
      -0.035804253071546555,
      -0.000572123215533793,
      -0.006224362179636955,
      0.041863542050123215,
      -0.03780591860413551,
      0.12963026762008667,
      -0.06796397268772125,
      -0.005417769309133291,
      -0.016206448897719383,
      0.05397951975464821,
      -0.0011929451720789075,
      0.0015689547872170806,
      -0.009563242085278034,
      -0.001524107763543725,
      -0.043927136808633804,
      -0.013327671214938164,
      0.014214488677680492,
      0.0008499656687490642,
      0.08432744443416595,
      -0.03861570730805397,
      0.020418681204319,
      -0.05626119300723076,
      0.006469029933214188,
      -0.05090136453509331,
      -0.02069295197725296,
      0.013768144883215427,
      0.06648582965135574,
      0.005052265245467424,
      0.03276846930384636,
      0.005736364051699638,
      -0.043350499123334885,
      0.006881373003125191,
      -0.011828841641545296,
      -0.014107685536146164,
      0.04535336792469025,
      0.007664477452635765,
      -0.05731090530753136,
      0.05941225588321686,
      -0.009973973035812378,
      -0.01734757050871849,
      -0.01707923226058483,
      0.0010257922112941742,
      -0.022422708570957184,
      -0.07077673077583313,
      0.04697486385703087,
      0.0546201653778553,
      -0.006010483484715223,
      0.026417303830385208,
      0.07920072972774506,
      0.03656580671668053,
      0.06668023020029068,
      0.02265828475356102
    ]
  },
  {
    "hash": "de66f4b192f7efcbfa6c5186fe01ab9ae4649468",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T20:08:33+01:00",
    "message": "font size update",
    "diff": "@@ -69,7 +69,7 @@\n @media(max-width: 600px) {\n     .nav-container{\n         /* background-color: rgb(219, 168, 98) !important; */\n-        width: 65%;\n+        width: 300px;\n     }\n \n     .nav-inner{\n",
    "embedding": [
      0.02033942937850952,
      0.10217051953077316,
      0.0382925383746624,
      -0.03184780851006508,
      0.07120085507631302,
      -0.01708037033677101,
      -0.027765188366174698,
      0.007967893034219742,
      -0.0818154364824295,
      0.08935849368572235,
      -0.04187870770692825,
      0.11397252231836319,
      0.011249146424233913,
      0.020874328911304474,
      0.0054405974224209785,
      -0.05168676748871803,
      -0.058566514402627945,
      -0.026840271428227425,
      -0.043594200164079666,
      0.04508515074849129,
      -0.08698654919862747,
      -0.02348881959915161,
      0.02991667203605175,
      0.020011821761727333,
      -0.03535491228103638,
      0.060143422335386276,
      0.05294504016637802,
      0.011906122788786888,
      -0.007992461323738098,
      -0.09080220013856888,
      -0.043890584260225296,
      0.04035240411758423,
      0.04667765647172928,
      -0.04648681730031967,
      -0.05389414355158806,
      -0.09928585588932037,
      -0.03784772753715515,
      0.03009774722158909,
      -0.0585329532623291,
      -0.017194049432873726,
      0.03354112431406975,
      0.003054745029658079,
      0.10696951299905777,
      0.040267352014780045,
      -0.06937545537948608,
      -0.06814699620008469,
      -0.04929899424314499,
      0.04310303553938866,
      0.009467688389122486,
      -0.013279286213219166,
      -0.040707264095544815,
      -0.03028358519077301,
      -0.039295971393585205,
      -0.015426534228026867,
      -0.06581804901361465,
      -0.009714567102491856,
      -0.004847092088311911,
      0.00914705265313387,
      0.06341375410556793,
      0.036941368132829666,
      0.07060323655605316,
      0.03363107889890671,
      0.08783390372991562,
      0.01279030367732048,
      0.13780200481414795,
      -0.04850113019347191,
      0.05425024777650833,
      0.024457944557070732,
      -0.12001381069421768,
      -0.00731506897136569,
      0.09000649303197861,
      -0.03650026023387909,
      0.051664963364601135,
      0.027421152219176292,
      0.012206429615616798,
      -0.011392408981919289,
      0.012985016219317913,
      0.02762713097035885,
      -0.01730584353208542,
      0.06697385758161545,
      -0.0682770237326622,
      0.0025547179393470287,
      -0.05641336366534233,
      0.03975112736225128,
      0.0067302267998456955,
      0.016566187143325806,
      0.030972087755799294,
      -0.0818234384059906,
      -0.03743840008974075,
      -0.03385017812252045,
      -0.0020695850253105164,
      0.004349649418145418,
      -0.03426804021000862,
      0.010784562677145004,
      -0.06762363016605377,
      0.005359420087188482,
      -0.08806054294109344,
      -0.08126600086688995,
      -0.023496614769101143,
      0.08252053707838058,
      0.10338620096445084,
      0.056972701102495193,
      0.09676148742437363,
      0.01713985577225685,
      0.030514677986502647,
      -0.030453680083155632,
      0.023955918848514557,
      0.07676222175359726,
      -0.01955970749258995,
      0.03433633968234062,
      0.05346902832388878,
      0.05329615995287895,
      -0.03801370784640312,
      -0.009708349592983723,
      -0.03255502134561539,
      -0.03587305173277855,
      0.027968453243374825,
      0.020567312836647034,
      0.07014967501163483,
      -0.008947866968810558,
      0.01626933552324772,
      0.03578531742095947,
      -0.0507393553853035,
      -0.09289072453975677,
      0.04598526284098625,
      0.0841592326760292,
      0.08053958415985107,
      3.760861197657472e-33,
      -0.05124429985880852,
      0.03426206111907959,
      -0.0450407974421978,
      0.06363525241613388,
      0.05757623910903931,
      0.0417211540043354,
      -0.029841223731637,
      -0.02185641974210739,
      -0.06791498512029648,
      -0.0672709196805954,
      0.014033526182174683,
      0.0483366884291172,
      -0.06065809354186058,
      -0.0004424933867994696,
      0.01928085647523403,
      -0.0438404306769371,
      -0.021989615634083748,
      -0.016541851684451103,
      -0.09885258972644806,
      -0.05401844531297684,
      -0.0021273286547511816,
      0.03774644434452057,
      0.009656279347836971,
      0.01716601476073265,
      0.019283447414636612,
      0.04299645125865936,
      0.01926080510020256,
      0.0019794381223618984,
      -0.10107725113630295,
      -0.030076663941144943,
      0.08433624356985092,
      0.04757179319858551,
      0.09437649697065353,
      0.022200949490070343,
      -0.02466759830713272,
      -0.07972262799739838,
      -0.04945340380072594,
      -0.0374600812792778,
      0.05854274705052376,
      0.014308477751910686,
      -0.07919540256261826,
      -0.014335863292217255,
      0.017898088321089745,
      0.03540242090821266,
      -0.05011921375989914,
      0.04997582361102104,
      0.06551998108625412,
      -0.05748862028121948,
      0.028726106509566307,
      -0.030158668756484985,
      0.0669141486287117,
      -0.0183205995708704,
      -0.058081746101379395,
      -0.05500134453177452,
      -0.0525229349732399,
      0.03240681439638138,
      -0.0022039369214326143,
      0.04360003396868706,
      0.06165241077542305,
      -0.000557600986212492,
      0.10448171943426132,
      -0.04165412858128548,
      0.04522252455353737,
      -0.0013820214662700891,
      0.019868778064846992,
      -0.038054030388593674,
      0.028912898153066635,
      -0.010422381572425365,
      0.049015939235687256,
      -0.05841752886772156,
      0.0953238382935524,
      0.03586510568857193,
      0.09402447938919067,
      0.06611862778663635,
      -0.05046806111931801,
      0.008882389403879642,
      0.013001320883631706,
      -0.050220001488924026,
      0.008579341694712639,
      0.019849158823490143,
      -0.030626501888036728,
      -0.02354445494711399,
      0.0016223250422626734,
      0.040975429117679596,
      0.0010011199628934264,
      -0.00527183385565877,
      -0.07515956461429596,
      0.02581622637808323,
      0.07443319261074066,
      0.027023209258913994,
      -0.08262668550014496,
      0.029425064101815224,
      -0.007081292103976011,
      -0.09264767169952393,
      -0.04819672927260399,
      -4.049781178700282e-33,
      0.040956441313028336,
      -0.010017178021371365,
      -0.1252439320087433,
      0.0051040262915194035,
      -0.008556622080504894,
      -0.02460421808063984,
      0.026977313682436943,
      0.07893842458724976,
      -0.018179798498749733,
      -0.051015086472034454,
      0.06289082765579224,
      0.026233967393636703,
      -0.006985718850046396,
      -0.056913621723651886,
      -0.03750620409846306,
      0.03748214244842529,
      0.09443897753953934,
      0.01173599436879158,
      0.04339015483856201,
      -0.006957771722227335,
      -0.0059544858522713184,
      -0.02948187105357647,
      -0.015477588400244713,
      0.08736837655305862,
      0.09500879794359207,
      -0.09054750204086304,
      0.0748593881726265,
      0.026551390066742897,
      -0.05121854320168495,
      -0.02104320377111435,
      0.010244805365800858,
      0.009922883473336697,
      0.04827424883842468,
      0.07449225336313248,
      -0.010115274228155613,
      -0.08464854210615158,
      0.024565288797020912,
      -0.038553446531295776,
      -0.05321726202964783,
      -0.02346094325184822,
      0.026084596291184425,
      -0.024271247908473015,
      -0.015933116897940636,
      -0.052953023463487625,
      -0.0010654865764081478,
      -0.01433634664863348,
      0.046122536063194275,
      -0.07076035439968109,
      -0.010654308833181858,
      -0.0029696631245315075,
      0.07929225265979767,
      -0.048460882157087326,
      0.09786791354417801,
      -0.037403516471385956,
      0.026369977742433548,
      -0.009386847727000713,
      -0.05674753710627556,
      0.028059089556336403,
      0.06335018575191498,
      0.0958874523639679,
      0.030859526246786118,
      0.03485501557588577,
      -0.09230966866016388,
      -0.13342227041721344,
      -0.002516848500818014,
      0.06770776212215424,
      -0.09427618235349655,
      -0.00930483266711235,
      -0.042116809636354446,
      -0.005512655712664127,
      0.07764313369989395,
      -0.04930536076426506,
      -0.029915928840637207,
      0.03083505667746067,
      -0.09369655698537827,
      -0.08073969930410385,
      0.06725706905126572,
      0.04930476099252701,
      0.09577079117298126,
      -0.018029306083917618,
      -0.005533530842512846,
      0.02314702793955803,
      -0.04268665984272957,
      0.017813872545957565,
      0.012223905883729458,
      0.12238318473100662,
      0.015988217666745186,
      0.014850128442049026,
      -0.02120361663401127,
      -0.013846988789737225,
      -0.09089411050081253,
      0.024590058252215385,
      -0.02845867909491062,
      -0.07878921180963516,
      -0.07222151756286621,
      -4.2154336910016355e-08,
      0.06043531373143196,
      -0.03525330498814583,
      -0.007108690682798624,
      0.08529739826917648,
      -0.014854623936116695,
      -0.0026497654616832733,
      0.04135864973068237,
      -0.04086991772055626,
      -0.0177973210811615,
      0.06511439383029938,
      0.015300839208066463,
      0.020791945978999138,
      0.009720769710838795,
      0.01720122992992401,
      -0.011543323285877705,
      0.031895268708467484,
      -0.04216361790895462,
      0.10906494408845901,
      -0.02930588275194168,
      -0.08051761239767075,
      -0.05773046612739563,
      0.04974061995744705,
      -0.018206508830189705,
      0.081426702439785,
      -0.02553057111799717,
      0.06654391437768936,
      -0.05882900580763817,
      0.03374824300408363,
      0.042403146624565125,
      -0.0774330198764801,
      -0.012084747664630413,
      -0.019438989460468292,
      -0.037733107805252075,
      -0.06526487320661545,
      -0.06458158791065216,
      -0.029767416417598724,
      -0.04438325762748718,
      0.0035970406606793404,
      0.05092136934399605,
      -0.05026935040950775,
      -0.0604531429708004,
      -0.04864631965756416,
      0.013861455954611301,
      -0.05672640725970268,
      -0.04921363666653633,
      -0.007255015429109335,
      0.002287202049046755,
      0.04791645333170891,
      -0.046224918216466904,
      -0.033566106110811234,
      0.04002166911959648,
      0.024535033851861954,
      -0.028949927538633347,
      0.02073861099779606,
      0.03266342729330063,
      -0.09916982799768448,
      0.03223760053515434,
      0.05377088859677315,
      -0.06423259526491165,
      0.01604580506682396,
      0.028977926820516586,
      0.03996066749095917,
      -0.06785678118467331,
      0.018339352682232857
    ]
  },
  {
    "hash": "1355fc28f79094ca4a2c758826267b7f3f8241d2",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T20:05:10+01:00",
    "message": "font size update",
    "diff": "@@ -83,8 +83,7 @@\n   padding: 1rem;\n   /* background: linear-gradient(180deg, #F9F9F9, #E9E9E9); */\n   background: var(--card);\n-    font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-\n+  \n \n   box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n   display: flex;\n@@ -40,8 +40,6 @@\n   align-items: center;\n   gap: 0.5rem;\n   transition: all 0.3s ease;\n-  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-\n }\n \n .subcta-btn:hover {\n@@ -1,19 +1,10 @@\n @import url('https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap');\n-@import url('https://fonts.googleapis.com/css2?family=Caveat&display=swap');\n-@import url('https://fonts.googleapis.com/css2?family=Shadows+Into+Light&display=swap');\n-@import url('https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&display=swap');\n-@import url('https://fonts.googleapis.com/css2?family=Reenie+Beanie&display=swap');\n-@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');\n \n .hero {\n   background-image: var(--background-image);\n   background-color: var(--background-color);\n   border: 2px dashed rgba(0, 0, 0, 0.2);\n-  /* font-family: 'Patrick Hand', cursive; */\n-    /* font-family: 'Caveat', cursive; */\n-  /* font-family: 'Indie Flower', cursive; */\n-  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-\n+  font-family: 'Patrick Hand', cursive;\n   color: var(--text-color);\n   padding-top: 40px;\n   border-top: none;\n@@ -54,7 +54,6 @@\n   border: none;\n   border-bottom:  1px solid rgb(107, 118, 137);\n   /* border-radius: 50px; */\n-    font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n   background-color: var(--card);\n   color: var(--text-color);\n   font-size: 1rem;\n@@ -58,7 +58,7 @@\n   color: var(--text-color);\n   border-radius: 8px;\n   padding: 0.75rem 1rem;\n-  font-size: 0.45rem;\n+  font-size: 0.85rem;\n   overflow-x: auto;\n   overflow-y: hidden;\n   max-height: 300px;\n@@ -113,7 +113,6 @@ scrollbar-width: none;\n \n   .subcta-code pre {\n     height: auto;\n-    font-size: 0.5rem;\n     \n   }\n }\n@@ -1,9 +1,9 @@\n \"use client\";\n import { useEffect, useState } from \"react\";\n-import \"./toggle.css\";  \n+import \"./toggle.css\";  // <-- import the css file\n \n export default function ThemeToggle() {\n-  const [theme, setTheme] = useState(\"dark\");\n+  const [theme, setTheme] = useState(\"light\");\n \n   useEffect(() => {\n     document.documentElement.setAttribute(\"data-theme\", theme);\n",
    "embedding": [
      -0.10140009969472885,
      -0.0008679156308062375,
      -0.0014885111013427377,
      -0.027651429176330566,
      0.0015824728179723024,
      0.0010911946883425117,
      -0.03383013978600502,
      0.0225822813808918,
      -0.014707683585584164,
      -0.07565735280513763,
      0.008929138071835041,
      0.0071250637993216515,
      -0.01842578314244747,
      -0.09899810701608658,
      0.061930153518915176,
      0.07564470171928406,
      -0.043766625225543976,
      -0.015550206415355206,
      -0.01927167922258377,
      0.062270019203424454,
      -0.02839905209839344,
      -0.13876453042030334,
      -0.01833156682550907,
      0.05926051363348961,
      -0.09648250788450241,
      0.06830355525016785,
      -0.02182760462164879,
      0.046752557158470154,
      0.030369624495506287,
      -0.0844191238284111,
      -0.005911202635616064,
      0.04483865946531296,
      0.05776423588395119,
      0.04129721224308014,
      -0.02001127600669861,
      0.05635536462068558,
      0.007211127784103155,
      0.013570086099207401,
      -0.028461584821343422,
      0.03410062566399574,
      0.019296826794743538,
      -0.016336707398295403,
      0.04402860254049301,
      0.0005596039118245244,
      0.007260914891958237,
      0.0008015864295884967,
      -0.01139634009450674,
      -0.02932274155318737,
      0.05683683976531029,
      -0.009515278972685337,
      -0.031479496508836746,
      -0.08678499609231949,
      0.04439132660627365,
      0.0025473821442574263,
      -0.06242293119430542,
      0.09976856410503387,
      0.023173896595835686,
      -0.05698913335800171,
      0.09863457828760147,
      -0.05305882915854454,
      -0.018764197826385498,
      0.0485355481505394,
      0.061490386724472046,
      0.004854985978454351,
      0.037618640810251236,
      0.003741066437214613,
      -0.006963873282074928,
      -0.0422385074198246,
      -0.06329959630966187,
      0.02807975560426712,
      -0.0007228523609228432,
      -0.012185243889689445,
      -0.034502267837524414,
      -2.789468453556765e-05,
      -0.0464957021176815,
      -0.019023507833480835,
      0.06351347267627716,
      -0.04402247816324234,
      0.015306820161640644,
      -0.05067676305770874,
      0.01673741638660431,
      -0.024069445207715034,
      0.030933959409594536,
      0.08782850205898285,
      0.026829969137907028,
      -0.029581524431705475,
      0.05606547370553017,
      -0.0745043158531189,
      -0.09019649773836136,
      -0.055067773908376694,
      0.0021370926406234503,
      0.029258236289024353,
      -0.01690591126680374,
      -0.002908413764089346,
      -0.04712943732738495,
      0.038116537034511566,
      -0.020279010757803917,
      -0.05048283562064171,
      -0.05534127354621887,
      0.11507127434015274,
      0.009241221472620964,
      -0.024303928017616272,
      0.061201076954603195,
      -0.026710912585258484,
      -0.054928846657276154,
      0.04984761402010918,
      0.0020919875241816044,
      0.06744277477264404,
      0.056925516575574875,
      -0.002353845862671733,
      -0.028852470219135284,
      -0.007728847675025463,
      -0.08625759184360504,
      -0.015899641439318657,
      -0.07702749967575073,
      -0.003512505441904068,
      0.0009423600859008729,
      -0.01259917113929987,
      0.08698389679193497,
      0.02233090251684189,
      0.10249081999063492,
      0.04922478273510933,
      -0.02534252405166626,
      -0.07503384351730347,
      -0.07090780884027481,
      0.032462913542985916,
      0.02487061358988285,
      8.365827990909136e-33,
      0.014562415890395641,
      0.05207502096891403,
      -0.06640790402889252,
      -0.022990863770246506,
      0.08557716012001038,
      -0.035134755074977875,
      -0.08778385818004608,
      -0.029755359515547752,
      -0.1023445650935173,
      0.01670604944229126,
      0.023344986140727997,
      0.0721699520945549,
      -0.06883741170167923,
      0.0026423130184412003,
      -0.026993436738848686,
      -0.0355081781744957,
      0.06026984006166458,
      -0.09289293736219406,
      -0.03293345868587494,
      -0.07175973057746887,
      -0.05072230473160744,
      0.023088430985808372,
      0.04124313220381737,
      -0.027093982324004173,
      -0.08545050024986267,
      0.06140188127756119,
      0.05909697711467743,
      0.02545665018260479,
      -0.013006335124373436,
      -0.024912213906645775,
      0.014407463371753693,
      0.006885383278131485,
      -0.04339414834976196,
      -0.019411053508520126,
      0.037310607731342316,
      -0.005380472168326378,
      -0.017402101308107376,
      -0.07795732468366623,
      -0.0030637779273092747,
      0.048818573355674744,
      -0.07482408732175827,
      0.015177357010543346,
      0.051912207156419754,
      -0.09279415756464005,
      0.002479995135217905,
      0.020986145362257957,
      0.09897474944591522,
      -0.022302180528640747,
      0.058849919587373734,
      0.07570968568325043,
      -0.010283111594617367,
      -0.009894616901874542,
      -0.10251431167125702,
      -0.05257793888449669,
      -0.017150944098830223,
      -0.08265160769224167,
      -0.016093142330646515,
      0.05881614238023758,
      0.022645944729447365,
      0.012260780669748783,
      0.10456859320402145,
      -0.014106983318924904,
      0.03482576459646225,
      -0.02547481097280979,
      0.030429504811763763,
      0.05805420130491257,
      -0.02614431269466877,
      0.013088494539260864,
      -0.050731100142002106,
      -0.05141695961356163,
      0.004405721090734005,
      -0.0036947419866919518,
      0.08376365900039673,
      0.05903131887316704,
      -0.03075798973441124,
      0.00845739059150219,
      0.007020847871899605,
      -0.07837098091840744,
      -0.010951081290841103,
      -0.04873930290341377,
      -0.054427869617938995,
      -0.013516976498067379,
      0.07229942828416824,
      -0.00069208670174703,
      -0.0652192160487175,
      -0.006231233943253756,
      0.042022984474897385,
      -0.010507872328162193,
      -0.05150194466114044,
      -0.03441880643367767,
      -0.15246659517288208,
      -0.09522944688796997,
      0.09508415311574936,
      -0.023898186162114143,
      -0.07609736174345016,
      -8.703651108340045e-33,
      0.009796506725251675,
      0.05002108961343765,
      -0.020350854843854904,
      0.0046915337443351746,
      0.018641196191310883,
      0.08208072185516357,
      0.13233883678913116,
      0.07153938710689545,
      0.02773897908627987,
      0.06385243684053421,
      0.03835129365324974,
      0.14022500813007355,
      -0.019947191700339317,
      -0.08035631477832794,
      0.013727008365094662,
      -0.006645953748375177,
      0.023986797779798508,
      0.08779790252447128,
      -0.021760713309049606,
      -0.045484114438295364,
      0.04646050184965134,
      0.10451428592205048,
      -0.05434945970773697,
      0.073237843811512,
      -0.008901427499949932,
      0.02914421074092388,
      0.07995975762605667,
      0.04666762053966522,
      -0.028574101626873016,
      0.046729687601327896,
      -0.009861989878118038,
      0.04893164709210396,
      0.011659861542284489,
      0.08178751170635223,
      -0.014301145449280739,
      -0.04278987646102905,
      -0.0020217045675963163,
      0.017972048372030258,
      -0.014540981501340866,
      -0.0387735553085804,
      -0.04658588767051697,
      -0.045242417603731155,
      0.012212592177093029,
      -0.05220282822847366,
      0.0261665191501379,
      0.015802577137947083,
      -0.1245473101735115,
      -0.006399631500244141,
      -0.04069013148546219,
      0.06196778640151024,
      -0.010628131218254566,
      -0.0015735593624413013,
      -0.005561301950365305,
      5.112761937198229e-05,
      -0.06661122292280197,
      -0.025016728788614273,
      -0.07944881916046143,
      0.007555474992841482,
      0.010561561211943626,
      0.0037211510352790356,
      -0.05331626534461975,
      0.02539394050836563,
      -0.03925660252571106,
      -0.07612469047307968,
      0.07163708657026291,
      0.054013874381780624,
      -0.06702366471290588,
      -0.07128754258155823,
      0.037719883024692535,
      0.03003355674445629,
      0.017470255494117737,
      0.0823790580034256,
      -0.01553261373192072,
      -0.04216701164841652,
      -0.053302738815546036,
      0.0036888655740767717,
      0.11558299511671066,
      0.025023140013217926,
      0.0909288078546524,
      -0.00239448226056993,
      0.022341826930642128,
      -0.010572724975645542,
      -0.0021680821664631367,
      0.03628932312130928,
      -0.032831523567438126,
      0.05659809708595276,
      0.008501342497766018,
      0.08185640722513199,
      0.05015508085489273,
      -0.10074904561042786,
      -0.06156492605805397,
      0.028003327548503876,
      0.10371121019124985,
      -0.02281971275806427,
      0.007029151543974876,
      -6.574131106162895e-08,
      0.01730351336300373,
      0.026453780010342598,
      -0.039703842252492905,
      0.06912251561880112,
      -0.0494774766266346,
      0.004584622569382191,
      -0.017032044008374214,
      -0.1403835564851761,
      -0.04946517571806908,
      -0.007853296585381031,
      0.0449676476418972,
      0.07045826315879822,
      0.010643397457897663,
      0.00538742495700717,
      -0.07817880064249039,
      0.02588273026049137,
      -0.08016438782215118,
      0.09184888750314713,
      -0.036543987691402435,
      0.013479076325893402,
      -0.03827770799398422,
      0.03397595137357712,
      0.0389416441321373,
      0.04975145310163498,
      -0.055577002465724945,
      -0.0704481229186058,
      -0.002761510433629155,
      0.04240864887833595,
      0.011719537898898125,
      -0.026897786185145378,
      -0.0034872537944465876,
      0.02683708444237709,
      0.04960247129201889,
      -0.030677005648612976,
      -0.0120547479018569,
      -0.039742592722177505,
      -0.09436066448688507,
      0.039632536470890045,
      0.027767935767769814,
      0.03222611919045448,
      0.03396156057715416,
      -0.02298363670706749,
      0.04993865266442299,
      -0.04000553861260414,
      0.0032153751235455275,
      -0.05702802911400795,
      -0.003008074825629592,
      -0.007899054326117039,
      0.005259588826447725,
      0.0522037073969841,
      0.044836536049842834,
      -0.06583341956138611,
      -0.07725310325622559,
      0.05726124346256256,
      0.07046211510896683,
      -0.07440084218978882,
      -0.04617435112595558,
      0.09503401815891266,
      -0.013342012651264668,
      0.05287932604551315,
      0.04141673818230629,
      0.010885394178330898,
      -0.015241198241710663,
      -0.019468111917376518
    ]
  },
  {
    "hash": "e68139b32a4916dce944df1679774e6319e49daa",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T15:18:44+01:00",
    "message": "font family change",
    "diff": "@@ -1,8 +1,7 @@\n-@import url('https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap');\n-\n .hero {\n   background-image: var(--background-image);\n-  background-color: var(--background-color);\n+  background-color: yellow;\n+  /* background-color: var(--background-color); */\n   border: 2px dashed rgba(0, 0, 0, 0.2);\n   font-family: 'Patrick Hand', cursive;\n   color: var(--text-color);\n@@ -1,4 +1,4 @@\n-import { Geist, Geist_Mono, Patrick_Hand } from \"next/font/google\";\n+import { Geist, Geist_Mono } from \"next/font/google\";\n import Link from \"next/link\";\n import { LuArrowRight } from \"react-icons/lu\";\n import \"./rootlayout.css\";\n@@ -14,14 +14,6 @@ const geistMono = Geist_Mono({\n   subsets: [\"latin\"],\n });\n \n-\n-const patrickHand = Patrick_Hand({\n-  subsets: [\"latin\"],\n-  weight: \"400\",\n-  variable: \"--font-patrick-hand\",\n-});\n-\n-\n export const metadata = {\n   title: \"Create Next App\",\n   description: \"Generated by create next app\",\n@@ -30,7 +22,6 @@ export const metadata = {\n export default function RootLayout({ children }) {\n   return (\n     <html lang=\"en\">\n-    \n       <body style={{ backgroundColor: \"var(--background-color)\" }}>\n         <div style={{ width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: 'center' }}>\n           <nav className=\"nav-container\">\n",
    "embedding": [
      -0.14267276227474213,
      0.07183724641799927,
      0.05180003494024277,
      -0.03876888379454613,
      0.013575782999396324,
      0.0006775338551960886,
      0.017066022381186485,
      0.03678785264492035,
      -0.010918627493083477,
      -0.014498507604002953,
      0.0002846693678293377,
      0.05408097431063652,
      0.009158400818705559,
      -0.021260185167193413,
      0.06297928839921951,
      0.05041208490729332,
      -0.04732381924986839,
      -0.053731415420770645,
      -0.013634517788887024,
      0.07271112501621246,
      0.011577087454497814,
      -0.0783446729183197,
      0.08885521441698074,
      0.01630891114473343,
      -0.048172950744628906,
      0.06168951839208603,
      0.045139383524656296,
      -0.01692059449851513,
      0.029858989641070366,
      -0.025654945522546768,
      -0.023097801953554153,
      0.03074350580573082,
      0.005752704571932554,
      0.0232742577791214,
      -0.06382173299789429,
      0.04757346957921982,
      0.0072957659140229225,
      0.021939067170023918,
      -0.011852746829390526,
      0.08644603192806244,
      0.09098675847053528,
      -0.02828415483236313,
      -0.003729107091203332,
      -0.05650225654244423,
      0.06075326353311539,
      0.06029115617275238,
      -0.0506286583840847,
      -0.017295068129897118,
      0.023362204432487488,
      0.013037752360105515,
      -0.06042860820889473,
      -0.07979841530323029,
      0.03009018860757351,
      -0.08083072304725647,
      0.005431001540273428,
      0.08557135611772537,
      0.05101267620921135,
      -0.08978691697120667,
      0.08764815330505371,
      0.029700109735131264,
      0.028042806312441826,
      0.02595353126525879,
      0.027899770066142082,
      -0.032857101410627365,
      0.018819712102413177,
      -0.03157807141542435,
      0.05871957540512085,
      -0.0035164726432412863,
      -0.04993806406855583,
      -0.03413841128349304,
      0.044163111597299576,
      0.0030999407172203064,
      0.06558384001255035,
      -0.018317820504307747,
      -0.04769739881157875,
      -0.0015085608465597034,
      0.045457690954208374,
      0.043484702706336975,
      -0.012914358638226986,
      -0.04093073680996895,
      -0.00404379004612565,
      -0.04399505630135536,
      0.01923258788883686,
      0.07397952675819397,
      0.06709923595190048,
      0.0483781136572361,
      -0.018546659499406815,
      -0.12187840044498444,
      -0.10685008764266968,
      -0.06748741120100021,
      0.015874311327934265,
      -0.08610104769468307,
      0.05714097619056702,
      -0.017053136602044106,
      -0.008212815970182419,
      0.020599540323019028,
      -0.012277698144316673,
      -0.08034403622150421,
      -0.046980906277894974,
      0.09173388034105301,
      -0.003939214162528515,
      -0.0728238970041275,
      0.05796342343091965,
      -0.03451976925134659,
      -0.01651146449148655,
      -0.005852269474416971,
      -0.011352801695466042,
      0.021511053666472435,
      -0.03010679967701435,
      -0.016712674871087074,
      0.06239206716418266,
      -0.03797457367181778,
      -0.05217794328927994,
      -0.06198786571621895,
      -0.058648791164159775,
      -0.0324736051261425,
      -0.06670044362545013,
      -0.021747983992099762,
      0.1284177303314209,
      0.00921222660690546,
      0.0929691269993782,
      0.046202823519706726,
      -0.03257828205823898,
      -0.03513199836015701,
      -0.0434517003595829,
      0.02394854463636875,
      0.0038976366631686687,
      3.6040116803493926e-33,
      0.07100600749254227,
      0.06739211827516556,
      -0.021042322739958763,
      -0.0306992270052433,
      0.013017233461141586,
      -0.02504373900592327,
      -0.14401760697364807,
      -0.06348548829555511,
      -0.09121023863554001,
      -0.06786810606718063,
      0.03663501888513565,
      0.07113942503929138,
      -0.0764182060956955,
      0.04715593159198761,
      -0.06898459792137146,
      0.009137539193034172,
      0.06905978918075562,
      -0.06980112195014954,
      0.04395970702171326,
      -0.07938594371080399,
      -0.03311280533671379,
      0.028740964829921722,
      0.014128174632787704,
      -0.06891323626041412,
      -0.031726278364658356,
      0.022456098347902298,
      0.026448871940374374,
      -0.008271563798189163,
      -0.021606527268886566,
      -0.03999603912234306,
      0.05319052189588547,
      0.04424873739480972,
      0.04845748469233513,
      0.07881840318441391,
      0.007514672819525003,
      -0.02804134227335453,
      -0.04887528717517853,
      -0.04894513636827469,
      -0.03804891183972359,
      0.05416064336895943,
      -0.027943409979343414,
      0.024870408698916435,
      -0.0015184958465397358,
      0.004255745559930801,
      0.0028703021816909313,
      0.09297921508550644,
      0.12341488152742386,
      -0.09242473542690277,
      0.01709316298365593,
      0.03574015945196152,
      -0.018837273120880127,
      0.012362533248960972,
      -0.08595654368400574,
      0.03536512702703476,
      -0.05931391939520836,
      -0.04531124234199524,
      0.006399592850357294,
      -0.02798142284154892,
      0.021669570356607437,
      -0.0769202932715416,
      0.07632555812597275,
      0.048332296311855316,
      0.065115787088871,
      0.021401336416602135,
      0.027410157024860382,
      0.0787903442978859,
      -0.016787102445960045,
      0.04444516822695732,
      -0.0037723567802459,
      -0.015838153660297394,
      0.021801436319947243,
      0.014041748829185963,
      0.09337589144706726,
      0.02331911213696003,
      -0.09302708506584167,
      -0.0031977808102965355,
      -0.02445477806031704,
      -0.0447288416326046,
      -0.06812386959791183,
      0.0028020390309393406,
      -0.041305769234895706,
      0.026911139488220215,
      -0.01953008770942688,
      0.00033911984064616263,
      -0.025572199374437332,
      -0.02638315036892891,
      0.04391823709011078,
      -0.07116377353668213,
      -0.013780515640974045,
      -0.0369478203356266,
      -0.06432624161243439,
      -0.09548553079366684,
      0.037351105362176895,
      -0.052913956344127655,
      -0.12742947041988373,
      -5.27773086290206e-33,
      0.001885710982605815,
      0.04484326019883156,
      0.0021849218755960464,
      0.04615684598684311,
      0.0186462439596653,
      -0.008718769997358322,
      0.13140833377838135,
      0.08867305517196655,
      0.05695236846804619,
      0.06953103095293045,
      0.02603747509419918,
      0.08556339889764786,
      0.018031999468803406,
      -0.060707174241542816,
      0.04154490679502487,
      0.01481061615049839,
      0.028096996247768402,
      0.11426223814487457,
      -0.00427046837285161,
      -0.03524601832032204,
      0.035778824239969254,
      0.03927156701683998,
      -0.0031085568480193615,
      0.028185438364744186,
      0.014186334796249866,
      0.028882887214422226,
      0.07406674325466156,
      -0.029234550893306732,
      -0.04314761236310005,
      -0.054808828979730606,
      -0.04220115765929222,
      -0.015366794541478157,
      0.012451649643480778,
      0.10176138579845428,
      0.03203515708446503,
      0.012329952791333199,
      -0.08470090478658676,
      0.0100650480017066,
      -0.00041023766971193254,
      0.02390616573393345,
      0.033689022064208984,
      -0.12424120306968689,
      0.06666626036167145,
      -0.0021800047252327204,
      0.01624949835240841,
      0.015402305871248245,
      -0.11886817216873169,
      0.011742020957171917,
      -0.042610831558704376,
      0.005346482153981924,
      0.0661909282207489,
      -0.01129916962236166,
      0.01423333864659071,
      -0.057834915816783905,
      -0.001011457061395049,
      -0.040722910314798355,
      0.008540724404156208,
      0.008931687101721764,
      -0.02926754578948021,
      0.08482039719820023,
      0.02498007006943226,
      -0.06415136158466339,
      -0.07988763600587845,
      -0.017886314541101456,
      0.013275272212922573,
      0.0066444044932723045,
      -0.14530052244663239,
      -0.03881340101361275,
      0.038105305284261703,
      0.030033349990844727,
      0.017501410096883774,
      0.03719246760010719,
      0.02981651946902275,
      -0.04426619037985802,
      0.005232020281255245,
      -0.013239985331892967,
      0.0032405690290033817,
      0.07168557494878769,
      0.07484733313322067,
      0.008332706987857819,
      -0.05312282592058182,
      -0.04171343892812729,
      -0.02479235827922821,
      0.024421414360404015,
      -0.013701003976166248,
      0.04028896614909172,
      -0.03549760580062866,
      0.0740780457854271,
      0.06654637306928635,
      -0.04792637377977371,
      -0.05183993652462959,
      0.059943750500679016,
      0.07509901374578476,
      -0.015646303072571754,
      0.020266840234398842,
      -5.6187666075402376e-08,
      0.06869171559810638,
      -0.04004842787981033,
      0.0017706580692902207,
      0.05351318418979645,
      -0.035596590489149094,
      -0.05769135430455208,
      -0.03069387748837471,
      -0.13049839437007904,
      -0.05537312850356102,
      0.016284866258502007,
      -0.022699758410453796,
      0.11915839463472366,
      -0.02539362758398056,
      -0.04122816026210785,
      -0.04763323813676834,
      0.0320637971162796,
      -0.08465665578842163,
      0.019414177164435387,
      -0.005521742627024651,
      -0.03133223205804825,
      -0.021311398595571518,
      -0.002696469658985734,
      -0.01755775325000286,
      0.03400372341275215,
      -0.05890888348221779,
      -0.04154549911618233,
      -0.04927210882306099,
      0.026129858568310738,
      -0.0562775544822216,
      0.036645565181970596,
      0.03766394779086113,
      -0.008087181486189365,
      -0.04432879388332367,
      -0.061167653650045395,
      0.01690938137471676,
      -0.07639554142951965,
      -0.07919622957706451,
      -0.04094952344894409,
      0.06971129775047302,
      0.05766833946108818,
      0.024517348036170006,
      -0.010046410374343395,
      0.011552447453141212,
      0.01268805842846632,
      -0.018249019980430603,
      -0.01914655789732933,
      0.06276781111955643,
      -0.003442412707954645,
      0.028496744111180305,
      0.03496796265244484,
      -0.02658909372985363,
      -0.04766012728214264,
      -0.08062911033630371,
      0.013331050053238869,
      0.013055596500635147,
      -0.08648864924907684,
      0.01924268715083599,
      0.10365080833435059,
      -0.0011020153760910034,
      0.06943285465240479,
      0.044624213129282,
      0.04299241676926613,
      0.01589041016995907,
      0.027557605877518654
    ]
  },
  {
    "hash": "c476851dca2f544b7826d1218f8dab704a5eba20",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T14:47:07+01:00",
    "message": "background color change",
    "diff": "@@ -1,7 +1,6 @@\n .hero {\n   background-image: var(--background-image);\n-  background-color: yellow;\n-  /* background-color: var(--background-color); */\n+  background-color: var(--background-color);\n   border: 2px dashed rgba(0, 0, 0, 0.2);\n   font-family: 'Patrick Hand', cursive;\n   color: var(--text-color);\n",
    "embedding": [
      -0.06157925724983215,
      0.08564405888319016,
      3.046953133889474e-05,
      -0.02501676231622696,
      0.0621870793402195,
      0.03706783056259155,
      0.03817916661500931,
      0.033431392163038254,
      0.007582259364426136,
      0.04096860811114311,
      -0.03572337329387665,
      0.05812760815024376,
      -0.02024604193866253,
      -0.029913831502199173,
      0.07813486456871033,
      0.04465271532535553,
      -0.05786356329917908,
      -0.028809642419219017,
      -0.03480900824069977,
      0.07731854170560837,
      -0.06155030056834221,
      -0.06881939619779587,
      0.03302287682890892,
      0.022542713209986687,
      -0.0589463897049427,
      0.030743282288312912,
      0.05191785842180252,
      0.025217624381184578,
      0.022511737421154976,
      -0.07550673186779022,
      -0.06706950813531876,
      0.01910104788839817,
      0.06436342746019363,
      0.016109194606542587,
      -0.019035469740629196,
      -0.03323204442858696,
      0.03402833268046379,
      0.06022233888506889,
      -0.06566571444272995,
      0.0595293864607811,
      0.0633971244096756,
      -0.046732887625694275,
      -0.010938278399407864,
      -0.05634600296616554,
      0.07493054121732712,
      0.02229406125843525,
      -0.045783545821905136,
      -0.010528858751058578,
      0.01883378066122532,
      0.029908983036875725,
      -0.023338977247476578,
      -0.09402358531951904,
      0.031231259927153587,
      -0.09094007313251495,
      0.01182953268289566,
      0.07632488757371902,
      0.08105601370334625,
      -0.05414029210805893,
      0.13102424144744873,
      0.004332656506448984,
      0.03480522707104683,
      0.06095011532306671,
      -0.011734708212316036,
      -0.01862313412129879,
      0.04017467051744461,
      -0.0972975641489029,
      -0.000830153760034591,
      0.009165472351014614,
      -0.012439828366041183,
      -0.062322840094566345,
      0.06340401619672775,
      0.020222855731844902,
      0.11419384926557541,
      -0.10419978946447372,
      0.003546331310644746,
      -0.013989372178912163,
      0.02255868725478649,
      -0.01828654482960701,
      0.036788638681173325,
      -0.02712848223745823,
      -0.0044423541985452175,
      -0.03256997838616371,
      -0.026272185146808624,
      0.058274805545806885,
      0.03223864361643791,
      0.0669848620891571,
      0.009173020720481873,
      -0.10341453552246094,
      -0.09935382753610611,
      -0.07370742410421371,
      -0.02131979539990425,
      -0.04047628492116928,
      -0.010532653890550137,
      -0.0031761573627591133,
      -0.08998210728168488,
      0.002634876873344183,
      0.027290668338537216,
      -0.14917993545532227,
      0.013393628410995007,
      0.109496109187603,
      0.0057717300951480865,
      -0.08327619731426239,
      0.08530931174755096,
      0.018247097730636597,
      0.08180075138807297,
      -0.0025051510892808437,
      -0.0026924738194793463,
      0.02686135843396187,
      -0.025596238672733307,
      -0.01315050944685936,
      0.0921957865357399,
      -0.056208062916994095,
      -0.06109623983502388,
      -0.01175310555845499,
      0.04328979551792145,
      -0.006807757541537285,
      -0.0367460735142231,
      0.02080540731549263,
      0.07212024182081223,
      -0.037651654332876205,
      0.10308915376663208,
      0.0812477245926857,
      -0.03244404122233391,
      -0.04866500571370125,
      -0.041501641273498535,
      0.0033473449293524027,
      0.0836709588766098,
      6.603223435677056e-33,
      0.10303997993469238,
      0.04686041176319122,
      -0.0405053049325943,
      0.005797727033495903,
      0.016747700050473213,
      -0.030025716871023178,
      -0.08227062225341797,
      -0.08032335340976715,
      -0.03385309875011444,
      -0.013964919373393059,
      0.09640298038721085,
      0.0025922777131199837,
      -0.030905460938811302,
      0.06879667937755585,
      -0.019268007948994637,
      -0.03543657064437866,
      0.038972701877355576,
      -0.054925791919231415,
      0.03933361917734146,
      -0.016818664968013763,
      -0.029331600293517113,
      -0.00477361585944891,
      -0.044008005410432816,
      0.009636826813220978,
      -0.026639601215720177,
      0.03395986929535866,
      0.037612345069646835,
      -0.005213937722146511,
      0.0047985585406422615,
      -0.03735167533159256,
      0.11662065237760544,
      0.09504679590463638,
      0.0673542469739914,
      0.06590943783521652,
      -0.008794608525931835,
      -0.028218651190400124,
      -0.08654498308897018,
      -0.0018568383529782295,
      0.01289532333612442,
      0.08440246433019638,
      -0.015873011201620102,
      -0.015595926903188229,
      -0.08443430811166763,
      0.029209835454821587,
      0.020311368629336357,
      0.003828198416158557,
      0.1372486799955368,
      -0.060894135385751724,
      -0.0027009141631424427,
      0.025516141206026077,
      -0.05774180218577385,
      0.03157756105065346,
      -0.0428629145026207,
      -0.01321575790643692,
      -0.042856890708208084,
      -0.04648270085453987,
      0.07457899302244186,
      0.028465768322348595,
      0.03950105607509613,
      -0.09717594087123871,
      0.11984534561634064,
      -0.004104395397007465,
      0.0016973345773294568,
      -0.012499148957431316,
      0.04766695201396942,
      0.014698701910674572,
      -0.024231674149632454,
      0.035938385874032974,
      0.0007779031293466687,
      -0.05365966260433197,
      0.014675228856503963,
      0.047341953963041306,
      0.07227823138237,
      -0.038038548082113266,
      -0.061856359243392944,
      -0.029606647789478302,
      -0.021001461893320084,
      0.005019895266741514,
      -0.10629740357398987,
      -0.019082602113485336,
      -0.08793480694293976,
      0.10722590982913971,
      -0.04784888029098511,
      0.002537687309086323,
      -0.052741993218660355,
      -0.0026082671247422695,
      0.05006437748670578,
      -0.017614515498280525,
      -5.6327633501496166e-05,
      -0.06343172490596771,
      0.0062463898211717606,
      -0.06504148989915848,
      0.016638603061437607,
      -0.06591983884572983,
      -0.08233267068862915,
      -6.34204254991976e-33,
      -0.019749706611037254,
      0.076863132417202,
      -0.046842023730278015,
      0.07216333597898483,
      0.058341316878795624,
      -0.06152520328760147,
      0.10155627131462097,
      0.06554408371448517,
      0.02983682230114937,
      0.045123420655727386,
      -0.001714602462016046,
      0.05528855323791504,
      -0.058368150144815445,
      -0.029576817527413368,
      0.051710646599531174,
      0.030636291950941086,
      -0.025674939155578613,
      0.1149640902876854,
      -0.02940717153251171,
      0.015629570931196213,
      -0.029033280909061432,
      -0.029334764927625656,
      -0.0027703188825398684,
      0.03983224555850029,
      0.004544520750641823,
      -0.0018626701785251498,
      -0.0012977495789527893,
      -0.026879921555519104,
      -0.0018343075644224882,
      -0.03703823685646057,
      -0.041987963020801544,
      -0.009863792918622494,
      0.027667218819260597,
      0.1216869130730629,
      -0.012382962740957737,
      -0.016246389597654343,
      -0.04100478067994118,
      0.0007976513006724417,
      -0.06097942218184471,
      0.028371086344122887,
      0.0341719351708889,
      -0.09840333461761475,
      0.009700339287519455,
      -0.030828384682536125,
      -0.02226901426911354,
      0.039251625537872314,
      -0.006153109483420849,
      0.019934317097067833,
      -0.0052694352343678474,
      -0.02865271270275116,
      0.07889427244663239,
      -0.04116729646921158,
      0.05437435582280159,
      -0.050808459520339966,
      0.016451885923743248,
      -0.004662145860493183,
      0.0329674556851387,
      0.02044360153377056,
      0.036205925047397614,
      0.15040728449821472,
      0.025315292179584503,
      0.00961031299084425,
      -0.07468655705451965,
      -0.03032153658568859,
      -0.004498795606195927,
      0.014056776650249958,
      -0.10017627477645874,
      -0.031306859105825424,
      -0.026805607602000237,
      -0.014223060570657253,
      0.016133401542901993,
      0.022612236440181732,
      0.009421370923519135,
      -0.006765442434698343,
      -0.00481680640950799,
      -0.05658694729208946,
      -0.008835848420858383,
      0.017516998574137688,
      0.030541671440005302,
      0.062178779393434525,
      -0.06842678040266037,
      -0.08131009340286255,
      -0.03801736235618591,
      0.012196010909974575,
      0.0028723508585244417,
      0.13718800246715546,
      -0.028958449140191078,
      0.049325793981552124,
      0.0317513644695282,
      -0.06762426346540451,
      -0.04245210811495781,
      0.08737824112176895,
      0.0767291709780693,
      -0.03867946192622185,
      0.011642874218523502,
      -4.719574775435831e-08,
      0.08288796246051788,
      -0.08035469055175781,
      0.00010079031926579773,
      0.050192806869745255,
      -0.03005794622004032,
      -0.022921806201338768,
      0.004588298033922911,
      -0.11363144218921661,
      0.0074508604593575,
      0.00310118542984128,
      -0.0623323917388916,
      0.06516595929861069,
      -0.005770394578576088,
      -0.04277278482913971,
      -0.03571042791008949,
      0.050284016877412796,
      -0.059703849256038666,
      -0.026352060958743095,
      0.01067005842924118,
      -0.03885205462574959,
      -0.0545923225581646,
      -0.015004903078079224,
      -0.05745695158839226,
      -0.025476966053247452,
      -0.03798489272594452,
      -4.759532384923659e-05,
      -0.06712081283330917,
      0.0437345877289772,
      -0.06105571985244751,
      0.02681398205459118,
      0.060957226902246475,
      0.03863077983260155,
      -0.03446786478161812,
      -0.08059511333703995,
      0.05841362476348877,
      -0.028370235115289688,
      -0.030605938285589218,
      -0.012796824797987938,
      -0.0016479883342981339,
      -0.003648153506219387,
      0.06930742412805557,
      -0.020828308537602425,
      -0.04441335052251816,
      -0.00785011611878872,
      -0.05548166111111641,
      -0.0008849577279761434,
      0.045012205839157104,
      -0.07102545350790024,
      -0.028334898874163628,
      -0.05336880683898926,
      -0.021085435524582863,
      -0.061176758259534836,
      -0.016382617875933647,
      0.013895228505134583,
      0.007874627597630024,
      -0.020616933703422546,
      0.05712895095348358,
      0.050989650189876556,
      0.009388638660311699,
      0.058694541454315186,
      0.007676274515688419,
      -0.03589356318116188,
      -0.02671753615140915,
      0.029235441237688065
    ]
  },
  {
    "hash": "1ff55ce9eeeea71190f93211970a9371e30f4226",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T14:26:53+01:00",
    "message": "responsive hero page",
    "diff": "@@ -105,14 +105,14 @@\n   font-size: 1rem; \n   display: flex;\n   align-items: center;\n-  gap: 8px; \n+  gap: 8px; /* Space between icon and text */\n   cursor: pointer;\n-  transition: all 0.3s ease;\n+  transition: all 0.3s ease; /* Smooth transition for hover effects */\n }\n \n .btn-div button:hover {\n   opacity: 0.9;\n-  transform: translateY(-2px); \n+  transform: translateY(-2px); /* Slight lift on hover */\n }\n \n .btn-div button a {\n@@ -120,31 +120,34 @@\n   color: white;\n }\n \n+/* --- Media Queries --- */\n \n+/* For screens smaller than 1024px (e.g., tablets in landscape) */\n @media (max-width: 1024px) {\n   .hero-page {\n-    flex-direction: column; \n-    height: auto;\n+    flex-direction: column; /* Stack elements vertically */\n+    height: auto; /* Allow height to adjust */\n     padding: 20px 15px;\n   }\n \n   .hero-container,\n   .second-half {\n-    width: 100%; \n+    width: 100%; /* Take full width */\n     padding: 15px;\n   }\n \n   .hero-text,\n   .hero-container ul {\n-    width: 90%; \n-    max-width: none; \n+    width: 90%; /* Adjust width for smaller screens */\n+    max-width: none; /* Remove max-width constraint */\n   }\n \n   .btn-div {\n-    margin-top: 50px; \n+    margin-top: 50px; /* Adjust margin for smaller screens */\n   }\n }\n \n+/* For screens smaller than 768px (e.g., tablets in portrait and larger phones) */\n @media (max-width: 768px) {\n   .hero-page {\n     padding: 15px 10px;\n@@ -157,7 +160,7 @@\n \n   .hero-text,\n   .hero-container ul {\n-    width: 95%; \n+    width: 95%; /* Make content slightly wider */\n   }\n \n   .hero-text h2 {\n@@ -182,6 +185,7 @@\n   }\n }\n \n+/* For screens smaller than 640px (e.g., typical mobile phones) */\n @media (max-width: 640px) {\n   .hero-page {\n     padding: 10px;\n@@ -189,16 +193,15 @@\n \n   .hero-container {\n     padding: 10px;\n-\n   }\n \n   .hero-text {\n-    width: 80%; \n+    width: 100%; /* Full width on smallest screens */\n     margin-bottom: 15px;\n   }\n \n   .hero-container ul {\n-    width: 80%; \n+    width: 100%; /* Full width for list */\n   }\n \n   .hero-text h2 {\n@@ -218,13 +221,13 @@\n   }\n \n   .terminal-container {\n-    width: 95%; \n+    width: 95%; /* Nearly full width for terminal */\n   }\n \n   .btn-div {\n-    margin-top: 30px; \n-    height: auto; \n-    padding-bottom: 20px; \n+    margin-top: 30px; /* Reduce top margin further */\n+    height: auto; /* Allow height to adjust */\n+    padding-bottom: 20px; /* Add some bottom padding */\n   }\n \n   .btn-div button {\n",
    "embedding": [
      -0.08270462602376938,
      0.04871964454650879,
      -0.0009157961467280984,
      -0.057853709906339645,
      0.07142289727926254,
      0.009834548458456993,
      -0.021239599213004112,
      0.05221950262784958,
      0.01996159553527832,
      0.07025405764579773,
      0.041993606835603714,
      0.09458617866039276,
      0.011581527069211006,
      0.006247174926102161,
      0.08061502128839493,
      0.0614691823720932,
      -0.07311051338911057,
      -0.02089763432741165,
      -0.040106240659952164,
      0.10215552896261215,
      0.02114449255168438,
      -0.09820649772882462,
      0.04059125855565071,
      0.0016370908124372363,
      -0.11272022873163223,
      0.011644471436738968,
      -0.014765478670597076,
      0.022600870579481125,
      0.007377274800091982,
      -0.07765694707632065,
      -0.016399681568145752,
      0.028423897922039032,
      -0.01828651688992977,
      -0.0048970007337629795,
      -0.026676801964640617,
      -0.020911065861582756,
      0.020175771787762642,
      -0.0018412396311759949,
      -0.08427674323320389,
      -0.007610652130097151,
      0.0014251212123781443,
      -0.03075891174376011,
      0.05122341215610504,
      -0.0018049930222332478,
      0.055567000061273575,
      -0.07009103149175644,
      -0.05248922109603882,
      0.005541143473237753,
      0.009544682689011097,
      0.06416202336549759,
      -0.04851251840591431,
      -0.0023061037063598633,
      0.06857730448246002,
      -0.033940378576517105,
      -0.08228567987680435,
      0.04422280937433243,
      0.06801541149616241,
      -0.05662515386939049,
      0.08514620363712311,
      -0.004870357923209667,
      0.04667886346578598,
      0.03960014134645462,
      0.07713112980127335,
      0.005996557418256998,
      0.05369671806693077,
      -0.024287955835461617,
      -0.00023822028015274554,
      -0.03473683446645737,
      -0.03335419297218323,
      0.0008972747018560767,
      0.018479155376553535,
      -0.11142124980688095,
      0.04076434671878815,
      -0.06394845247268677,
      -0.0025450147222727537,
      -0.09770094603300095,
      0.052527863532304764,
      0.05086401104927063,
      -0.010136708617210388,
      0.03762689605355263,
      0.0484558530151844,
      -0.014251870103180408,
      -0.027201464399695396,
      0.01111199613660574,
      -0.012713965959846973,
      -0.06742727756500244,
      0.005688129924237728,
      -0.0816073790192604,
      -0.08331345021724701,
      0.005805518478155136,
      0.00938416738063097,
      -0.015962837263941765,
      -0.04779619723558426,
      -0.013163983821868896,
      0.008875281549990177,
      -0.08089049905538559,
      -0.012566136196255684,
      -0.16432404518127441,
      -0.027384044602513313,
      0.11480750143527985,
      0.004237166605889797,
      0.026006251573562622,
      0.07840844988822937,
      -0.03742087632417679,
      -0.006173469591885805,
      0.01672787219285965,
      0.006654519122093916,
      -0.005067434627562761,
      -0.03560883551836014,
      0.05149652436375618,
      0.0776033028960228,
      -0.00800031702965498,
      -0.10067486763000488,
      0.03173132985830307,
      -0.012303908355534077,
      -0.009201789274811745,
      -0.03588615730404854,
      0.009291044436395168,
      0.13788747787475586,
      -0.0775756984949112,
      0.0835786685347557,
      0.07772915065288544,
      -0.08497332036495209,
      -0.05766027048230171,
      0.026429591700434685,
      0.13501498103141785,
      -0.025125181302428246,
      5.1629012278740465e-33,
      0.04924752563238144,
      0.0030866507440805435,
      -0.06757085770368576,
      0.053475331515073776,
      -0.0022634495981037617,
      0.010239087976515293,
      -0.0024992346297949553,
      0.003162180772051215,
      0.0016402703477069736,
      -0.042308587580919266,
      0.07510048151016235,
      -0.018178122118115425,
      0.0008561041322536767,
      0.013539871200919151,
      -0.02190137840807438,
      -0.11018655449151993,
      0.03700103983283043,
      -0.051905203610658646,
      -0.01937500201165676,
      -0.03274688869714737,
      0.010410480201244354,
      -0.049041349440813065,
      -0.03434865549206734,
      0.003970216494053602,
      -0.017387058585882187,
      0.07967781275510788,
      0.022000757977366447,
      0.015690002590417862,
      -0.030153388157486916,
      -0.02758396789431572,
      0.0061362446285784245,
      0.010583251714706421,
      0.043391045182943344,
      -0.057109467685222626,
      0.04306286573410034,
      -0.01586320623755455,
      -0.057031113654375076,
      -0.05149218812584877,
      0.08847130835056305,
      0.04169294610619545,
      -0.09778938442468643,
      -0.03554362431168556,
      0.02941701002418995,
      0.01172462198883295,
      -0.02255210466682911,
      0.03546460345387459,
      0.06981919705867767,
      -0.061990898102521896,
      0.011466027237474918,
      -0.022323567420244217,
      -0.03669597581028938,
      -0.011334414593875408,
      -0.06426800787448883,
      -0.0835350751876831,
      0.0432962067425251,
      -0.11456111073493958,
      0.011976273730397224,
      0.029982035979628563,
      0.034112393856048584,
      -0.03647032007575035,
      0.08757346123456955,
      -0.08449658006429672,
      -0.006394382566213608,
      -0.061863385140895844,
      0.015288694761693478,
      0.010533837601542473,
      0.004723523277789354,
      0.06973634660243988,
      0.048411160707473755,
      -0.05034881830215454,
      0.012292427942156792,
      -0.01809823513031006,
      0.15959270298480988,
      -0.07238277792930603,
      -0.02733151614665985,
      0.03156156465411186,
      -0.018216973170638084,
      -0.11976076662540436,
      -0.028838682919740677,
      -0.027260197326540947,
      -0.05779365450143814,
      0.042975280433893204,
      -0.007352815475314856,
      0.025602398440241814,
      -0.06816135346889496,
      -0.05563247948884964,
      0.0008600683067925274,
      -0.0860210657119751,
      -0.004681302700191736,
      -0.1209610104560852,
      -0.0691986083984375,
      -0.022358564659953117,
      0.06420004367828369,
      -0.04698243737220764,
      -0.05179322138428688,
      -5.9853071977520586e-33,
      0.026189960539340973,
      0.013252471573650837,
      0.0063240104354918,
      0.057256147265434265,
      0.0005224053165875375,
      -0.02834317460656166,
      0.08271516114473343,
      0.06811832636594772,
      0.016673726961016655,
      0.004225599113851786,
      -0.0566561333835125,
      0.007997480221092701,
      -0.04514516890048981,
      -0.10747087746858597,
      0.050752028822898865,
      0.12523317337036133,
      0.0415838323533535,
      -0.007587451953440905,
      0.05326121672987938,
      0.0637475773692131,
      0.04817347601056099,
      0.044402413070201874,
      0.06400450319051743,
      0.08058011531829834,
      0.06086758151650429,
      -0.0488346591591835,
      0.025989435613155365,
      0.0008604747708886862,
      0.0657087042927742,
      0.01589982397854328,
      -0.037820104509592056,
      -0.0502786859869957,
      0.07210659980773926,
      0.03631959855556488,
      0.02931305393576622,
      -0.012380914762616158,
      -0.04194595664739609,
      -0.02458963543176651,
      0.0018928523641079664,
      -0.01603172905743122,
      0.028864974156022072,
      -0.07138258218765259,
      0.048607002943754196,
      -0.037912096828222275,
      0.03906436637043953,
      0.03263561800122261,
      -0.016719548031687737,
      -0.028480688109993935,
      -0.05983594059944153,
      -0.003484091255813837,
      0.05886724218726158,
      0.027084670960903168,
      -0.01139410212635994,
      -0.101835697889328,
      -0.00936958659440279,
      -0.04776341840624809,
      -0.05251030623912811,
      -0.01236764807254076,
      -0.05157425254583359,
      -0.007238830905407667,
      0.05822790786623955,
      0.011822149157524109,
      -0.048097677528858185,
      0.003957400098443031,
      0.024884264916181564,
      0.1318434178829193,
      -0.03102049231529236,
      -0.007138707209378481,
      -0.029035659506917,
      0.0787501335144043,
      -0.02279009483754635,
      0.0753435418009758,
      0.08155687153339386,
      -0.06281469017267227,
      0.02607051096856594,
      -0.03357258066534996,
      0.0710235983133316,
      -0.07658276706933975,
      0.03620591014623642,
      -0.0915265679359436,
      -0.05366352200508118,
      -0.010527828708291054,
      0.0035031598526984453,
      -0.028756730258464813,
      -0.07296369224786758,
      0.09269759804010391,
      -0.030886543914675713,
      0.010595474392175674,
      -0.027365034446120262,
      0.04534698277711868,
      -0.05231749266386032,
      0.00962766632437706,
      0.09180887043476105,
      -0.03161129355430603,
      0.018473073840141296,
      -5.7910177986286726e-08,
      0.050119075924158096,
      -0.034289054572582245,
      0.04177984967827797,
      0.03451141342520714,
      -0.022259166464209557,
      0.026773162186145782,
      0.0694616511464119,
      -0.08111628144979477,
      0.01879144459962845,
      -0.0022935608867555857,
      -0.028470385819673538,
      0.0733630433678627,
      0.001985318958759308,
      0.017452089115977287,
      0.02590959519147873,
      0.06901253759860992,
      -0.04055051878094673,
      0.09330493211746216,
      -0.029239149764180183,
      0.005967176519334316,
      -0.04185620695352554,
      0.06860408186912537,
      0.0017922648694366217,
      0.0027753938920795918,
      -0.08396401256322861,
      0.07992300391197205,
      -0.10891857743263245,
      0.014199608005583286,
      0.0579669326543808,
      -0.07811165601015091,
      -0.015184902586042881,
      -0.020923804491758347,
      0.002271291334182024,
      -0.04719522222876549,
      0.029832055792212486,
      -0.03274013102054596,
      -0.005165803711861372,
      -0.0021428207401186228,
      0.005893516819924116,
      -0.005310351960361004,
      -0.01403102558106184,
      -0.0009237310732714832,
      -0.028718894347548485,
      0.02072148211300373,
      -0.04357885196805,
      -0.07300511002540588,
      -0.03244367986917496,
      0.012894018553197384,
      -0.023715205490589142,
      0.038546979427337646,
      0.001859156647697091,
      -0.06446263194084167,
      -0.032910820096731186,
      0.009834064170718193,
      0.03966745361685753,
      -0.0027361081447452307,
      -0.005717711057513952,
      0.0553567111492157,
      -0.007779947016388178,
      0.05369186773896217,
      0.05645919218659401,
      0.03482644632458687,
      -0.04444214329123497,
      0.0133277028799057
    ]
  },
  {
    "hash": "3f142c62bb48249725bb9ec0924fa3129d6a6a7a",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T06:50:40+01:00",
    "message": "responsive hero page",
    "diff": "@@ -1,237 +1,183 @@\n-.hero {\n-  background-image: var(--background-image);\n-  background-color: var(--background-color);\n-  border: 2px dashed rgba(0, 0, 0, 0.2);\n-  font-family: 'Patrick Hand', cursive;\n-  color: var(--text-color);\n-  padding-top: 40px;\n-  border-top: none;\n+.hero{\n+background-image: var(--background-image);\n+background-color: var(--background-color);\n+border: 2px dashed rgba(0,0,0,0.2);\n+font-family: 'Patrick Hand', cursive;\n+color: var(--text-color);\n+padding-top: 40px;\n+border-top: none;\n+width: 100%;\n+\n+/* background: #F9F9F9 url('/paper-texture.png');\n+color: #333;\n+font-family: 'Fira Code', monospace;\n+border: 1px solid #ccc;\n+border-radius: 8px;\n+box-shadow: 0 5px 10px rgba(0,0,0,0.1); */\n+\n+/* background-color: #FAF9F6;\n+border: 1px solid rgba(0,0,0,0.1);\n+box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n+font-family: 'Georgia', serif; */\n+\n+/* background-color: #faf9f6;\n+background-image: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\"); */\n+\n+/* background-color: #faf9f6;\n+background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='16' viewBox='0 0 12 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4 .99C4 .445 4.444 0 5 0c.552 0 1 .45 1 .99v4.02C6 5.555 5.556 6 5 6c-.552 0-1-.45-1-.99V.99zm6 8c0-.546.444-.99 1-.99.552 0 1 .45 1 .99v4.02c0 .546-.444.99-1 .99-.552 0-1-.45-1-.99V8.99z' fill='%23c0c0c0' fill-opacity='0.32' fill-rule='evenodd'/%3E%3C/svg%3E\");\n+\n+    \n+\n+background-color: #faf9f6;\n+background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='199' viewBox='0 0 100 199'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32'%3E%3Cpath d='M0 199V0h1v1.99L100 199h-1.12L1 4.22V199H0zM100 2h-.12l-1-2H100v2z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\"); */\n+/* \n+background-color: #faf9f6;\n+background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); */\n+}\n+\n+.hero-page{\n+    height: 100vh;\n+    display: flex;\n+        /* background: linear-gradient(135deg, #0f2027, #203a43, #2c5364); */\n+\n+    \n+}\n+\n+.hero-container{\n+    width: 50%;\n+    display: flex;\n+    align-items: center;\n+    justify-content:center;\n+    flex-direction: column;\n+    /* font-family: 'Fira Code', 'Consolas', 'Menlo', 'Courier New', monospace; */\n+    \n+\n+    .hero-text{\n+        align-items: center;\n+        width: 60%;\n+        /* background-color: hotpink; */\n+       \n+    }\n+  \n+h2 {\n   width: 100%;\n-  box-sizing: border-box; \n-}\n-\n-.hero-page {\n-  height: 100vh;\n-  display: flex;\n-  flex-direction: row;\n-  justify-content: center;\n-  align-items: center;\n-  padding: 0 20px; \n-}\n-\n-.hero-container {\n-  width: 50%; \n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  flex-direction: column;\n-  padding: 20px; \n-  text-align: center; \n-}\n-\n-.hero-text {\n-  width: 80%; \n-  max-width: 500px; \n-  margin-bottom: 20px; \n-  text-align: left;\n-}\n-\n-.hero-text h2 {\n-  font-size: clamp(1.5rem, 5vw, 2.5rem);\n+  font-size: 35px;\n   background-color: #4A6FA5;\n   background-clip: text;\n   -webkit-background-clip: text;\n   -webkit-text-fill-color: transparent;\n   display: inline-block;\n-  margin-bottom: 10px;\n+  \n }\n \n-.hero-text p {\n-  font-size: clamp(1rem, 2vw, 1.2rem); \n-  line-height: 1.5;\n-  margin-bottom: 20px;\n-}\n \n-.hero-container ul {\n-  list-style: none;\n-  width: 80%;\n-  max-width: 500px; \n-  padding: 0; \n-  margin: 0; \n-  text-align: left;\n-}\n+    p{\n+        /* background-color: gold; */\n+        width: 100%;\n+        font-size: 15px;\n \n-.hero-container ul li {\n-  display: flex;\n-  align-items: flex-start; \n-  margin-bottom: 10px;\n-  font-size: clamp(0.9rem, 1.8vw, 1.1rem); \n-}\n+    }\n \n-.hero-container ul li .fa-check {\n-  margin-right: 8px; \n-  flex-shrink: 0; \n-  font-size: 14px; \n-  color: #4A6FA5;\n-}\n+    ul{\n+        /* background-color: blanchedalmond; */\n+     list-style: none;\n+         width: 65%;\n \n-.second-half {\n-  width: 50%;\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  padding: 20px;\n+    }\n }\n \n-.terminal-container {\n-  width: 90%;\n-  max-width: 600px; \n+.list-span{\n+    display: flex;\n+  \n }\n \n-.btn-div {\n-  height: 10vh;\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  margin-top: 20px; \n-}\n \n-.btn-div button {\n-  padding: 10px 20px; \n-  border: 1px solid grey;\n-  background: linear-gradient(135deg, #4A6FA5, #85B3D1);\n-  border-radius: 5px;\n-  color: #dcdcdc !important;\n-  font-size: 1rem; \n-  display: flex;\n-  align-items: center;\n-  gap: 8px; /* Space between icon and text */\n-  cursor: pointer;\n-  transition: all 0.3s ease; /* Smooth transition for hover effects */\n+.second-half{\n+    width: 50%;\n+    display: flex;\n+    align-items: center;\n+    justify-content: center;\n+    /* background-color: bisque; */\n }\n \n-.btn-div button:hover {\n-  opacity: 0.9;\n-  transform: translateY(-2px); /* Slight lift on hover */\n-}\n+.terminal-container{\n+    /* background-color: rgb(102, 61, 61); */\n+    width: 70%;\n+    /* border: 2px solid saddlebrown;*/\n+} \n \n-.btn-div button a {\n-  text-decoration: none;\n-  color: white;\n-}\n+.terminal-div{\n+    /* background-color: sandybrown; */\n+    height: 100%;\n+\n+\n+    pre{\n+            border-left: 22px solid rgb(228, 232, 232);\n+            border-right: 22px solid rgb(235, 240, 240);\n+    padding-top: 20px;\n+    padding-bottom: 20px;\n+    overflow: scroll;\n \n-/* --- Media Queries --- */\n-\n-/* For screens smaller than 1024px (e.g., tablets in landscape) */\n-@media (max-width: 1024px) {\n-  .hero-page {\n-    flex-direction: column; /* Stack elements vertically */\n-    height: auto; /* Allow height to adjust */\n-    padding: 20px 15px;\n-  }\n-\n-  .hero-container,\n-  .second-half {\n-    width: 100%; /* Take full width */\n-    padding: 15px;\n-  }\n-\n-  .hero-text,\n-  .hero-container ul {\n-    width: 90%; /* Adjust width for smaller screens */\n-    max-width: none; /* Remove max-width constraint */\n-  }\n-\n-  .btn-div {\n-    margin-top: 50px; /* Adjust margin for smaller screens */\n-  }\n+    }\n }\n \n-/* For screens smaller than 768px (e.g., tablets in portrait and larger phones) */\n-@media (max-width: 768px) {\n-  .hero-page {\n-    padding: 15px 10px;\n-  }\n-\n-  .hero-container,\n-  .second-half {\n-    padding: 10px;\n-  }\n-\n-  .hero-text,\n-  .hero-container ul {\n-    width: 95%; /* Make content slightly wider */\n-  }\n-\n-  .hero-text h2 {\n-    font-size: clamp(2rem, 6vw, 3rem);\n-  }\n-\n-  .hero-text p {\n-    font-size: clamp(0.9rem, 2.5vw, 1.1rem);\n-  }\n-\n-  .hero-container ul li {\n-    font-size: clamp(0.85rem, 2.2vw, 1rem);\n-  }\n-\n-  .btn-div {\n-    margin-top: 40px;\n-  }\n-\n-  .btn-div button {\n-    padding: 8px 15px;\n-    font-size: 0.9rem;\n-  }\n+\n+\n+\n+\n+\n+.btn-div{\n+    /* background-color: #f8f8ed; */\n+    height: 10vh;\n+    display: flex;\n+    align-items: center;\n+    justify-content: center;\n+  \n+\n+    button{\n+        padding: 8px;\n+        /* font-family: 'Fira Code', 'Consolas', 'Menlo', 'Courier New', monospace; */\n+        border: 1px solid grey;\n+         /* background: rgb(40, 86, 120); */\n+        background: linear-gradient(135deg, #4A6FA5, #85B3D1);\n+        border-radius: 5px;\n+\n+        color: #dcdcdc !important;\n+\n+    }\n }\n \n-/* For screens smaller than 640px (e.g., typical mobile phones) */\n-@media (max-width: 640px) {\n-  .hero-page {\n-    padding: 10px;\n-  }\n-\n-  .hero-container {\n-    padding: 10px;\n-  }\n-\n-  .hero-text {\n-    width: 100%; /* Full width on smallest screens */\n-    margin-bottom: 15px;\n-  }\n-\n-  .hero-container ul {\n-    width: 100%; /* Full width for list */\n-  }\n-\n-  .hero-text h2 {\n-    font-size: clamp(1.8rem, 8vw, 2.5rem);\n-  }\n-\n-  .hero-text p {\n-    font-size: clamp(0.85rem, 3vw, 1rem);\n-  }\n-\n-  .hero-container ul li {\n-    font-size: clamp(0.8rem, 2.5vw, 0.95rem);\n-  }\n-\n-  .second-half {\n-    padding: 10px;\n-  }\n-\n-  .terminal-container {\n-    width: 95%; /* Nearly full width for terminal */\n-  }\n-\n-  .btn-div {\n-    margin-top: 30px; /* Reduce top margin further */\n-    height: auto; /* Allow height to adjust */\n-    padding-bottom: 20px; /* Add some bottom padding */\n-  }\n-\n-  .btn-div button {\n-    padding: 7px 12px;\n-    font-size: 0.85rem;\n-  }\n-}\n\\ No newline at end of file\n+\n+\n+@media (max-width: 640px) { \n+    .hero-container{\n+        width: 100% !important;\n+        /* background-color: rgb(84, 70, 47); */\n+        display: flex !important;\n+        flex-direction: column !important;\n+        align-items: center !important;\n+        justify-content: center !important;\n+     \n+\n+    }\n+\n+    .hero-page{\n+        flex-direction: column;\n+        /* background-color: aliceblue; */\n+    }\n+\n+    .second-half{\n+        width: 100% !important;\n+        display: flex !important;\n+        align-items: center !important;\n+        justify-content: center !important;\n+        padding: 20px !important;\n+    }\n+\n+\n+    .btn-div{\n+        margin-top:  75px;\n+    }\n+\n+   \n+}\n@@ -43,7 +43,7 @@ const companies = await expand({\n                 style={{\n                   color: \"#4A6FA5\",\n                   fontSize: \"12px\",\n-                  fontWeight: \"100\",\n+                  fontWeight: \"200\",\n                 }}\n               />\n               Reliable scraping infrastructure</li>\n",
    "embedding": [
      -0.0895322784781456,
      0.11282365769147873,
      0.015021619386970997,
      -0.028979221358895302,
      0.0997970923781395,
      0.027532434090971947,
      -0.013749329373240471,
      0.02724059671163559,
      0.009312552399933338,
      0.021003343164920807,
      0.00909027736634016,
      0.09068401157855988,
      0.022843243554234505,
      -0.026147082448005676,
      0.0844859927892685,
      -0.013790160417556763,
      -0.06845711171627045,
      -0.04937110096216202,
      -0.017646266147494316,
      0.10215356945991516,
      -0.04786403104662895,
      -0.07543809711933136,
      0.04571012407541275,
      -0.04132134094834328,
      -0.07412772625684738,
      0.04034058749675751,
      -0.008780875243246555,
      0.06226089596748352,
      0.019925028085708618,
      -0.058856140822172165,
      0.030073104426264763,
      0.035833846777677536,
      0.014619202353060246,
      0.04295510798692703,
      0.014109073206782341,
      -0.00458382535725832,
      -0.039118021726608276,
      0.013186640106141567,
      -0.07857894897460938,
      0.03513897582888603,
      0.04744074121117592,
      -0.03695069998502731,
      0.03625808656215668,
      0.028626305982470512,
      0.09379113465547562,
      -0.03138503432273865,
      -0.027254091575741768,
      0.03179759532213211,
      0.0071615963242948055,
      0.013205848634243011,
      -0.03665577620267868,
      -0.06081458926200867,
      0.04976562038064003,
      -0.07127588242292404,
      -0.01090480200946331,
      0.03403094783425331,
      0.08599419891834259,
      -0.04433026537299156,
      0.10045498609542847,
      0.027569659054279327,
      0.037290774285793304,
      0.06373115628957748,
      -0.00399800343438983,
      -0.0028180500958114862,
      0.03577333316206932,
      -0.03056483343243599,
      -0.010676524601876736,
      0.025454042479395866,
      -0.037389498203992844,
      -0.003820024197921157,
      0.036421481519937515,
      0.0037589657586067915,
      0.08835502713918686,
      -0.10091974586248398,
      0.02507179044187069,
      -0.06743043661117554,
      -0.03393995761871338,
      -0.009490312077105045,
      -0.005294186063110828,
      0.02507290244102478,
      0.030290493741631508,
      -0.023613341152668,
      -0.049262940883636475,
      0.07199957221746445,
      0.017515679821372032,
      0.015329229645431042,
      0.030192038044333458,
      -0.10029134899377823,
      -0.0666409358382225,
      -0.08360229432582855,
      -0.014556333422660828,
      -0.018087053671479225,
      -0.013385872356593609,
      0.015062855556607246,
      -0.07317673414945602,
      -0.03818575665354729,
      -0.03324682265520096,
      -0.16015975177288055,
      -0.05698321387171745,
      0.10391679406166077,
      0.005301336757838726,
      -0.01771315187215805,
      0.11640071868896484,
      -0.0313987210392952,
      0.05252569168806076,
      -0.0041617294773459435,
      -0.009549891576170921,
      0.04533524811267853,
      -0.0359199084341526,
      0.026716219261288643,
      0.0903942659497261,
      0.009321212768554688,
      -0.13862866163253784,
      0.00878754910081625,
      0.013355927541851997,
      -0.0313107967376709,
      -0.013667491264641285,
      -0.006181444972753525,
      0.11349552869796753,
      -0.1124357059597969,
      0.06218397989869118,
      0.05222587659955025,
      -0.10122033953666687,
      -0.1078922301530838,
      6.145794759504497e-05,
      0.024825628846883774,
      0.04333467409014702,
      5.5178175025338505e-33,
      0.05989127606153488,
      0.06490091234445572,
      -0.0625271201133728,
      -0.009800239466130733,
      0.08387001603841782,
      0.0002666536602191627,
      -0.05849793553352356,
      -0.024788787588477135,
      -0.04745766893029213,
      -0.0027950110379606485,
      0.06765390932559967,
      -0.015324747189879417,
      -0.03513530641794205,
      0.07361370325088501,
      -0.015293923206627369,
      -0.05281320959329605,
      -0.003499952843412757,
      -0.04273168370127678,
      0.009053072892129421,
      -0.0009786775335669518,
      0.011115388944745064,
      -0.015409545972943306,
      0.010211163200438023,
      -0.048600081354379654,
      -0.02441774494946003,
      0.048943646252155304,
      0.026283759623765945,
      0.00933351181447506,
      -0.034971076995134354,
      -0.0413084514439106,
      0.04935052618384361,
      0.0462460070848465,
      0.06669574230909348,
      -0.011492389254271984,
      0.0013353256508708,
      -0.029377548024058342,
      -0.052923113107681274,
      -0.032838329672813416,
      0.022095059975981712,
      0.10001222044229507,
      -0.03388987481594086,
      -0.019457675516605377,
      -0.004062247462570667,
      -0.001928931218571961,
      -0.01028032973408699,
      -0.004815731663256884,
      0.06816951185464859,
      -0.08477383852005005,
      0.009609757922589779,
      0.014436190016567707,
      -0.050503868609666824,
      -0.010471171699464321,
      -0.06792724877595901,
      -0.02405497618019581,
      -0.019443077966570854,
      -0.12014365196228027,
      0.007557317614555359,
      0.020619571208953857,
      0.004509356338530779,
      -0.08098317682743073,
      0.10828699171543121,
      -0.06929928064346313,
      -0.014030387625098228,
      -0.012591683305799961,
      0.00853058323264122,
      -0.0020970844198018312,
      0.009550302289426327,
      0.0710301622748375,
      -0.007384336553514004,
      -0.06300131231546402,
      0.022668395191431046,
      -0.03041413240134716,
      0.15124790370464325,
      -0.04850007966160774,
      -0.056704871356487274,
      0.02733672596514225,
      -0.04598481208086014,
      0.0036245170049369335,
      -0.07772606611251831,
      -0.013112136162817478,
      -0.07770759612321854,
      0.06563393771648407,
      0.0009424056624993682,
      -0.010354980826377869,
      -0.08985176682472229,
      -0.03755807504057884,
      0.04261428490281105,
      -0.05825722962617874,
      0.014428463764488697,
      -0.04352603480219841,
      -0.05471985042095184,
      -0.013917825184762478,
      0.05977369099855423,
      -0.06901703029870987,
      -0.13355468213558197,
      -6.192733461530221e-33,
      -0.0033660419285297394,
      0.056172799319028854,
      0.0061232480220496655,
      0.06218962371349335,
      0.06487614661455154,
      -0.04838743805885315,
      0.134821355342865,
      0.08171650022268295,
      0.06311759352684021,
      0.031534645706415176,
      -0.009095337241888046,
      0.03979043662548065,
      -0.022813772782683372,
      -0.05957750231027603,
      0.07034935802221298,
      0.08150658011436462,
      0.007043148390948772,
      0.08889934420585632,
      0.007640755269676447,
      0.07219883054494858,
      0.015026051551103592,
      0.018636973574757576,
      0.040988799184560776,
      0.059582486748695374,
      0.05013636127114296,
      -0.012865185737609863,
      0.02391551434993744,
      -0.031649187207221985,
      -0.012114387936890125,
      -0.006873332429677248,
      -0.015295064076781273,
      -0.07302802056074142,
      0.02621980383992195,
      0.03997597098350525,
      0.03332938253879547,
      0.016086094081401825,
      -0.07141374796628952,
      0.036572981625795364,
      -0.018884925171732903,
      0.051835060119628906,
      0.0873638316988945,
      -0.0925576314330101,
      -0.01995421014726162,
      -0.02259526588022709,
      -0.005700143985450268,
      0.00526919960975647,
      -0.017210282385349274,
      -0.025663034990429878,
      -0.008845205418765545,
      0.02450367622077465,
      0.0761009082198143,
      0.009721607901155949,
      0.04403799772262573,
      -0.07490087300539017,
      -0.007116051856428385,
      0.0035563120618462563,
      -0.040506377816200256,
      0.025398200377821922,
      -0.02512487955391407,
      0.07496746629476547,
      0.03253359720110893,
      0.02416105382144451,
      -0.12174954265356064,
      -0.04685606807470322,
      0.034612834453582764,
      0.05599449947476387,
      -0.06640850752592087,
      0.001413671183399856,
      -0.025052879005670547,
      0.04579192027449608,
      -0.06714131683111191,
      0.061024319380521774,
      0.03494562208652496,
      0.003498827340081334,
      0.02587977983057499,
      0.009275749325752258,
      0.009185330010950565,
      -0.012339821085333824,
      0.05948113277554512,
      0.006402730476111174,
      -0.06164197623729706,
      -0.015514017082750797,
      -0.050042588263750076,
      -0.02172943577170372,
      -0.012513053603470325,
      0.08222662657499313,
      -0.06467504054307938,
      0.013098519295454025,
      -0.010746062733232975,
      -0.03100755624473095,
      -0.014337620697915554,
      0.05291113257408142,
      0.08832360059022903,
      0.007278602570295334,
      0.06887423992156982,
      -5.273400915939419e-08,
      0.10578207671642303,
      -0.06516183167695999,
      -6.763252167729661e-05,
      -0.010979398153722286,
      -0.07841211557388306,
      -0.06476379930973053,
      0.07580559700727463,
      -0.1479097604751587,
      0.00927223451435566,
      -0.0014080777764320374,
      -0.0005073652137070894,
      0.021997081115841866,
      -0.02677581086754799,
      -0.028107749298214912,
      -0.006885155104100704,
      0.03810799866914749,
      -0.06985321640968323,
      0.03194430097937584,
      -0.03587471321225166,
      -0.06181730702519417,
      -0.03794099763035774,
      0.010770182125270367,
      -0.004847613628953695,
      -0.02600802853703499,
      -0.06196785345673561,
      0.06391913443803787,
      -0.10236424207687378,
      0.01171793695539236,
      -0.06213505566120148,
      0.027187250554561615,
      0.02022510953247547,
      0.01442690473049879,
      -0.06286823004484177,
      -0.102203369140625,
      0.08438649773597717,
      -0.04672215133905411,
      0.0030055204406380653,
      -0.045195549726486206,
      0.03502938151359558,
      0.0009565152577124536,
      0.05258598178625107,
      -0.0013380036689341068,
      -0.029381876811385155,
      0.024605652317404747,
      -0.0017990909982472658,
      -0.017183957621455193,
      0.035047098994255066,
      -0.02675599977374077,
      -0.0006513121770694852,
      0.020870953798294067,
      -0.027894223108887672,
      -0.0908348485827446,
      0.0030805463902652264,
      -0.04194343090057373,
      0.012691241689026356,
      -0.034753479063510895,
      0.020814940333366394,
      0.08576526492834091,
      -0.009826404973864555,
      0.032810915261507034,
      0.01698550395667553,
      0.03380034491419792,
      -0.008545242249965668,
      0.03195151314139366
    ]
  },
  {
    "hash": "b944fbd7e92723e5e9c49fdc3e3d1cb78f6c957a",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T06:27:11+01:00",
    "message": "remapping objects",
    "diff": "@@ -16,16 +16,14 @@ import {\n   SiFastapi,\n } from \"react-icons/si\";\n \n-\n const compatibilityIcons = [\n-  { id: 'python', icon: <SiPython className=\"icon-python\" /> },\n-  { id: 'flask', icon: <SiFlask className=\"icon-flask\" /> },\n-  { id: 'django', icon: <SiDjango className=\"icon-django\" /> },\n-  { id: 'fastapi', icon: <SiFastapi className=\"icon-fastapi\" /> },\n+  <SiPython className=\"icon-python\" />,\n+  <SiFlask className=\"icon-flask\" />,\n+  <SiDjango className=\"icon-django\" />,\n+  <SiFastapi className=\"icon-fastapi\" />,\n ];\n \n \n-\n const scannerErrors = [\n   {\n     icon: <FaBug />,\n@@ -92,10 +90,9 @@ export default function Compatibility() {\n       <div className=\"compatibility-marquee-container\">\n         <div className=\"compatibility-marquee-box\">\n           <div className=\"compatibility-marquee-scroll\" ref={marqueeRef}>\n-          {compatibilityIcons.concat(compatibilityIcons).map((item) => (\n-  <span key={item.id + Math.random()} className=\"language-icon\">{item.icon}</span>\n-))}\n-\n+            {compatibilityIcons.concat(compatibilityIcons).map((icon, i) => (\n+              <span key={i} className=\"language-icon\">{icon}</span>\n+            ))}\n           </div>\n         </div>\n       </div>\n@@ -104,13 +101,13 @@ export default function Compatibility() {\n         AI-Powered Security Scan Errors\n       </h3>\n       <div className=\"compatibility-errors-grid\">\n-       {scannerErrors.map((err) => (\n-  <div className=\"compatibility-error-card\" key={err.title}>\n-    <div className=\"compatibility-error-icon\">{err.icon}</div>\n-    <strong>{err.title}</strong>\n-    <p className=\"compatibility-error-desc\">{err.desc}</p>\n-  </div>\n-))}\n+        {scannerErrors.map((err, idx) => (\n+          <div className=\"compatibility-error-card\" key={idx}>\n+            <div className=\"compatibility-error-icon\">{err.icon}</div>\n+            <strong>{err.title}</strong>\n+            <p className=\"compatibility-error-desc\">{err.desc}</p>\n+          </div>\n+        ))}\n       </div>\n     </div>\n   );\n@@ -225,7 +225,9 @@ const ScannerBoard = () => {\n                         \n                         {issues.length > 0 ? (\n                             <div>\n-                                \n+                                {issues.map((issue, index) => (\n+                                    <IssueCard key={index} issue={issue} index={index} />\n+                                ))}\n                             </div>\n                         ) : (\n                             <div className=\"no-issues\">\n",
    "embedding": [
      -0.01989457570016384,
      0.05133739858865738,
      0.02659856714308262,
      0.011202747002243996,
      -0.014544260688126087,
      0.0032742831390351057,
      0.019949404522776604,
      0.016173681244254112,
      -0.023332295939326286,
      -0.12043014168739319,
      -0.019056199118494987,
      -0.032188452780246735,
      -0.02374415472149849,
      0.05061713233590126,
      0.06259701400995255,
      0.01709717884659767,
      -0.10544227063655853,
      -0.01965165138244629,
      -0.019327830523252487,
      0.04563916474580765,
      0.07659682631492615,
      -0.058784354478120804,
      0.011900595389306545,
      -0.06117376312613487,
      -0.031867194920778275,
      0.05387995392084122,
      0.02695455215871334,
      -0.03413280472159386,
      0.006910091266036034,
      -0.03284717723727226,
      0.058140914887189865,
      0.07232549786567688,
      -0.04901009798049927,
      -0.03972257301211357,
      0.021034473553299904,
      0.1437647044658661,
      0.019609395414590836,
      -0.051789622753858566,
      0.05986543744802475,
      0.010566686280071735,
      0.053549624979496,
      0.07135620713233948,
      0.0016552699962630868,
      -0.07463568449020386,
      0.024160044267773628,
      -0.06556381285190582,
      -0.017944984138011932,
      -0.06393922865390778,
      -0.02190103381872177,
      0.015315807424485683,
      -0.09359976649284363,
      0.01846550591289997,
      -0.05042383447289467,
      -0.034473687410354614,
      -0.02255867049098015,
      0.004767121281474829,
      0.043789297342300415,
      0.007212425582110882,
      0.06252392381429672,
      -0.004631316289305687,
      0.006029827520251274,
      -0.039667170494794846,
      0.16644051671028137,
      -0.016350725665688515,
      -0.0020709498785436153,
      -0.0032643729355186224,
      -0.05897429957985878,
      -0.002579319989308715,
      0.07785916328430176,
      0.05295481160283089,
      0.013852380216121674,
      -0.017169637605547905,
      0.056371428072452545,
      -0.002489955397322774,
      0.013595646247267723,
      -0.065081886947155,
      0.044364579021930695,
      0.08944340795278549,
      -0.0006005223258398473,
      -0.04464741423726082,
      -0.012467422522604465,
      -0.04862680286169052,
      0.015047553926706314,
      -0.004803633317351341,
      0.13048361241817474,
      0.07156489789485931,
      -0.0705898255109787,
      -0.06937529146671295,
      -0.07337509840726852,
      -0.007698385044932365,
      0.00844856072217226,
      -0.13525722920894623,
      0.007913228124380112,
      0.03652304410934448,
      0.07680908590555191,
      -0.05408869683742523,
      -0.002432740293443203,
      -0.061768487095832825,
      -0.06796655803918839,
      0.06672655791044235,
      -0.03712411969900131,
      -0.032689064741134644,
      -0.009367327205836773,
      0.0012156021548435092,
      0.06592661142349243,
      0.017410406842827797,
      -0.03465225175023079,
      -0.10311948508024216,
      -0.04762057587504387,
      0.05117076262831688,
      0.019921772181987762,
      0.005245625507086515,
      0.005205963738262653,
      -0.019484534859657288,
      -0.07386628538370132,
      0.018422214314341545,
      -0.0467669777572155,
      0.0043367198668420315,
      0.11532613635063171,
      0.06793463975191116,
      0.0595998615026474,
      -0.021265141665935516,
      -0.010940004140138626,
      -0.04789331927895546,
      0.019946148619055748,
      0.026567818596959114,
      -0.14071404933929443,
      5.5060258248271644e-33,
      0.044213924556970596,
      0.00021995166025590152,
      0.0017865434056147933,
      0.0035616883542388678,
      0.06385385990142822,
      -0.08770081400871277,
      0.03615665063261986,
      0.0027347488794475794,
      -0.04442976787686348,
      -0.017986375838518143,
      0.011090737767517567,
      0.013607723638415337,
      -0.04525701701641083,
      0.047999218106269836,
      -0.022863777354359627,
      -0.02967189997434616,
      0.016694815829396248,
      -0.01832413487136364,
      -0.07548248022794724,
      -0.10670378059148788,
      -0.03225907310843468,
      0.0037595327012240887,
      -0.1082882359623909,
      -0.05549011379480362,
      0.0762627050280571,
      0.0298596303910017,
      0.009137818589806557,
      0.09047180414199829,
      -0.013482213951647282,
      0.009648609906435013,
      0.040388062596321106,
      -0.010758125223219395,
      -0.021706989035010338,
      0.025673750787973404,
      -0.0338495709002018,
      -0.04857358708977699,
      -0.01457344088703394,
      -0.008389744907617569,
      -0.06811603158712387,
      -0.06446199119091034,
      0.03300640732049942,
      0.004589284770190716,
      -0.05957125499844551,
      0.028376566246151924,
      -0.005054348148405552,
      -0.007250121794641018,
      0.011706163175404072,
      0.01912657730281353,
      0.03476239740848541,
      -0.07419686019420624,
      -0.06138613075017929,
      0.03073752112686634,
      -0.06156284734606743,
      -0.006613814737647772,
      -0.04864043742418289,
      -0.06957810372114182,
      -0.05552458390593529,
      0.06083233281970024,
      0.017206568270921707,
      -0.08396730571985245,
      0.04451592266559601,
      0.02372349053621292,
      0.0643027052283287,
      0.07574308663606644,
      -0.008136375807225704,
      0.09822253882884979,
      0.04006725922226906,
      0.08374094218015671,
      0.08084669709205627,
      -0.012733668088912964,
      0.03167634829878807,
      0.004550845827907324,
      0.005190256983041763,
      -0.03764019533991814,
      0.004552606027573347,
      -0.009472458623349667,
      0.009360048919916153,
      -0.09747660905122757,
      -0.011800951324403286,
      0.02154759131371975,
      0.04487423226237297,
      -0.01790524087846279,
      -0.017964741215109825,
      0.005632173269987106,
      -0.006996998563408852,
      -0.03403766080737114,
      0.06731237471103668,
      -0.0073206243105232716,
      0.034156884998083115,
      0.04138743132352829,
      -0.027511844411492348,
      -0.0880897119641304,
      -0.029407067224383354,
      -0.008727746084332466,
      -0.14429274201393127,
      -6.871347084943897e-33,
      0.048529453575611115,
      0.013642607256770134,
      0.08493638038635254,
      -0.004569305572658777,
      -0.055807940661907196,
      -0.06005171686410904,
      0.03190411254763603,
      0.008653789758682251,
      -0.0725843757390976,
      0.03583943471312523,
      -0.05575291067361832,
      -0.011868248693645,
      0.003565940773114562,
      -0.07049011439085007,
      -0.004373631440103054,
      0.14707441627979279,
      -0.03839930519461632,
      -0.029851680621504784,
      0.04061271995306015,
      -0.08840609341859818,
      -0.009615159593522549,
      0.07084982097148895,
      9.812782082008198e-06,
      0.03770153224468231,
      -0.12937110662460327,
      0.01754484325647354,
      0.028932176530361176,
      -0.0930594727396965,
      0.01898004859685898,
      0.0008785624522715807,
      -0.03174111992120743,
      -0.05747048184275627,
      -0.08721216022968292,
      0.07878007739782333,
      0.036799099296331406,
      -0.03771944344043732,
      0.0004347718204371631,
      -0.01661381870508194,
      -0.003941799979656935,
      0.0036376062780618668,
      0.029729554429650307,
      -0.06832524389028549,
      0.007995705120265484,
      0.07808206230401993,
      -0.022855151444673538,
      -0.05975302681326866,
      0.028409384191036224,
      -0.016042204573750496,
      -0.00032078035292215645,
      0.011040924116969109,
      0.025928106158971786,
      -0.027710288763046265,
      -0.031805619597435,
      -0.0004754909314215183,
      -0.03806570544838905,
      -0.03281284123659134,
      0.009360075928270817,
      -0.029694814234972,
      -0.0961095541715622,
      0.07172724604606628,
      -0.0016453007701784372,
      -0.20405682921409607,
      0.0006168378749862313,
      0.007976757362484932,
      0.03857514262199402,
      -0.008247435092926025,
      -0.10718684643507004,
      -0.010190176777541637,
      0.03605881705880165,
      -0.010591743513941765,
      0.06274930387735367,
      0.07529790699481964,
      0.07056412845849991,
      0.021151510998606682,
      0.014980827458202839,
      0.00821214821189642,
      0.04219740629196167,
      0.03195534273982048,
      0.08679848909378052,
      -0.02672155760228634,
      -0.06928700953722,
      -0.03508351743221283,
      -0.03303632512688637,
      0.07916205376386642,
      -0.086162269115448,
      -0.06162169948220253,
      0.04764628782868385,
      0.04596800357103348,
      0.024792928248643875,
      0.003799694124609232,
      0.009279893711209297,
      0.032765429466962814,
      0.08223576843738556,
      -0.0025646653957664967,
      0.04219486191868782,
      -5.088766030780789e-08,
      -0.02568136155605316,
      -0.021184666082262993,
      -0.010486655868589878,
      0.05990883335471153,
      -0.016920221969485283,
      0.015099695883691311,
      -0.06537844240665436,
      -0.012290921993553638,
      -0.06809312105178833,
      0.0009168598335236311,
      -0.061492543667554855,
      0.10947887599468231,
      -0.018395423889160156,
      -0.03340933844447136,
      0.002179573057219386,
      -0.021416189149022102,
      -0.04296423867344856,
      0.11518308520317078,
      0.0263371542096138,
      0.029676008969545364,
      0.01740149036049843,
      0.039984237402677536,
      0.005360701587051153,
      0.038258232176303864,
      -0.020124336704611778,
      0.02204050123691559,
      0.018450338393449783,
      -0.009722437709569931,
      0.003658347763121128,
      -0.013703063130378723,
      -0.10768997669219971,
      0.003492780262604356,
      -0.0023852468002587557,
      0.03479457274079323,
      -0.025329794734716415,
      -0.06237826496362686,
      0.048126447945833206,
      -0.02133318781852722,
      0.0019679369870573282,
      0.03247461095452309,
      0.06492360681295395,
      -0.08071256428956985,
      -0.023870110511779785,
      0.004496120382100344,
      -0.023105209693312645,
      0.022534877061843872,
      -0.04853478819131851,
      0.058119967579841614,
      0.04463482275605202,
      0.07418554276227951,
      -0.006106882356107235,
      -0.012446798384189606,
      -0.0013344003818929195,
      -0.02014370635151863,
      -0.02283242903649807,
      0.0339578278362751,
      -0.022700587287545204,
      0.08889072388410568,
      0.040176764130592346,
      0.06405151635408401,
      0.08360458165407181,
      0.05826341733336449,
      0.048382677137851715,
      -0.03035847283899784
    ]
  },
  {
    "hash": "8e23c0efb71a32aee704cfe6ff4385ba1d8fff1c",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-06-18T06:15:35+01:00",
    "message": "commit for deployment",
    "diff": "@@ -34,4 +34,3 @@ You can check out [the Next.js GitHub repository](https://github.com/vercel/next\n The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n \n Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.\n-# vyn_web_scanner\n@@ -5,4 +5,3 @@\n     }\n   }\n }\n-\n@@ -8,12 +8,9 @@\n       \"name\": \"security-scanner\",\n       \"version\": \"0.1.0\",\n       \"dependencies\": {\n-        \"axios\": \"^1.9.0\",\n-        \"lucide-react\": \"^0.511.0\",\n         \"next\": \"15.3.2\",\n         \"react\": \"^19.0.0\",\n-        \"react-dom\": \"^19.0.0\",\n-        \"react-icons\": \"^5.5.0\"\n+        \"react-dom\": \"^19.0.0\"\n       },\n       \"devDependencies\": {\n         \"@eslint/eslintrc\": \"^3\",\n@@ -1672,12 +1669,6 @@\n         \"node\": \">= 0.4\"\n       }\n     },\n-    \"node_modules/asynckit\": {\n-      \"version\": \"0.4.0\",\n-      \"resolved\": \"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\",\n-      \"integrity\": \"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\",\n-      \"license\": \"MIT\"\n-    },\n     \"node_modules/available-typed-arrays\": {\n       \"version\": \"1.0.7\",\n       \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz\",\n@@ -1704,17 +1695,6 @@\n         \"node\": \">=4\"\n       }\n     },\n-    \"node_modules/axios\": {\n-      \"version\": \"1.9.0\",\n-      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-1.9.0.tgz\",\n-      \"integrity\": \"sha512-re4CqKTJaURpzbLHtIi6XpDv20/CnpXOtjRY5/CU32L8gU8ek9UIivcfvSWvmKEngmVbrUtPpdDwWDWL7DNHvg==\",\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"follow-redirects\": \"^1.15.6\",\n-        \"form-data\": \"^4.0.0\",\n-        \"proxy-from-env\": \"^1.1.0\"\n-      }\n-    },\n     \"node_modules/axobject-query\": {\n       \"version\": \"4.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz\",\n@@ -1821,6 +1801,7 @@\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n       \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\",\n@@ -1945,18 +1926,6 @@\n         \"simple-swizzle\": \"^0.2.2\"\n       }\n     },\n-    \"node_modules/combined-stream\": {\n-      \"version\": \"1.0.8\",\n-      \"resolved\": \"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\",\n-      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\",\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"delayed-stream\": \"~1.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 0.8\"\n-      }\n-    },\n     \"node_modules/concat-map\": {\n       \"version\": \"0.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n@@ -2158,15 +2127,6 @@\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n-    \"node_modules/delayed-stream\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\",\n-      \"integrity\": \"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\",\n-      \"license\": \"MIT\",\n-      \"engines\": {\n-        \"node\": \">=0.4.0\"\n-      }\n-    },\n     \"node_modules/depd\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\n@@ -2204,6 +2164,7 @@\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n       \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"call-bind-apply-helpers\": \"^1.0.1\",\n@@ -2308,6 +2269,7 @@\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n       \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -2317,6 +2279,7 @@\n       \"version\": \"1.3.0\",\n       \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n       \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -2354,6 +2317,7 @@\n       \"version\": \"1.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n       \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\"\n@@ -2366,6 +2330,7 @@\n       \"version\": \"2.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz\",\n       \"integrity\": \"sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"es-errors\": \"^1.3.0\",\n@@ -3091,26 +3056,6 @@\n       \"dev\": true,\n       \"license\": \"ISC\"\n     },\n-    \"node_modules/follow-redirects\": {\n-      \"version\": \"1.15.9\",\n-      \"resolved\": \"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz\",\n-      \"integrity\": \"sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==\",\n-      \"funding\": [\n-        {\n-          \"type\": \"individual\",\n-          \"url\": \"https://github.com/sponsors/RubenVerborgh\"\n-        }\n-      ],\n-      \"license\": \"MIT\",\n-      \"engines\": {\n-        \"node\": \">=4.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"debug\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n     \"node_modules/for-each\": {\n       \"version\": \"0.3.5\",\n       \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz\",\n@@ -3127,42 +3072,6 @@\n         \"url\": \"https://github.com/sponsors/ljharb\"\n       }\n     },\n-    \"node_modules/form-data\": {\n-      \"version\": \"4.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/form-data/-/form-data-4.0.2.tgz\",\n-      \"integrity\": \"sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==\",\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"asynckit\": \"^0.4.0\",\n-        \"combined-stream\": \"^1.0.8\",\n-        \"es-set-tostringtag\": \"^2.1.0\",\n-        \"mime-types\": \"^2.1.12\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 6\"\n-      }\n-    },\n-    \"node_modules/form-data/node_modules/mime-db\": {\n-      \"version\": \"1.52.0\",\n-      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\n-      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\n-      \"license\": \"MIT\",\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n-    \"node_modules/form-data/node_modules/mime-types\": {\n-      \"version\": \"2.1.35\",\n-      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\n-      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\n-      \"license\": \"MIT\",\n-      \"dependencies\": {\n-        \"mime-db\": \"1.52.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n     \"node_modules/forwarded\": {\n       \"version\": \"0.2.0\",\n       \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\n@@ -3187,6 +3096,7 @@\n       \"version\": \"1.1.2\",\n       \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n       \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"funding\": {\n         \"url\": \"https://github.com/sponsors/ljharb\"\n@@ -3227,6 +3137,7 @@\n       \"version\": \"1.3.0\",\n       \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n       \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"call-bind-apply-helpers\": \"^1.0.2\",\n@@ -3251,6 +3162,7 @@\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n       \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"dunder-proto\": \"^1.0.1\",\n@@ -3338,6 +3250,7 @@\n       \"version\": \"1.2.0\",\n       \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n       \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -3409,6 +3322,7 @@\n       \"version\": \"1.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n       \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -3421,6 +3335,7 @@\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\n       \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"has-symbols\": \"^1.0.3\"\n@@ -3436,6 +3351,7 @@\n       \"version\": \"2.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n       \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"function-bind\": \"^1.1.2\"\n@@ -4127,19 +4043,11 @@\n         \"loose-envify\": \"cli.js\"\n       }\n     },\n-    \"node_modules/lucide-react\": {\n-      \"version\": \"0.511.0\",\n-      \"resolved\": \"https://registry.npmjs.org/lucide-react/-/lucide-react-0.511.0.tgz\",\n-      \"integrity\": \"sha512-VK5a2ydJ7xm8GvBeKLS9mu1pVK6ucef9780JVUjw6bAjJL/QXnd4Y0p7SPeOUMC27YhzNCZvm5d/QX0Tp3rc0w==\",\n-      \"license\": \"ISC\",\n-      \"peerDependencies\": {\n-        \"react\": \"^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n-      }\n-    },\n     \"node_modules/math-intrinsics\": {\n       \"version\": \"1.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n       \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n+      \"dev\": true,\n       \"license\": \"MIT\",\n       \"engines\": {\n         \"node\": \">= 0.4\"\n@@ -4727,12 +4635,6 @@\n         \"node\": \">= 0.10\"\n       }\n     },\n-    \"node_modules/proxy-from-env\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\",\n-      \"integrity\": \"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\",\n-      \"license\": \"MIT\"\n-    },\n     \"node_modules/punycode\": {\n       \"version\": \"2.3.1\",\n       \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz\",\n@@ -4827,15 +4729,6 @@\n         \"react\": \"^19.1.0\"\n       }\n     },\n-    \"node_modules/react-icons\": {\n-      \"version\": \"5.5.0\",\n-      \"resolved\": \"https://registry.npmjs.org/react-icons/-/react-icons-5.5.0.tgz\",\n-      \"integrity\": \"sha512-MEFcXdkP3dLo8uumGI5xN3lDFNsRtrjbOEKDLD7yv76v4wpnEq2Lt2qeHaQOr34I/wPN3s3+N08WkQ+CW37Xiw==\",\n-      \"license\": \"MIT\",\n-      \"peerDependencies\": {\n-        \"react\": \"*\"\n-      }\n-    },\n     \"node_modules/react-is\": {\n       \"version\": \"16.13.1\",\n       \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n@@ -9,16 +9,13 @@\n     \"lint\": \"next lint\"\n   },\n   \"dependencies\": {\n-    \"axios\": \"^1.9.0\",\n-    \"lucide-react\": \"^0.511.0\",\n-    \"next\": \"15.3.2\",\n     \"react\": \"^19.0.0\",\n     \"react-dom\": \"^19.0.0\",\n-    \"react-icons\": \"^5.5.0\"\n+    \"next\": \"15.3.2\"\n   },\n   \"devDependencies\": {\n-    \"@eslint/eslintrc\": \"^3\",\n     \"eslint\": \"^9\",\n-    \"eslint-config-next\": \"15.3.2\"\n+    \"eslint-config-next\": \"15.3.2\",\n+    \"@eslint/eslintrc\": \"^3\"\n   }\n }\nBinary files a/public/Images/VYN_logo.png and /dev/null differ\nBinary files a/public/Images/vyn_bg_logo.png and /dev/null differ\n@@ -1,123 +0,0 @@\n-/* Compatibility.css */\n-\n-.compatibility-wrapper {\n-  font-family: sans-serif;\n-  padding: 10rem;\n-  max-width: 100%;\n-  /* background-color: #f8f8ed; */\n-}\n-\n-.compatibility-heading {\n-  text-align: center;\n-  font-size: 1.5rem;\n-}\n-\n-.compatibility-marquee-container {\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  flex-direction: column;\n-  width: 100%;\n-}\n-\n-.compatibility-marquee-box {\n-  overflow: hidden;\n-  white-space: nowrap;\n-  /* border: 1px solid #ccc; */\n-  border-radius: 8px;\n-  padding: 1rem;\n-  margin-bottom: 2rem;\n-  background-color: var(--background-color);\n-  width: 40%;\n-}\n-\n-.compatibility-marquee-scroll {\n-  display: inline-flex;\n-  white-space: nowrap;\n-  gap: 4rem;\n-  font-size: 2rem;\n-}\n-\n-.language-icon {\n-  font-size: 2rem;\n-}\n-\n-/* Specific colors for each icon */\n-.icon-python {\n-  color: #3776ab; /* Python blue */\n-}\n-\n-.icon-flask {\n-  color: #4a4646; /* Flask usually uses black */\n-}\n-\n-.icon-django {\n-  color: #1a543e; /* Django green-black */\n-}\n-\n-.icon-fastapi {\n-  color: #05998b; /* FastAPI teal */\n-}\n-\n-.language-icon:hover {\n-  transform: scale(1.1);\n-  transition: transform 0.3s ease;\n-}\n-\n-\n-.compatibility-errors-heading {\n-  font-size: 2rem;\n-  margin-bottom: 1rem;\n-  text-align: center;\n-}\n-\n-.compatibility-errors-grid {\n-  display: grid;\n-  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n-  gap: 1.5rem;\n-}\n-\n-.compatibility-error-card {\n-  border: 1px solid #ddd;\n-  border-radius: 8px;\n-  padding: 1rem;\n-  /* background: linear-gradient(180deg, #F9F9F9, #E9E9E9); */\n-  background: var(--card);\n-  \n-\n-  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n-  display: flex;\n-  flex-direction: column;\n-  gap: 0.5rem;\n-}\n-\n-.compatibility-error-icon {\n-  font-size: 1.8rem;\n-  color: #666;\n-  color: var(--primary);\n-}\n-\n-.compatibility-error-desc {\n-  font-size: 0.9rem;\n-  color: #333;\n-  color: var(--card);\n-}\n-\n-/* Mobile responsiveness */\n-@media (max-width: 768px) {\n-  .compatibility-wrapper {\n-    padding: 2rem;\n-    /* background-color: #3776ab; */\n-  }\n-\n-  \n-\n-  .compatibility-marquee-box {\n-    width: 90%;\n-  }\n-\n-  .compatibility-marquee-scroll {\n-    font-size: 1.5rem;\n-    gap: 1rem;\n-  }\n-}\n@@ -1,114 +0,0 @@\n-\"use client\";\n-\n-import { useEffect, useRef } from \"react\";\n-import \"./about.css\";\n-\n-import {\n-  FaBug,\n-  FaShieldAlt,\n-  FaExclamationTriangle,\n-  FaLock,\n-} from \"react-icons/fa\";\n-import {\n-  SiPython,\n-  SiFlask,\n-  SiDjango,\n-  SiFastapi,\n-} from \"react-icons/si\";\n-\n-const compatibilityIcons = [\n-  <SiPython className=\"icon-python\" />,\n-  <SiFlask className=\"icon-flask\" />,\n-  <SiDjango className=\"icon-django\" />,\n-  <SiFastapi className=\"icon-fastapi\" />,\n-];\n-\n-\n-const scannerErrors = [\n-  {\n-    icon: <FaBug />,\n-    title: \"SQL Injection\",\n-    desc: \"Improper input sanitization leading to arbitrary queries.\",\n-  },\n-  {\n-    icon: <FaExclamationTriangle />,\n-    title: \"XSS\",\n-    desc: \"Malicious scripts injected into pages viewed by others.\",\n-  },\n-  {\n-    icon: <FaShieldAlt />,\n-    title: \"Insecure Deserialization\",\n-    desc: \"Untrusted data can abuse logic or escalate privileges.\",\n-  },\n-  {\n-    icon: <FaLock />,\n-    title: \"Broken Authentication\",\n-    desc: \"Flaws that allow attackers to take over user accounts.\",\n-  },\n-  {\n-    icon: <FaBug />,\n-    title: \"Command Injection\",\n-    desc: \"User input can execute system-level commands.\",\n-  },\n-  {\n-    icon: <FaExclamationTriangle />,\n-    title: \"CSRF\",\n-    desc: \"Unwanted user actions via trusted web apps.\",\n-  },\n-  {\n-    icon: <FaShieldAlt />,\n-    title: \"Missing Security Headers\",\n-    desc: \"Critical headers absent, exposing vulnerabilities.\",\n-  },\n-  {\n-    icon: <FaLock />,\n-    title: \"Sensitive Data Exposure\",\n-    desc: \"Weak encryption or no protection of personal data.\",\n-  },\n-];\n-\n-export default function Compatibility() {\n-  const marqueeRef = useRef(null);\n-\n-  useEffect(() => {\n-    let scrollX = 0;\n-    const scroll = () => {\n-      if (marqueeRef.current) {\n-        scrollX -= 1;\n-        marqueeRef.current.style.transform = `translateX(${scrollX}px)`;\n-        if (Math.abs(scrollX) > marqueeRef.current.scrollWidth / 2) scrollX = 0;\n-        requestAnimationFrame(scroll);\n-      }\n-    };\n-    scroll();\n-  }, []);\n-\n-  return (\n-    <div className=\"compatibility-wrapper\">\n-      <h2 className=\"compatibility-heading\">Compatible With</h2>\n-\n-      <div className=\"compatibility-marquee-container\">\n-        <div className=\"compatibility-marquee-box\">\n-          <div className=\"compatibility-marquee-scroll\" ref={marqueeRef}>\n-            {compatibilityIcons.concat(compatibilityIcons).map((icon, i) => (\n-              <span key={i} className=\"language-icon\">{icon}</span>\n-            ))}\n-          </div>\n-        </div>\n-      </div>\n-\n-      <h3 className=\"compatibility-errors-heading\">\n-        AI-Powered Security Scan Errors\n-      </h3>\n-      <div className=\"compatibility-errors-grid\">\n-        {scannerErrors.map((err, idx) => (\n-          <div className=\"compatibility-error-card\" key={idx}>\n-            <div className=\"compatibility-error-icon\">{err.icon}</div>\n-            <strong>{err.title}</strong>\n-            <p className=\"compatibility-error-desc\">{err.desc}</p>\n-          </div>\n-        ))}\n-      </div>\n-    </div>\n-  );\n-}\n@@ -1,446 +0,0 @@\n-/* Documentation.css */\n-.docs-container {\n-  min-height: 100vh;\n-  background-color: var(--background-color);\n-  background-image: var(--background-image);\n-  color: var(--text-color);\n-}\n-\n-.theme-toggle {\n-  position: fixed;\n-  top: 1rem;\n-  right: 1rem;\n-  z-index: 60;\n-  padding: 0.75rem;\n-  border-radius: 50%;\n-  border: none;\n-  cursor: pointer;\n-  font-size: 1.25rem;\n-  transition: all 0.3s ease;\n-  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n-  background: var(--primary-color);\n-  color: white;\n-}\n-\n-.mobile-menu-btn {\n-  position: fixed;\n-  top: 1rem;\n-  left: 1rem;\n-  z-index: 50;\n-  display: block;\n-}\n-\n-.menu-toggle {\n-  padding: 0.5rem;\n-  border-radius: 0.375rem;\n-  background: var(--secondary-text-color);\n-  border: none;\n-  cursor: pointer;\n-  transition: background-color 0.2s;\n-  color: var(--text-color);\n-}\n-\n-.docs-layout {\n-  min-height: 100vh;\n-\n-}\n-\n-.sidebar {\n-  position: fixed;\n-  top: 0;\n-  left: 0;\n-  bottom: 0;\n-  width: 16rem;\n-  background: var(--nav-bg);\n-  border-right: 1px solid var(--terminal-bg);\n-  padding: 1.5rem;\n-  transform: translateX(-100%);\n-  transition: all 0.3s ease-in-out;\n-  z-index: 40;\n-  padding-top: 5rem;\n-}\n-\n-.sidebar-open {\n-  transform: translateX(0);\n-}\n-\n-.sidebar-content {\n-  position: sticky;\n-  top: 1.5rem;\n-}\n-\n-.logo {\n-  font-size: 1.25rem;\n-  font-weight: 600;\n-  color: var(--primary-color);\n-  margin-bottom: 2rem;\n-  display: flex;\n-  align-items: center;\n-  gap: 0.5rem;\n-}\n-\n-.nav-section {\n-  margin-bottom: 2rem;\n-}\n-\n-.nav-title {\n-  font-size: 0.75rem;\n-  font-weight: 600;\n-  color: var(--secondary-text-color);\n-  text-transform: uppercase;\n-  letter-spacing: 0.05em;\n-  margin-bottom: 0.5rem;\n-}\n-\n-.nav-links {\n-  display: flex;\n-  flex-direction: column;\n-  gap: 0.25rem;\n-}\n-\n-.nav-link {\n-  display: block;\n-  padding: 0.5rem 0;\n-  font-size: 0.875rem;\n-  color: var(--text-color);\n-  text-decoration: none;\n-  transition: all 0.2s;\n-  border-radius: 0.25rem;\n-  padding-left: 0.5rem;\n-}\n-\n-.nav-link:hover,\n-.nav-link.active {\n-  color: var(--primary-color);\n-  font-weight: 500;\n-  background: rgba(74, 111, 165, 0.1);\n-  padding-left: 1rem;\n-}\n-\n-.mobile-overlay {\n-  position: fixed;\n-  inset: 0;\n-  background: rgba(0, 0, 0, 0.5);\n-  z-index: 30;\n-}\n-\n-.main-container{\n-  width: 97vw;\n-}\n-\n-.main-content {\n-  padding: 2rem 1rem;\n-  max-width: 64rem;\n-  margin: 0 auto;\n-}\n-\n-.page-header {\n-  margin-bottom: 2rem;\n-  padding-bottom: 1.5rem;\n-  border-bottom: 1px solid var(--terminal-bg);\n-}\n-\n-.page-title {\n-  font-size: 1.875rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 0.5rem;\n-}\n-\n-.page-subtitle {\n-  font-size: 1.125rem;\n-  color: var(--output-color);\n-}\n-\n-.badge-container {\n-  display: flex;\n-  gap: 0.5rem;\n-  margin-top: 1rem;\n-  flex-wrap: wrap;\n-}\n-\n-.badge {\n-  background: var(--terminal-bg);\n-  color: var(--secondary-text-color);\n-  padding: 0.25rem 0.75rem;\n-  border-radius: 9999px;\n-  font-size: 0.75rem;\n-  font-weight: 500;\n-}\n-\n-.content-section {\n-  margin-bottom: 3rem;\n-}\n-\n-.section-title {\n-  font-size: 1.5rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.subsection-title {\n-  font-size: 1.25rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin: 1.5rem 0 0.75rem 0;\n-}\n-\n-.section-text {\n-  color: var(--secondary-text-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.install-options {\n-  display: flex;\n-  flex-direction: column;\n-  gap: 1rem;\n-}\n-\n-.install-card {\n-  background: var(--card);\n-  border-left: 4px solid var(--primary-color);\n-  padding: 1rem;\n-  border-radius: 0 0.375rem 0.375rem 0;\n-  transition: all 0.3s ease;\n-}\n-\n-.install-card:hover {\n-  transform: translateX(2px);\n-}\n-\n-.install-label {\n-  font-weight: 500;\n-  color: var(--text-color);\n-  margin-bottom: 0.5rem;\n-  display: flex;\n-  align-items: center;\n-  gap: 0.5rem;\n-}\n-\n-.code-block {\n-  background: var(--terminal-bg);\n-  border: 1px solid var(--secondary-text-color);\n-  border-radius: 0.375rem;\n-  padding: 0.75rem;\n-  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-  font-size: 0.875rem;\n-  overflow-x: auto;\n-  line-height: 1.4;\n-  color: var(--output-color);\n-}\n-\n-.code-block.large {\n-  padding: 1rem;\n-  margin: 1rem 0;\n-}\n-\n-.code-block.small {\n-  font-size: 0.25rem;\n-  padding: 0.5rem;\n-}\n-\n-.code-block pre {\n-  white-space: pre;\n-  overflow-x: auto;\n-  margin: 0;\n-}\n-\n-.inline-code {\n-  background: var(--terminal-bg);\n-  padding: 0.125rem 0.25rem;\n-  border-radius: 0.25rem;\n-  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-  font-size: 0.75em;\n-  color: var(--output-color);\n-}\n-\n-.info-box {\n-  background: var(--terminal-bg);\n-  border-left: 4px solid var(--primary-color);\n-  padding: 1rem;\n-  border-radius: 0 0.375rem 0.375rem 0;\n-  margin: 1rem 0;\n-  display: flex;\n-  align-items: flex-start;\n-  gap: 0.75rem;\n-}\n-\n-.info-icon {\n-  font-size: 1.25rem;\n-  flex-shrink: 0;\n-}\n-\n-.command-list {\n-  display: flex;\n-  flex-direction: column;\n-  gap: 1.5rem;\n-}\n-\n-.command-item {\n-  background: var(--card);\n-  border: 1px solid var(--secondary-text-color);\n-  border-radius: 0.5rem;\n-  padding: 1.5rem;\n-  transition: all 0.3s ease;\n-}\n-\n-.command-item:hover {\n-  border-color: var(--primary-color);\n-  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n-}\n-\n-.command-header {\n-  display: flex;\n-  align-items: center;\n-  justify-content: space-between;\n-  margin-bottom: 0.75rem;\n-  flex-wrap: wrap;\n-  gap: 0.5rem;\n-}\n-\n-.command-name {\n-  background: var(--terminal-bg);\n-  padding: 0.375rem 0.75rem;\n-  border-radius: 0.375rem;\n-  font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n-  font-size: 0.875rem;\n-  font-weight: 600;\n-  color: var(--output-color);\n-}\n-\n-.command-badge {\n-  background: var(--primary-color);\n-  color: white;\n-  padding: 0.25rem 0.5rem;\n-  border-radius: 0.25rem;\n-  font-size: 0.75rem;\n-  font-weight: 500;\n-}\n-\n-.command-desc {\n-  color: var(--secondary-text-color);\n-  margin-bottom: 0.5rem;\n-}\n-\n-.command-example {\n-  font-size: 0.875rem;\n-  color: var(--secondary-text-color);\n-}\n-\n-.severity-grid {\n-  display: grid;\n-  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n-  gap: 1rem;\n-  margin: 1.5rem 0;\n-}\n-\n-.severity-item {\n-  padding: 1rem;\n-  border-radius: 0.5rem;\n-  text-align: center;\n-  border: 1px solid;\n-}\n-\n-.severity-item.critical {\n-  background: #450a0a20;\n-  border-color: #dc2626;\n-  color: #e13434;\n-}\n-\n-.severity-item.high {\n-  background: #451a0320;\n-  border-color: #ea580c;\n-  color: #ea580c;\n-}\n-\n-.severity-item.medium {\n-  background: #451a0320;\n-  border-color: #d97706;\n-  color: #c7981f;\n-}\n-\n-.severity-item.low {\n-  background: #14532d20;\n-  border-color: #16a34a;\n-  color: #159e47;\n-}\n-\n-.severity-label {\n-  font-weight: 600;\n-  font-size: 0.875rem;\n-  text-transform: uppercase;\n-  letter-spacing: 0.05em;\n-}\n-\n-.severity-desc {\n-  font-size: 0.8rem;\n-  opacity: 0.8;\n-  margin-top: 0.25rem;\n-}\n-\n-.pattern-grid {\n-  display: grid;\n-  \n-  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n-/* grid-template-columns: repeat(2, 1fr); */\n-  gap: 1.5rem;\n-  margin-top: 1.5rem;\n-}\n-\n-.pattern-card {\n-  background: var(--card);\n-  border: 1px solid var(--secondary-text-color);\n-  border-radius: 0.5rem;\n-  padding: 1.5rem;\n-  transition: all 0.3s ease;\n-}\n-\n-.pattern-card:hover {\n-  border-color: var(--primary-color);\n-  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n-}\n-\n-.pattern-header {\n-  display: flex;\n-  align-items: center;\n-  gap: 0.75rem;\n-  margin-bottom: 1rem;\n-}\n-\n-.pattern-header h4 {\n-  font-size: 1.125rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin: 0;\n-}\n-\n-.pattern-icon {\n-  font-size: 1.5rem;\n-}\n-\n-/* Large screen styles */\n-@media (min-width: 1024px) {\n-  /* .mobile-menu-btn {\n-    display: none;\n-  } */\n-\n-  .docs-layout {\n-    display: grid;\n-    grid-template-columns: 250px 1fr;\n-  }\n-\n-  /* .sidebar {\n-    position: static;\n-    transform: translateX(0);\n-    width: auto;\n-  } */\n-\n-  .main-content {\n-    padding: 2rem 3rem;\n-  }\n-\n-  .mobile-overlay {\n-    /* display: none; */\n-  }\n-}\n\\ No newline at end of file\n@@ -1,413 +0,0 @@\n-\"use client\";\n-\n-import { useState, useEffect } from \"react\";\n-import \"./documentation.css\";\n-import '../globals.css'\n-\n-const Documentation = () => {\n-  const [sidebarOpen, setSidebarOpen] = useState(false);\n-  const [darkTheme, setDarkTheme] = useState(false);\n-\n-  const toggleTheme = () => {\n-    const newTheme = !darkTheme;\n-    setDarkTheme(newTheme);\n-    document.documentElement.setAttribute('data-theme', newTheme ? 'dark' : 'light');\n-    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n-  };\n-\n-  useEffect(() => {\n-    const savedTheme = localStorage.getItem('theme') || 'light';\n-    setDarkTheme(savedTheme === 'dark');\n-    document.documentElement.setAttribute('data-theme', savedTheme);\n-  }, []);\n-\n-  const navigation = [\n-    {\n-      title: \"Getting Started\",\n-      items: [\n-        { name: \"Installation\", href: \"#installation\", active: true },\n-        { name: \"Quick Start\", href: \"#quickstart\" },\n-        { name: \"Basic Usage\", href: \"#basic-usage\" },\n-      ],\n-    },\n-    {\n-      title: \"CLI Reference\",\n-      items: [{ name: \"Commands\", href: \"#commands\" }],\n-    },\n-    {\n-      title: \"Vulnerability Types\",\n-      items: [{ name: \"Common Patterns\", href: \"#patterns\" }],\n-    },\n-    {\n-      title: \"Advanced\",\n-      items: [\n-        { name: \"Configuration\", href: \"#configuration\" },\n-        { name: \"Contributing\", href: \"#contributing\" },\n-      ],\n-    },\n-  ];\n-\n-  return (\n-    <div className=\"docs-container\">\n-      <div className=\"mobile-menu-btn\">\n-        <button\n-          onClick={() => setSidebarOpen(!sidebarOpen)}\n-          className=\"menu-toggle\"\n-          aria-label=\"Toggle navigation\"\n-        >\n-          <span className=\"hamburger-icon\">{sidebarOpen ? \"\u2715\" : \"\u2630\"}</span>\n-        </button>\n-      </div>\n-\n-      <div className=\"docs-layout\">\n-        <nav className={`sidebar ${sidebarOpen ? \"sidebar-open\" : \"\"}`}>\n-          <div className=\"sidebar-content\">\n-            <div className=\"sidebar-header\">\n-              <h3 className=\"sidebar-title\">VYN Documentation</h3>\n-            </div>\n-\n-            {navigation.map((section) => (\n-              <div key={section.title} className=\"nav-section\">\n-                <h4 className=\"nav-title\">{section.title}</h4>\n-                <div className=\"nav-links\">\n-                  {section.items.map((item) => (\n-                    <a\n-                      key={item.name}\n-                      href={item.href}\n-                      className={`nav-link ${item.active ? \"active\" : \"\"}`}\n-                      onClick={() => setSidebarOpen(false)}\n-                    >\n-                      {item.name}\n-                    </a>\n-                  ))}\n-                </div>\n-              </div>\n-            ))}\n-          </div>\n-        </nav>\n-\n-        {sidebarOpen && (\n-          <div\n-            className=\"mobile-overlay\"\n-            onClick={() => setSidebarOpen(false)}\n-          />\n-        )}\n-        <div className=\"main-container\">\n-\n-        <main className=\"main-content\">\n-          <header className=\"page-header\">\n-            <h1 className=\"page-title\">Vyn Security Scanner</h1>\n-            <p className=\"page-subtitle\">\n-              A Python CLI tool that scans your codebase for security vulnerabilities\n-            </p>\n-            <div className=\"badge-container\">\n-              <span className=\"badge\">Python 3.7+</span>\n-              <span className=\"badge\">MIT License</span>\n-              <span className=\"badge\">v0.1.0</span>\n-            </div>\n-          </header>\n-\n-          <section id=\"installation\" className=\"content-section\">\n-            <h2 className=\"section-title\">Installation</h2>\n-            <p className=\"section-text\">\n-              Install Vyn using pip or from source:\n-            </p>\n-\n-            <div className=\"install-options\">\n-              <div className=\"install-card\">\n-                <div className=\"install-label\">\n-                  <span className=\"install-icon\">\ud83d\udce6</span>\n-                  From PyPI (Recommended)\n-                </div>\n-                <div className=\"code-block\">\n-                  pip install vyn\n-                </div>\n-              </div>\n-\n-              <div className=\"install-card\">\n-                <div className=\"install-label\">\n-                  <span className=\"install-icon\">\ud83d\udd27</span>\n-                  From Source\n-                </div>\n-                <div className=\"code-block\">\n-                  git clone https://github.com/hyemiie/vyn.git\n-                  <br />\n-                  cd vyn\n-                  <br />\n-                  pip install .\n-                </div>\n-              </div>\n-            </div>\n-          </section>\n-\n-          <section id=\"quickstart\" className=\"content-section\">\n-            <h2 className=\"section-title\">Quick Start</h2>\n-            <p className=\"section-text\">\n-              Get started with Vyn in seconds. Run a basic scan on your project:\n-            </p>\n-\n-            <div className=\"code-block large\">\n-              <pre>\n-                {`# Scan current directory\n-vyn scan .\n-\n-# Scan specific file\n-vyn scan myfile.py`}\n-              </pre>\n-            </div>\n-\n-            <div className=\"info-box\">\n-              <span className=\"info-icon\">\ud83d\udca1</span>\n-              <div>\n-                <strong>Pro Tip:</strong> Run{\" \"}\n-                <code className=\"inline-code\">vyn --help</code>{\" \"}\n-                to see all available commands and options.\n-              </div>\n-            </div>\n-          </section>\n-\n-         \n-\n-          <section id=\"basic-usage\" className=\"content-section\">\n-            <h2 className=\"section-title\">Basic Usage</h2>\n-\n-            <h3 className=\"subsection-title\">Scanning Files</h3>\n-            <p className=\"section-text\">\n-              Vyn can scan individual files, directories, or entire projects:\n-            </p>\n-\n-            <div className=\"code-block large\">\n-              <pre>\n-                {`# Single file\n-vyn scan app.py\n-\n-# Entire directory (recursive)\n-vyn scan /path/to/project\n-\n-# Current directory\n-vyn scan .`}\n-              </pre>\n-            </div>\n-\n-            <h3 className=\"subsection-title\">Understanding Results</h3>\n-            <p className=\"section-text\">\n-              Vyn categorizes vulnerabilities by severity and provides detailed\n-              information:\n-            </p>\n-\n-            <div className=\"severity-grid\">\n-              <div className=\"severity-item critical\">\n-                <div className=\"severity-label\">Critical</div>\n-                <div className=\"severity-desc\">Immediate action required</div>\n-              </div>\n-              <div className=\"severity-item high\">\n-                <div className=\"severity-label\">High</div>\n-                <div className=\"severity-desc\">Should be fixed soon</div>\n-              </div>\n-              <div className=\"severity-item medium\">\n-                <div className=\"severity-label\">Medium</div>\n-                <div className=\"severity-desc\">Consider fixing</div>\n-              </div>\n-              <div className=\"severity-item low\">\n-                <div className=\"severity-label\">Low</div>\n-                <div className=\"severity-desc\">Minor issues</div>\n-              </div>\n-            </div>\n-          </section>\n-\n-          <section id=\"commands\" className=\"content-section\">\n-            <h2 className=\"section-title\">CLI Commands</h2>\n-\n-            <div className=\"command-list\">\n-              <div className=\"command-item\">\n-                <div className=\"command-header\">\n-                  <code className=\"command-name\">\n-                    vyn scan [PATH]\n-                  </code>\n-                  <span className=\"command-badge\">Primary</span>\n-                </div>\n-                <p className=\"command-desc\">\n-                  Scan files or directories for security vulnerabilities\n-                </p>\n-                <div className=\"command-example\">\n-                  <strong>Example:</strong>{\" \"}\n-                  <code className=\"inline-code\">\n-                    vyn scan ./src --format table\n-                  </code>\n-                </div>\n-              </div>\n-\n-              <div className=\"command-item\">\n-                <div className=\"command-header\">\n-                  <code className=\"command-name\">\n-                    vyn version\n-                  </code>\n-                </div>\n-                <p className=\"command-desc\">\n-                  Show version information and exit\n-                </p>\n-              </div>\n-            </div>\n-          </section>\n-\n-          <section id=\"patterns\" className=\"content-section\">\n-            <h2 className=\"section-title\">Common Vulnerability Patterns</h2>\n-            <p className=\"section-text\">\n-              Vyn detects various security vulnerabilities commonly found in\n-              Python code:\n-            </p>\n-\n-            <div className=\"pattern-grid\">\n-              <div className=\"pattern-card\">\n-                <div className=\"pattern-header\">\n-                  <span className=\"pattern-icon\">\ud83d\udee1\ufe0f</span>\n-                  <h4>SQL Injection</h4>\n-                </div>\n-                <p>\n-                  Detects unsafe SQL query construction and dynamic query\n-                  building\n-                </p>\n-                <div className=\"code-block small\">\n-                  <pre>{`# Vulnerable\n-query = f\"SELECT * FROM users WHERE id = {user_id}\"\n-\n-# Safe\n-query = \"SELECT * FROM users WHERE id = %s\"\n-cursor.execute(query, (user_id,))`}</pre>\n-                </div>\n-              </div>\n-\n-              <div className=\"pattern-card\">\n-                <div className=\"pattern-header\">\n-                  <span className=\"pattern-icon\">\ud83d\udd10</span>\n-                  <h4>Hardcoded Secrets</h4>\n-                </div>\n-                <p>\n-                  Finds API keys, passwords, and other secrets in source code\n-                </p>\n-                <div className=\"code-block small\">\n-                  <pre>{`# Vulnerable\n-API_KEY = \"sk-1234567890abcdef\"\n-\n-# Safe\n-API_KEY = os.getenv('API_KEY')`}</pre>\n-                </div>\n-              </div>\n-\n-              <div className=\"pattern-card\">\n-                <div className=\"pattern-header\">\n-                  <span className=\"pattern-icon\">\u26a1</span>\n-                  <h4>Command Injection</h4>\n-                </div>\n-                <p>Identifies unsafe system command execution</p>\n-                <div className=\"code-block small\">\n-                  <pre>{`# Vulnerable\n-os.system(f\"rm {filename}\")\n-\n-# Safe\n-subprocess.run(['rm', filename], check=True)`}</pre>\n-                </div>\n-              </div>\n-\n-              <div className=\"pattern-card\">\n-                <div className=\"pattern-header\">\n-                  <span className=\"pattern-icon\">\ud83c\udf10</span>\n-                  <h4>Path Traversal</h4>\n-                </div>\n-                <p>Detects unsafe file path operations</p>\n-                <div className=\"code-block small\">\n-                  <pre>{`# Vulnerable\n-open(f\"./files/{user_input}\")\n-\n-# Safe\n-safe_path = os.path.join('./files', \n-    os.path.basename(user_input))`}</pre>\n-                </div>\n-              </div>\n-            </div>\n-          </section>\n-\n-          <section id=\"configuration\" className=\"content-section\">\n-            <h2 className=\"section-title\">Configuration</h2>\n-            <p className=\"section-text\">\n-              Customize Vyn's behavior with a configuration file (\n-              <code className=\"inline-code\">\n-                .vyn.yml\n-              </code>\n-              ):\n-            </p>\n-\n-            <div className=\"code-block large\">\n-              <pre>\n-                {`# .vyn.yml\n-scan:\n-  exclude_patterns:\n-    - \"*/tests/*\"\n-    - \"*/venv/*\"\n-    - \"*.pyc\"\n-  \n-  severity_threshold: \"medium\"\n-  \n-  rules:\n-    enabled:\n-      - sql-injection\n-      - hardcoded-secrets\n-      - command-injection\n-      - path-traversal\n-    \n-    disabled:\n-      - weak-crypto\n-\n-output:\n-  format: \"table\"\n-  show_context: true\n-  max_lines: 3\n-\n-integrations:\n-  github_actions: true\n-  pre_commit: true`}\n-              </pre>\n-            </div>\n-          </section>\n-\n-          <section id=\"integration\" className=\"content-section\">\n-            <h2 className=\"section-title\">CI/CD Integration</h2>\n-\n-            <h3 className=\"subsection-title\">GitHub Actions</h3>\n-            <div className=\"code-block large\">\n-              <pre>\n-                {`name: Security Scan\n-on: [push, pull_request]\n-\n-jobs:\n-  security:\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v3\n-      - name: Setup Python\n-        uses: actions/setup-python@v4\n-        with:\n-          python-version: '3.9'\n-      \n-      - name: Install Vyn\n-        run: pip install vyn\n-      \n-      - name: Run Security Scan\n-        run: vyn scan . --format json --output results.json\n-      \n-      - name: Upload Results\n-        uses: actions/upload-artifact@v3\n-        with:\n-          name: security-results\n-          path: results.json`}\n-              </pre>\n-            </div>\n-          </section>\n-        </main>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-};\n-\n-export default Documentation;\n\\ No newline at end of file\n@@ -1,26 +0,0 @@\n-.terminal-footer {\n-  background: #0e0e0e;\n-  color: #4177c2;\n-  font-family: 'Courier New', monospace;\n-  padding: 1.5rem;\n-  text-align: center;\n-  border-top: 1px solid #1f1f1f;\n-}\n-\n-.prompt {\n-  color: #e27e8a;\n-  margin-right: 0.5rem;\n-  animation: blink 1s steps(2, start) infinite;\n-}\n-\n-@keyframes blink {\n-  to {\n-    visibility: hidden;\n-  }\n-}\n-\n-.terminal-sub {\n-  margin-top: 0.5rem;\n-  font-size: 0.8rem;\n-  color: #888;\n-}\n@@ -1,17 +0,0 @@\n-// components/Footer.js\n-import './footer.css'\n-export default function Footer() {\n-  return (\n- <footer className=\"terminal-footer\">\n-  <div className=\"terminal-line\">\n-   Built to collaborate with you. Secured by AI.\n-  </div>\n-  <div className=\"terminal-sub\">\n-    <span className=\"prompt\">&gt;_</span>&copy; {new Date().getFullYear()} SecureScan\n-  </div>\n-</footer>\n-\n-\n-\n-  );\n-}\n@@ -1,109 +0,0 @@\n-.subcta-container {\n-  padding: 3rem 1rem;\n-  background-color: var(--background-color);\n-  background-image: var(--background-image);\n-\n-\n-}\n-\n-.first-subcta-content {\n-  display: flex;\n-  flex-direction: column;\n-  gap: 2rem;\n-  max-width: 90%;\n-  margin: 0 auto;\n-}\n-\n-.subcta-text h2 {\n-  font-size: 3rem;\n-  color: var(--primary-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.subcta-text p {\n-  font-size: 1.2rem;\n-  color: var(--text-color);\n-  margin-bottom: 1.5rem;\n-  line-height: 1.5;\n-  /* padding: 20px; */\n-}\n-\n-.subcta-btn {\n-  background-color: var(--terminal-bg);\n-  color: var(--output-color);\n-  border: 1px solid #435156;\n-  padding: 0.75rem 1.5rem;\n-  font-size: 1rem;\n-  border-radius: 10px;\n-  cursor: pointer;\n-  display: inline-flex;\n-  align-items: center;\n-  gap: 0.5rem;\n-  transition: all 0.3s ease;\n-}\n-\n-.subcta-btn:hover {\n-  background-color: var(--primary-color);\n-  color: #fff;\n-}\n-.subcta-code{\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-}\n-\n-\n-.subcta-code pre {\n-  background-color: var(--terminal-bg);\n-  color: var(--text-color);\n-  border-radius: 8px;\n-  padding: 0.75rem 1rem;\n-  font-size: 0.85rem;\n-  overflow-x: auto;\n-  max-height: 300px;\n-  max-width: 400px;\n-  min-width: 200px;\n-  line-height: 1.4;\n-  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n-  border: 1px solid rgba(255, 255, 255, 0.08);\n-  transition: box-shadow 0.3s ease;\n-}\n-\n-.subcta-code pre:hover {\n-  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);\n-}\n-\n-.code-keyword {\n-  color: #c586c0;\n-  font-weight: 600;\n-}\n-\n-.code-string {\n-  color: #ce9178;\n-}\n-\n-.code-comment {\n-  color: #6a9955;\n-}\n-\n-/* Responsive layout */\n-@media (min-width: 768px) {\n-  .first-subcta-content {\n-    flex-direction: row;\n-    align-items: center;\n-    padding: 20px;\n-  }\n-\n-  .subcta-text, .subcta-code {\n-    flex: 1;\n-  }\n-\n-  .subcta-text  {\n-\n-}\n-\n-  .subcta-code pre {\n-    height: auto;\n-    \n-  }\n-}\n@@ -1,49 +0,0 @@\n-import \"./cta.css\";\n-import { LuArrowUpRight } from \"react-icons/lu\";\n-\n-export default function SubGithubCTA() {\n-  const codeString = `\n-const companies = await expand({\n-  const dataset = await expand.dataset({\n-    sources: ['https://www.ycombinator.com/companies'],\n-    schema: Model('Company', {\n-      name: Expand.String,\n-      batch: Expand.String,\n-      url: Expand.String,\n-      industry: Expand.String,\n-    }),\n-    name: 'yc-companies-db',\n-  })\n-  \n-  const companies = await db.findMany('Company')\n-  `;\n-\n-  // Basic syntax highlighting\n-  const highlightedCode = codeString\n-    .replace(/(const|await|new|return)/g, '<span class=\"code-keyword\">$1</span>')\n-    .replace(/(['\"].*?['\"])/g, '<span class=\"code-string\">$1</span>')\n-    .replace(/(\\/\\/.*?$)/gm, '<span class=\"code-comment\">$1</span>');\n-\n-  return (\n-    <div className=\"subcta-container\">\n-      <div className=\"first-subcta-content\">\n-        <div className=\"subcta-text\">\n-          <h2>01</h2>\n-          <p>\n-        Scan your code, spot vulnerabilities, while the AI layer catches less obvious issues like misconfigurations, API misuse, and insecure patterns, all before your code reaches production\n-          </p>\n-          <button className=\"subcta-btn\">\n-            <LuArrowUpRight size={14} color=\"#e27e8a\" />\n-            Get Custom Documentation\n-          </button>\n-        </div>\n-\n-        <div className=\"subcta-code\">\n-          <pre>\n-            <code dangerouslySetInnerHTML={{ __html: highlightedCode }} />\n-          </pre>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n@@ -1,4 +1,4 @@\n-/* :root {\n+:root {\n   --background: #ffffff;\n   --foreground: #171717;\n }\n@@ -31,59 +31,12 @@ body {\n }\n \n a {\n-  /* color: inherit; */\n-  /* text-decoration: none; */\n+  color: inherit;\n+  text-decoration: none;\n+}\n \n-/* \n @media (prefers-color-scheme: dark) {\n   html {\n     color-scheme: dark;\n   }\n-}  */\n-\n-\n-:root {\n-  --background-color: #faf9f6;\n-  --background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.14'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");  /* --background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); */\n-  --text-color: #444;\n-  --primary-color: #4A6FA5;\n-  --secondary-color: #85B3D1;\n-  --btn-gradient-start: #4A6FA5;\n-  --btn-gradient-end: #85B3D1;\n-  --terminal-bg: #f4f4f4;\n-  --output-color: #434446;\n-  --terminal-bg2: rgb(173, 177, 184);\n-  --secondary-text-color: rgb(131, 137, 145);\n-    --card: linear-gradient(180deg, #F9F9F9, #E9E9E9);\n-    --nav-bg:linear-gradient(180deg, #F9F9F9, #E9E9E9)\n-\n }\n-\n-[data-theme=\"dark\"] {\n-  --background-color: #121417;\n-  --background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%239C92AC' fill-opacity='0.14'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");  /* --background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); */\n-  \n-  --text-color: #E4E4E4;\n-  --primary-color: #4A6FA5;\n-  --output-color: #edf4fc;\n-  --secondary-color: #85B3D1;\n-  --btn-gradient-start: #4A6FA5;\n-  --btn-gradient-end: #2C3E50;\n-  /* --terminal-bg: #2e4f7a; */\n-  --terminal-bg: #223c59;\n-  --terminal-bg2: #647e9c;\n-  --secondary-text-color: #88a3c1;\n-  --nav-bg : #2e3239;\n-  --card: linear-gradient(to right,\n-  #1f2937,\n-  #273342\n-  );\n-}\n-\n-\n-/* @media (max-width:600px) {\n-  nav{\n-    background-color: #223c59 !important;\n-  }\n-  \n-} */\n\\ No newline at end of file\n@@ -1,143 +0,0 @@\n-'use client';\n-\n-import React from 'react';\n-import '../globals.css';\n-\n-const TerminalBox = () => {\n-  return (\n-    <div className=\"terminal-container\">\n-      <div className=\"term-simul\">\n-        <div className=\"line\">pip install vyn</div>\n-        <div className=\"output\">\n-          Collecting vyn<br />\n-          Installing collected packages: vyn<br />\n-          Successfully installed vyn-1.0.0\n-        </div>\n-        <br />\n-        <div className=\"line\">vyn</div>\n-        <div className=\"output\">\n-          Welcome to vyn!<br />\n-          \u25b6 Ready for your commands...\n-        </div>\n-      </div>\n-\n-      <div className=\"term-simul2\">\n-        <div className=\"line\">pip install vyn</div>\n-        <div className=\"output\">\n-          Collecting vyn<br />\n-          Installing collected packages: vyn<br />\n-          Successfully installed vyn-1.0.0\n-        </div>\n-        <br />\n-        <div className=\"line\">vyn</div>\n-        <div className=\"output\">\n-          Welcome to vyn!<br />\n-          \u25b6 Ready for your commands...\n-        </div>\n-      </div>\n-\n-      <style jsx>{`\n-        .terminal-container {\n-          position: relative;\n-          width: 100%;\n-          max-width: 320px;\n-          aspect-ratio: 1;\n-          margin: 0 auto;\n-          perspective: 1000px;\n-        }\n-\n-        .term-simul, .term-simul2 {\n-          position: absolute;\n-          width: 100%;\n-          height: 100%;\n-          background-color: var(--terminal-bg);\n-          color: var(--secondary-color);\n-          font-family: 'Fira Code', monospace;\n-          font-size: clamp(0.7rem, 1.2vw, 1rem);\n-          padding: 12%;\n-          box-sizing: border-box;\n-          border-radius: 12px;\n-          box-shadow: 0 8px 25px rgba(0, 0, 0, 0.25);\n-          overflow-y: auto;\n-          white-space: pre-wrap;\n-          border: 1px solid #1B2733;\n-          transition: transform 0.6s ease, opacity 0.6s ease;\n-        }\n-\n-        .term-simul2 {\n-          background-color: var(--terminal-bg2);\n-        }\n-\n-        .term-simul {\n-          transform: rotate(-360deg) translate(-80px, -80px);\n-          animation: slideInLeft 1s ease forwards;\n-          z-index: 1;\n-        }\n-\n-        .term-simul2 {\n-          transform: rotate(360deg) translate(280px, -250px);\n-          animation: slideInRight 1s ease forwards;\n-          z-index: 0;\n-        }\n-\n-        .line::before {\n-          content: '$ ';\n-          color: #4A6FA5;\n-        }\n-\n-        .output {\n-          margin-left: 1em;\n-          color: var(--output-color);\n-        }\n-\n-        @keyframes slideInLeft {\n-          0% {\n-            transform: rotate(-20deg) translate(-100px, -50px);\n-            opacity: 0;\n-          }\n-          100% {\n-            transform: rotate(-6deg) translate(-20px, -10px);\n-            opacity: 1;\n-          }\n-        }\n-\n-        @keyframes slideInRight {\n-          0% {\n-            transform: rotate(20deg) translate(100px, 50px);\n-            opacity: 0;\n-          }\n-          100% {\n-            transform: rotate(8deg) translate(30px, 20px);\n-            opacity: 1;\n-          }\n-        }\n-\n-        @media (max-width: 768px) {\n-          .terminal-container {\n-            max-width: 220px;\n-            aspect-ratio: 1;\n-            margin-bottom: 20px;\n-          }\n-\n-          .term-simul, .term-simul2 {\n-            padding: 10%;\n-            font-size: 0.75rem;\n-          }\n-        }\n-\n-        @media (max-width: 480px) {\n-          .terminal-container {\n-            max-width: 180px;\n-          }\n-\n-          .term-simul, .term-simul2 {\n-            font-size: 0.68rem;\n-            padding: 8%;\n-          }\n-        }\n-      `}</style>\n-    </div>\n-  );\n-};\n-\n-export default TerminalBox;\n@@ -1,183 +0,0 @@\n-.hero{\n-background-image: var(--background-image);\n-background-color: var(--background-color);\n-border: 2px dashed rgba(0,0,0,0.2);\n-font-family: 'Patrick Hand', cursive;\n-color: var(--text-color);\n-padding-top: 40px;\n-border-top: none;\n-width: 100%;\n-\n-/* background: #F9F9F9 url('/paper-texture.png');\n-color: #333;\n-font-family: 'Fira Code', monospace;\n-border: 1px solid #ccc;\n-border-radius: 8px;\n-box-shadow: 0 5px 10px rgba(0,0,0,0.1); */\n-\n-/* background-color: #FAF9F6;\n-border: 1px solid rgba(0,0,0,0.1);\n-box-shadow: 0 3px 6px rgba(0,0,0,0.1);\n-font-family: 'Georgia', serif; */\n-\n-/* background-color: #faf9f6;\n-background-image: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\"); */\n-\n-/* background-color: #faf9f6;\n-background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='16' viewBox='0 0 12 16' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4 .99C4 .445 4.444 0 5 0c.552 0 1 .45 1 .99v4.02C6 5.555 5.556 6 5 6c-.552 0-1-.45-1-.99V.99zm6 8c0-.546.444-.99 1-.99.552 0 1 .45 1 .99v4.02c0 .546-.444.99-1 .99-.552 0-1-.45-1-.99V8.99z' fill='%23c0c0c0' fill-opacity='0.32' fill-rule='evenodd'/%3E%3C/svg%3E\");\n-\n-    \n-\n-background-color: #faf9f6;\n-background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='199' viewBox='0 0 100 199'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32'%3E%3Cpath d='M0 199V0h1v1.99L100 199h-1.12L1 4.22V199H0zM100 2h-.12l-1-2H100v2z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E\"); */\n-/* \n-background-color: #faf9f6;\n-background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23c0c0c0' fill-opacity='0.32'%3E%3Cpath opacity='.5' d='M96 95h4v1h-4v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4h-9v4h-1v-4H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15v-9H0v-1h15V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h9V0h1v15h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9h4v1h-4v9zm-1 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm9-10v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-10 0v-9h-9v9h9zm-9-10h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9zm10 0h9v-9h-9v9z'/%3E%3Cpath d='M6 5V0H5v5H0v1h5v94h1V6h94V5H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); */\n-}\n-\n-.hero-page{\n-    height: 100vh;\n-    display: flex;\n-        /* background: linear-gradient(135deg, #0f2027, #203a43, #2c5364); */\n-\n-    \n-}\n-\n-.hero-container{\n-    width: 50%;\n-    display: flex;\n-    align-items: center;\n-    justify-content:center;\n-    flex-direction: column;\n-    /* font-family: 'Fira Code', 'Consolas', 'Menlo', 'Courier New', monospace; */\n-    \n-\n-    .hero-text{\n-        align-items: center;\n-        width: 60%;\n-        /* background-color: hotpink; */\n-       \n-    }\n-  \n-h2 {\n-  width: 100%;\n-  font-size: 35px;\n-  background-color: #4A6FA5;\n-  background-clip: text;\n-  -webkit-background-clip: text;\n-  -webkit-text-fill-color: transparent;\n-  display: inline-block;\n-  \n-}\n-\n-\n-    p{\n-        /* background-color: gold; */\n-        width: 100%;\n-        font-size: 15px;\n-\n-    }\n-\n-    ul{\n-        /* background-color: blanchedalmond; */\n-     list-style: none;\n-         width: 65%;\n-\n-    }\n-}\n-\n-.list-span{\n-    display: flex;\n-  \n-}\n-\n-\n-.second-half{\n-    width: 50%;\n-    display: flex;\n-    align-items: center;\n-    justify-content: center;\n-    /* background-color: bisque; */\n-}\n-\n-.terminal-container{\n-    /* background-color: rgb(102, 61, 61); */\n-    width: 70%;\n-    /* border: 2px solid saddlebrown;*/\n-} \n-\n-.terminal-div{\n-    /* background-color: sandybrown; */\n-    height: 100%;\n-\n-\n-    pre{\n-            border-left: 22px solid rgb(228, 232, 232);\n-            border-right: 22px solid rgb(235, 240, 240);\n-    padding-top: 20px;\n-    padding-bottom: 20px;\n-    overflow: scroll;\n-\n-    }\n-}\n-\n-\n-\n-\n-\n-\n-.btn-div{\n-    /* background-color: #f8f8ed; */\n-    height: 10vh;\n-    display: flex;\n-    align-items: center;\n-    justify-content: center;\n-  \n-\n-    button{\n-        padding: 8px;\n-        /* font-family: 'Fira Code', 'Consolas', 'Menlo', 'Courier New', monospace; */\n-        border: 1px solid grey;\n-         /* background: rgb(40, 86, 120); */\n-        background: linear-gradient(135deg, #4A6FA5, #85B3D1);\n-        border-radius: 5px;\n-\n-        color: #dcdcdc !important;\n-\n-    }\n-}\n-\n-\n-\n-@media (max-width: 640px) { \n-    .hero-container{\n-        width: 100% !important;\n-        /* background-color: rgb(84, 70, 47); */\n-        display: flex !important;\n-        flex-direction: column !important;\n-        align-items: center !important;\n-        justify-content: center !important;\n-     \n-\n-    }\n-\n-    .hero-page{\n-        flex-direction: column;\n-        /* background-color: aliceblue; */\n-    }\n-\n-    .second-half{\n-        width: 100% !important;\n-        display: flex !important;\n-        align-items: center !important;\n-        justify-content: center !important;\n-        padding: 20px !important;\n-    }\n-\n-\n-    .btn-div{\n-        margin-top:  75px;\n-    }\n-\n-   \n-}\n@@ -1,112 +0,0 @@\n-import Image from \"next/image\";\n-import \"./hero.css\";\n-import { LuArrowUpRight } from \"react-icons/lu\";\n-import { FaCheck, faCheck } from \"react-icons/fa\";\n-import Compatibility from \"../about/page\";\n-import GithubCTA from \"../githubcta/page\";\n-import Footer from \"../footer/page\";\n-import SubGithubCTA from \"../subgithubcta/page\";\n-import Documentation from \"../documentation/page\";\n-import Link from \"next/link\";\n-import ScannerBoard from \"../scannerboard/page\";\n-import TerminalBox from \"./TerminalBox\";\n-import ThemeToggle from \"../themetoggle/ThemeToggle\";\n-import '../globals.css'\n-\n-export default function Home() {\n-  const codeString = `\n-const companies = await expand({\n-  sources: ['https://www.ycombinator.com/companies'],\n-  // auto-generated schema by expand.ai\n-  schema: Model('Company', {\n-    name: Expand.String,\n-    batch: Expand.String,\n-    url: Expand.String,\n-    industry: Expand.String,\n-  })\n-});\n-  `;\n-  return (\n-    <div className=\"hero\">\n-      <div className=\"hero-page\">\n-      {/* <ThemeToggle/> */}\n-        <div className=\"hero-container\">\n-          <div className=\"hero-text\">\n-            <h2>Vyn</h2>\n-            <p>\n-              expand.ai instantly turns any website into a type-safe API you can\n-              rely on.\n-            </p>\n-          </div>\n-          <ul>\n-             <li> <FaCheck\n-                style={{\n-                  color: \"#4A6FA5\",\n-                  fontSize: \"12px\",\n-                  fontWeight: \"200\",\n-                }}\n-              />\n-              Reliable scraping infrastructure</li>\n-              <li>\n-              <FaCheck\n-                style={{\n-                  color: \"#4A6FA5\",\n-                  fontSize: \"12px\",\n-                  fontWeight: \"200\",\n-                }}\n-              />{\" \"}\n-              High quality with back checking</li>\n-                <li> <FaCheck\n-                style={{\n-                  color: \"#4A6FA5\",\n-                  fontSize: \"12px\",\n-                  fontWeight: \"200\",\n-                }}\n-              />{\" \"}\n-           Great developer experience</li>\n-                <li> <FaCheck\n-                style={{\n-                  color: \"#4A6FA5\",\n-                  fontSize: \"12px\",\n-                  fontWeight: \"200\",\n-                }}\n-              />{\" \"}\n-           Instant API for any website</li>\n-          </ul>\n-        </div>\n-        <div className=\"second-half\">\n-          {/* <div className=\"terminal-container\">\n-            <div className=\"terminal-div\">\n-              <pre\n-                style={{\n-                  backgroundColor: \"#f4f4f4\",\n-                  borderRadius: \"5px\",\n-                  overflowX: \"auto\",\n-                  height: \"'100%\",\n-                }}\n-              >\n-\n-                <code>{codeString}</code>\n-              </pre>\n-            </div>\n-          </div> */}\n-          <TerminalBox/>\n-          \n-        </div>\n-      </div>\n-      <div className=\"btn-div\">\n-        <button className=\"heros-btn\">\n-          <LuArrowUpRight size={14} color=\"rgb(40, 86, 120)\" style={{color:\"white\"}} />\n-          <Link href='/documentation' style={{color:\"white\"}}>Read documentation\n-</Link>\n-        </button>\n-      </div>\n-      <Compatibility />\n-      <GithubCTA />\n-      <SubGithubCTA/>\n-      <GithubCTA/>\n-      <Footer/>\n-\n-    </div>\n-  );\n-}\n@@ -1,8 +1,5 @@\n import { Geist, Geist_Mono } from \"next/font/google\";\n-import Link from \"next/link\";\n-import { LuArrowRight } from \"react-icons/lu\";\n-import \"./rootlayout.css\";\n-import ThemeToggle from \"./themetoggle/ThemeToggle\";\n+import \"./globals.css\";\n \n const geistSans = Geist({\n   variable: \"--font-geist-sans\",\n@@ -22,29 +19,7 @@ export const metadata = {\n export default function RootLayout({ children }) {\n   return (\n     <html lang=\"en\">\n-      <body style={{ backgroundColor: \"var(--background-color)\" }}>\n-        <div style={{ width: \"100%\", display: \"flex\", alignItems: \"center\", justifyContent: 'center' }}>\n-          <nav className=\"nav-container\">\n-            <div className=\"nav-inner\">\n-              <Link href=\"/hero\" className=\"logo-link\">\n-                <div className=\"logo-image\"></div>\n-              </Link>\n-\n-              <div className=\"heroBtndiv\">\n-                <Link href=\"/documentation\" passHref legacyBehavior>\n-                  <a className=\"docs-link\">Read docs</a>\n-                </Link>\n-\n-                <Link href=\"/scannerboard\" passHref legacyBehavior>\n-                  <a className=\"scan-link\">Scan repo</a>\n-                </Link>\n-              </div>\n-\n-            </div>\n-            <ThemeToggle/>\n-\n-          </nav>\n-        </div>\n+      <body className={`${geistSans.variable} ${geistMono.variable}`}>\n         {children}\n       </body>\n     </html>\n@@ -1,6 +1,95 @@\n-// app/page.tsx\n-import { redirect } from 'next/navigation';\n+import Image from \"next/image\";\n+import styles from \"./page.module.css\";\n \n export default function Home() {\n-  redirect('/hero');\n+  return (\n+    <div className={styles.page}>\n+      <main className={styles.main}>\n+        <Image\n+          className={styles.logo}\n+          src=\"/next.svg\"\n+          alt=\"Next.js logo\"\n+          width={180}\n+          height={38}\n+          priority\n+        />\n+        <ol>\n+          <li>\n+            Get started by editing <code>src/app/page.js</code>.\n+          </li>\n+          <li>Save and see your changes instantly.</li>\n+        </ol>\n+\n+        <div className={styles.ctas}>\n+          <a\n+            className={styles.primary}\n+            href=\"https://vercel.com/new?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app\"\n+            target=\"_blank\"\n+            rel=\"noopener noreferrer\"\n+          >\n+            <Image\n+              className={styles.logo}\n+              src=\"/vercel.svg\"\n+              alt=\"Vercel logomark\"\n+              width={20}\n+              height={20}\n+            />\n+            Deploy now\n+          </a>\n+          <a\n+            href=\"https://nextjs.org/docs?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app\"\n+            target=\"_blank\"\n+            rel=\"noopener noreferrer\"\n+            className={styles.secondary}\n+          >\n+            Read our docs\n+          </a>\n+        </div>\n+      </main>\n+      <footer className={styles.footer}>\n+        <a\n+          href=\"https://nextjs.org/learn?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app\"\n+          target=\"_blank\"\n+          rel=\"noopener noreferrer\"\n+        >\n+          <Image\n+            aria-hidden\n+            src=\"/file.svg\"\n+            alt=\"File icon\"\n+            width={16}\n+            height={16}\n+          />\n+          Learn\n+        </a>\n+        <a\n+          href=\"https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app\"\n+          target=\"_blank\"\n+          rel=\"noopener noreferrer\"\n+        >\n+          <Image\n+            aria-hidden\n+            src=\"/window.svg\"\n+            alt=\"Window icon\"\n+            width={16}\n+            height={16}\n+          />\n+          Examples\n+        </a>\n+        <a\n+          href=\"https://nextjs.org?utm_source=create-next-app&utm_medium=appdir-template&utm_campaign=create-next-app\"\n+          target=\"_blank\"\n+          rel=\"noopener noreferrer\"\n+        >\n+          <Image\n+            aria-hidden\n+            src=\"/globe.svg\"\n+            alt=\"Globe icon\"\n+            width={16}\n+            height={16}\n+          />\n+          Go to nextjs.org \u2192\n+        </a>\n+      </footer>\n+    </div>\n+  );\n }\n@@ -1,101 +0,0 @@\n-/* rootlayout.css */\n-\n-.nav-container {\n-  padding: 1rem;\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  background: var(--nav-bg);\n-  position: fixed;\n-  top: 0;\n-  z-index: 1;\n-  margin-top: 10px;\n-  height: 20px;\n-  width: 80%;\n-  border-radius: 15px;\n-  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.1);\n-}\n-\n-.nav-inner {\n-  width: 100%;\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-}\n-\n-.logo-link {\n-  display: flex;\n-  align-items: center;\n-  text-decoration: none;\n-}\n-\n-.logo-image {\n-  background-image: url('/Images/vyn_bg_logo.png');\n-  background-size: contain;\n-  background-position: center;\n-  background-repeat: no-repeat;\n-  width: 150px;\n-  height: 150px;\n-}\n-\n-.heroBtndiv {\n-  width: 25%;\n-  display: flex;\n-  justify-content: space-evenly;\n-}\n-\n-.docs-link {\n-  padding: 0.5rem 1rem;\n-  border-radius: 12px;\n-  color: var(--output-color);\n-  text-decoration: none;\n-  font-size: 14px;\n-  font-weight: 500;\n-  border: 1px solid rgba(0,0,0,0.1);\n-  box-shadow: inset 0 -1px 0 rgba(0,0,0,0.05);\n-}\n-\n-.scan-link {\n-  border-radius: 12px;\n-  padding: 0.5rem 1rem;\n-  background: linear-gradient(135deg, #4A6FA5, #85B3D1);\n-  color: #fff;\n-  text-decoration: none;\n-  font-size: 14px;\n-  font-weight: 500;\n-  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n-}\n-\n-@media(max-width: 600px) {\n-    .nav-container{\n-        /* background-color: rgb(219, 168, 98) !important; */\n-        width: 300px;\n-    }\n-\n-    .nav-inner{\n-        /* background-color: #4A6FA5; */\n-    }\n-\n-    .logo-link{\n-        height: fit-content;\n-          /* width: 100px;\n-  height: 100px; */\n-    }\n-\n-    .logo-image{\n-         width: 100px;\n-  height: 100px;\n-    }\n-\n-    .heroBtndiv{\n-        width: 400px;\n-        justify-content: flex-end;\n-    }\n-\n-    .docs-link{\n-        font-size: 12px;\n-          padding: 0.5rem;\n-\n-    }\n-    \n-}\n@@ -1,445 +0,0 @@\n-/* ScannerBoard Styles - boards.css */\n-\n-.scanner-container {\n-  min-height: 100vh;\n-  background-color: var(--background-color);\n-  background-image: var(--background-image);\n-  padding: 80px 2rem 2rem; /* Extra top padding for fixed nav */\n-  color: var(--text-color);\n-  font-family: var(--font-geist-sans, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);\n-}\n-\n-.scanner-wrapper {\n-  max-width: 1200px;\n-  margin: 0 auto;\n-}\n-\n-/* Header Section */\n-.scanner-header {\n-  text-align: center;\n-  margin-bottom: 3rem;\n-}\n-\n-.scanner-title {\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  gap: 0.5rem;\n-  font-size: 2.5rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 2rem;\n-}\n-\n-.scanner-title-icon {\n-  width: 2.5rem;\n-  height: 2.5rem;\n-  color: var(--primary-color);\n-}\n-\n-/* Form Section */\n-.scanner-form {\n-  display: flex;\n-  gap: 1rem;\n-  max-width: 100vw;\n-  margin: 0 auto 2rem;\n-  flex-wrap: wrap;\n-  position: relative;\n-  \n-}\n-.scanner-input {\n-  width: 100%;\n-  padding: 1rem 3.5rem 1rem 1rem; /* extra right padding to make space for the button */\n-  /* border: 1px solid rgba(200, 200, 200, 0.3); */\n-  border: none;\n-  border-bottom:  1px solid rgb(107, 118, 137);\n-  /* border-radius: 50px; */\n-  background-color: var(--card);\n-  color: var(--text-color);\n-  font-size: 1rem;\n-  outline: none;\n-  transition: all 0.3s ease;\n-  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n-}\n-\n-.scanner-input:focus {\n-  border-color: var(--primary-color);\n-  box-shadow: 0 0 0 3px rgba(74, 111, 165, 0.1);\n-}\n-\n-.scanner-input::placeholder {\n-  color: var(--secondary-text-color);\n-}\n-\n-.scanner-button {\n-  position: absolute;\n-  top: 50%;\n-  right: 10px;\n-  transform: translateY(-50%);\n-  height: 42px;\n-  width: 42px;\n-  border: none;\n-  border-radius: 50%;\n-  background: linear-gradient(135deg, var(--btn-gradient-start), var(--btn-gradient-end));\n-  /* background-color: rgb(38, 48, 54); */\n-  color: var(--btn-icon-color, white);\n-  font-size: 1.2rem;\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  cursor: pointer;\n-  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n-  transition: all 0.3s ease;\n-}\n-\n-\n-.scanner-button:hover:not(:disabled) {\n-  transform: translateY(-1px);\n-  box-shadow: 0 6px 20px rgba(74, 111, 165, 0.3);\n-}\n-\n-.scanner-button:disabled {\n-  opacity: 0.7;\n-  cursor: not-allowed;\n-  transform: none;\n-}\n-\n-/* Loading Indicator */\n-.loading-indicator {\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-  gap: 1rem;\n-  margin-top: 2rem;\n-  padding: 1.5rem;\n-  background: var(--card);\n-  border-radius: 15px;\n-  color: var(--text-color);\n-}\n-\n-.loading-spinner {\n-  width: 20px;\n-  height: 20px;\n-  border: 2px solid var(--secondary-text-color);\n-  border-top: 2px solid var(--primary-color);\n-  border-radius: 50%;\n-  animation: spin 1s linear infinite;\n-}\n-\n-@keyframes spin {\n-  0% { transform: rotate(0deg); }\n-  100% { transform: rotate(360deg); }\n-}\n-\n-/* Error Message */\n-.error-message {\n-  margin-top: 1rem;\n-  padding: 1rem 1.5rem;\n-  background: linear-gradient(135deg, #ff6b6b, #ee5a52);\n-  color: white;\n-  border-radius: 12px;\n-  text-align: center;\n-  font-weight: 500;\n-  box-shadow: 0 4px 15px rgba(255, 107, 107, 0.2);\n-}\n-\n-/* Results Section */\n-.results-container {\n-  margin-top: 3rem;\n-}\n-\n-.results-header {\n-  margin-bottom: 2rem;\n-}\n-\n-.results-title {\n-  font-size: 2rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.results-summary {\n-  display: flex;\n-  align-items: center;\n-  gap: 2rem;\n-  flex-wrap: wrap;\n-  width: 100%;\n-  justify-content: space-between;\n-}\n-\n-.results-count {\n-  font-size: 1.1rem;\n-  color: var(--secondary-text-color);\n-  font-weight: 500;\n-}\n-\n-.severity-badges {\n-  display: flex;\n-  gap: 0.5rem;\n-  flex-wrap: wrap;\n-}\n-\n-/* Issue Cards */\n-.issue-card {\n-  background: var(--card);\n-  border-radius: 15px;\n-  margin-bottom: 1rem;\n-  overflow: hidden;\n-  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n-  transition: all 0.3s ease;\n-  border: 1px solid rgba(0, 0, 0, 0.05);\n-}\n-\n-.issue-card:hover {\n-  transform: translateY(-2px);\n-  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n-}\n-\n-.issue-header {\n-  cursor: pointer;\n-  transition: background-color 0.2s ease;\n-}\n-\n-.issue-header:hover {\n-  background: rgba(74, 111, 165, 0.05);\n-}\n-\n-.issue-header-content {\n-  display: flex;\n-  align-items: flex-start;\n-  justify-content: space-between;\n-  padding: 1.5rem;\n-  gap: 1rem;\n-}\n-\n-.issue-info {\n-  flex: 1;\n-}\n-\n-.issue-badges {\n-  display: flex;\n-  gap: 0.75rem;\n-  margin-bottom: 1rem;\n-  flex-wrap: wrap;\n-}\n-\n-.severity-badge {\n-  display: flex;\n-  align-items: center;\n-  gap: 0.4rem;\n-  padding: 0.4rem 0.8rem;\n-  border-radius: 8px;\n-  font-size: 0.85rem;\n-  font-weight: 600;\n-  text-transform: uppercase;\n-  letter-spacing: 0.5px;\n-}\n-\n-.severity-high {\n-  background: linear-gradient(135deg, #ff6b6b, #ee5a52);\n-  color: white;\n-}\n-\n-.severity-medium {\n-  background: linear-gradient(135deg, #ffa726, #ff9800);\n-  color: white;\n-}\n-\n-.severity-low {\n-  background: linear-gradient(135deg, #66bb6a, #4caf50);\n-  color: white;\n-}\n-\n-.severity-default {\n-  background: var(--secondary-color);\n-  color: white;\n-}\n-\n-.confidence-badge {\n-  display: flex;\n-  align-items: center;\n-  gap: 0.4rem;\n-  padding: 0.4rem 0.8rem;\n-  border-radius: 8px;\n-  background: rgba(74, 111, 165, 0.1);\n-  color: var(--primary-color);\n-  font-size: 0.85rem;\n-  font-weight: 500;\n-}\n-\n-.severity-icon-medium,\n-.severity-icon-small,\n-.confidence-icon,\n-.file-icon {\n-  width: 1rem;\n-  height: 1rem;\n-}\n-\n-.issue-title {\n-  font-size: 1.2rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 0.75rem;\n-  line-height: 1.4;\n-}\n-\n-.issue-details {\n-  display: flex;\n-  align-items: center;\n-  gap: 1rem;\n-  color: var(--secondary-text-color);\n-  font-size: 0.9rem;\n-  flex-wrap: wrap;\n-}\n-\n-.issue-file {\n-  display: flex;\n-  align-items: center;\n-  gap: 0.4rem;\n-  font-family: var(--font-geist-mono, 'Monaco', 'Menlo', monospace);\n-  background: rgba(74, 111, 165, 0.1);\n-  padding: 0.2rem 0.5rem;\n-  border-radius: 6px;\n-}\n-\n-.chevron-icon {\n-  color: var(--secondary-text-color);\n-  transition: transform 0.2s ease;\n-}\n-\n-/* Expanded Content */\n-.issue-expanded {\n-  border-top: 1px solid rgba(0, 0, 0, 0.1);\n-  padding: 1.5rem;\n-  background: rgba(74, 111, 165, 0.02);\n-}\n-\n-.suggestion-section {\n-  margin-bottom: 1rem;\n-}\n-\n-.suggestion-title {\n-  display: flex;\n-  align-items: center;\n-  gap: 0.5rem;\n-  font-size: 1.1rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 0.75rem;\n-}\n-\n-.suggestion-icon {\n-  width: 1.2rem;\n-  height: 1.2rem;\n-  color: #ffa726;\n-}\n-\n-.suggestion-content {\n-  background: var(--terminal-bg);\n-  color: var(--output-color);\n-  padding: 1rem;\n-  border-radius: 10px;\n-  font-family: var(--font-geist-mono, 'Monaco', 'Menlo', monospace);\n-  font-size: 0.9rem;\n-  line-height: 1.6;\n-  white-space: pre-wrap;\n-  border-left: 4px solid var(--primary-color);\n-}\n-\n-.full-path {\n-  font-family: var(--font-geist-mono, 'Monaco', 'Menlo', monospace);\n-  font-size: 0.8rem;\n-  color: var(--secondary-text-color);\n-  background: rgba(0, 0, 0, 0.05);\n-  padding: 0.5rem;\n-  border-radius: 6px;\n-  word-break: break-all;\n-}\n-\n-/* No Issues State */\n-.no-issues {\n-  text-align: center;\n-  padding: 4rem 2rem;\n-  background: var(--card);\n-  border-radius: 20px;\n-  border: 2px dashed var(--secondary-color);\n-}\n-\n-.no-issues-icon {\n-  width: 4rem;\n-  height: 4rem;\n-  color: var(--primary-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.no-issues-title {\n-  font-size: 1.5rem;\n-  font-weight: 600;\n-  color: var(--text-color);\n-  margin-bottom: 0.5rem;\n-}\n-\n-.no-issues-subtitle {\n-  color: var(--secondary-text-color);\n-  font-size: 1rem;\n-}\n-\n-/* Responsive Design */\n-@media (max-width: 768px) {\n-  .scanner-container {\n-    padding: 100px 1rem 1rem;\n-  }\n-  \n-  .scanner-form {\n-    flex-direction: column;\n-    align-items: stretch;\n-  }\n-  \n-  .scanner-input {\n-    min-width: unset;\n-  }\n-  \n-  .results-summary {\n-    flex-direction: column;\n-    align-items: flex-start;\n-    gap: 1rem;\n-      justify-content: space-between;\n-      width: 100%;\n-\n-  }\n-  \n-  .issue-header-content {\n-    flex-direction: column;\n-    gap: 1rem;\n-  }\n-  \n-  .chevron-icon {\n-    align-self: flex-end;\n-  }\n-  \n-  .issue-details {\n-    flex-direction: column;\n-    align-items: flex-start;\n-    gap: 0.5rem;\n-  }\n-}\n-\n-@media (max-width: 480px) {\n-  .scanner-title {\n-    font-size: 2rem;\n-  }\n-  \n-  .scanner-input {\n-    padding: 0.875rem 1.25rem;\n-  }\n-  \n-  .scanner-button {\n-    padding: 0.875rem 1.5rem;\n-  }\n-  \n-  .issue-header-content,\n-  .issue-expanded {\n-    padding: 1rem;\n-  }\n-}\n\\ No newline at end of file\n@@ -1,246 +0,0 @@\n-\"use client\"\n-\n-import React, { useState } from 'react';\n-import { AlertTriangle, Shield, Code, FileText, Lightbulb, ChevronDown, ChevronUp, Github, TerminalIcon } from 'lucide-react';\n-import './boards.css';\n-import axios from 'axios';\n-import '../globals.css'\n-\n-const ScannerBoard = () => {\n-    const [repolink, setRepoLink] = useState('');\n-    const [scanResult, setScanResult] = useState(null);\n-    const [loading, setLoading] = useState(false);\n-    const [error, setError] = useState(null);\n-\n-    // Parse the scan result text into structured data\n-    const parseScanResult = (resultText) => {\n-        if (!resultText) return [];\n-\n-        const issues = [];\n-        const sections = resultText.split('==================================================');\n-\n-        sections.forEach(section => {\n-            if (section.trim()) {\n-                const lines = section.split('\\n').filter(line => line.trim());\n-                const issue = {};\n-                let collectingSuggestion = false;\n-                let suggestionLines = [];\n-\n-                lines.forEach(line => {\n-                    if (line.includes('\u2192 Issue      :')) {\n-                        issue.title = line.replace('\u2192 Issue      :', '').trim();\n-                    } else if (line.includes('\u2192 File       :')) {\n-                        issue.file = line.replace('\u2192 File       :', '').trim();\n-                    } else if (line.includes('\u2192 Line       :')) {\n-                        issue.line = line.replace('\u2192 Line       :', '').trim();\n-                    } else if (line.includes('\u2192 Severity   :')) {\n-                        issue.severity = line.replace('\u2192 Severity   :', '').trim();\n-                    } else if (line.includes('\u2192 Confidence :')) {\n-                        issue.confidence = line.replace('\u2192 Confidence :', '').trim();\n-                    } else if (line.includes('\u2192 AI Suggestion:')) {\n-                        collectingSuggestion = true;\n-                        suggestionLines.push(line.replace('\u2192 AI Suggestion:', '').trim());\n-                    } else if (collectingSuggestion) {\n-                        suggestionLines.push(line);\n-                    }\n-                });\n-\n-                if (suggestionLines.length > 0) {\n-                    issue.suggestion = suggestionLines.join('\\n').trim();\n-                }\n-\n-                if (issue.title) {\n-                    issues.push(issue);\n-                }\n-            }\n-        });\n-\n-        return issues;\n-    };\n-\n-    const scanrepo = async () => {\n-        if (repolink) {\n-            setLoading(true);\n-            setError(null);\n-            setScanResult(null);\n-\n-            try {\n-                // Remove the mock response and use the actual API call\n-                const response = await axios.post('https://vyn-web-demo.onrender.com/scan_repo/', {\n-                    repo_url: repolink\n-                });\n-                \n-                console.log('Scan successful:', response);\n-                setScanResult(response.data); // Store only the data part\n-            } catch (error) {\n-                console.error('Error scanning repo:', error);\n-                setError('Failed to scan the repository. Please try again.');\n-            } finally {\n-                setLoading(false);\n-            }\n-        } else {\n-            alert(\"Please enter a repository URL.\");\n-        }\n-    };\n-\n-    const getSeverityClass = (severity) => {\n-        switch (severity?.toUpperCase()) {\n-            case 'HIGH': return 'severity-high';\n-            case 'MEDIUM': return 'severity-medium';\n-            case 'LOW': return 'severity-low';\n-            default: return 'severity-default';\n-        }\n-    };\n-\n-    const getSeverityIcon = (severity) => {\n-        switch (severity?.toUpperCase()) {\n-            case 'HIGH': return <AlertTriangle className=\"severity-icon-medium\" />;\n-            case 'MEDIUM': return <Shield className=\"severity-icon-medium\" />;\n-            case 'LOW': return <Shield className=\"severity-icon-small\" />;\n-            default: return <Shield className=\"severity-icon-small\" />;\n-        }\n-    };\n-\n-    // Fix: Access scanResult.report directly since we're now storing response.data\n-    const issues = scanResult ? parseScanResult(scanResult.report) : [];\n-\n-    const IssueCard = ({ issue, index }) => {\n-        const [isExpanded, setIsExpanded] = useState(false);\n-        \n-        return (\n-            <div className=\"issue-card\">\n-                <div \n-                    className=\"issue-header\"\n-                    onClick={() => setIsExpanded(!isExpanded)}\n-                >\n-                    <div className=\"issue-header-content\">\n-                        <div className=\"issue-info\">\n-                            <div className=\"issue-badges\">\n-                                <span className={`severity-badge ${getSeverityClass(issue.severity)}`}>\n-                                    {getSeverityIcon(issue.severity)}\n-                                    {issue.severity}\n-                                </span>\n-                                <span className=\"confidence-badge\">\n-                                    <FileText className=\"confidence-icon\" />\n-                                    {issue.confidence} Confidence\n-                                </span>\n-                            </div>\n-                            <h3 className=\"issue-title\">{issue.title}</h3>\n-                            <div className=\"issue-details\">\n-                                <span className=\"issue-file\">\n-                                    <Code className=\"file-icon\" />\n-                                    {issue.file?.split('\\\\').pop() || 'Unknown file'}\n-                                </span>\n-                                <span>Line {issue.line}</span>\n-                            </div>\n-                        </div>\n-                        <div className=\"chevron-icon\">\n-                            {isExpanded ? <ChevronUp /> : <ChevronDown />}\n-                        </div>\n-                    </div>\n-                </div>\n-                \n-                {isExpanded && (\n-                    <div className=\"issue-expanded\">\n-                        <div className=\"suggestion-section\">\n-                            <h4 className=\"suggestion-title\">\n-                                <Lightbulb className=\"suggestion-icon\" />\n-                                AI Suggestion\n-                            </h4>\n-                            <div className=\"suggestion-content\">\n-                                {issue.suggestion}\n-                            </div>\n-                        </div>\n-                        <div className=\"full-path\">\n-                            Full path: {issue.file}\n-                        </div>\n-                    </div>\n-                )}\n-            </div>\n-        );\n-    };\n-\n-    return (\n-        <div className=\"scanner-container\">\n-            <div className=\"scanner-wrapper\">\n-                <div className=\"scanner-header\">\n-                    {/* <h2 className=\"scanner-title\">\n-                        <Shield className=\"scanner-title-icon\" />\n-                        Security Scanner\n-                    </h2> */}\n-                    \n-                    <div className=\"scanner-form\">\n-                        <input\n-                            className=\"scanner-input\"\n-                            placeholder=\"Paste public git repository URL\"\n-                            value={repolink}\n-                            onChange={(e) => setRepoLink(e.target.value)}\n-                        />\n-                        <button \n-                            onClick={scanrepo}\n-                            disabled={loading}\n-                            className=\"scanner-button\"\n-                        >\n-                            {loading ? <TerminalIcon/> : <Github/>}\n-                        </button>\n-                    </div>\n-\n-                    {loading && (\n-                        <div className=\"loading-indicator\">\n-                            <div className=\"loading-spinner\"></div>\n-                            <span>Scanning repository...</span>\n-                        </div>\n-                    )}\n-\n-                    {error && (\n-                        <div className=\"error-message\">\n-                            {error}\n-                        </div>\n-                    )}\n-                </div>\n-\n-                {scanResult && (\n-                    <div className=\"results-container\">\n-                        <div className=\"results-header\">\n-                            {/* <h3 className=\"results-title\">Scan Results</h3> */}\n-                            <div className=\"results-summary\">\n-                                <span className=\"results-count\">\n-                                    {issues.length} issue{issues.length !== 1 ? 's' : ''} found\n-                                </span>\n-                                <div className=\"severity-badges\">\n-                                    {['HIGH', 'MEDIUM', 'LOW'].map(severity => {\n-                                        const count = issues.filter(issue => issue.severity === severity).length;\n-                                        if (count > 0) {\n-                                            return (\n-                                                <span key={severity} className={`severity-badge ${getSeverityClass(severity)}`}>\n-                                                    {count} {severity}\n-                                                </span>\n-                                            );\n-                                        }\n-                                        return null;\n-                                    })}\n-                                </div>\n-                            </div>\n-                        </div>\n-                        \n-                        {issues.length > 0 ? (\n-                            <div>\n-                                {issues.map((issue, index) => (\n-                                    <IssueCard key={index} issue={issue} index={index} />\n-                                ))}\n-                            </div>\n-                        ) : (\n-                            <div className=\"no-issues\">\n-                                <Shield className=\"no-issues-icon\" />\n-                                <p className=\"no-issues-title\">No security issues found!</p>\n-                                <p className=\"no-issues-subtitle\">Your repository appears to be secure.</p>\n-                            </div>\n-                        )}\n-                    </div>\n-                )}\n-            </div>\n-        </div>\n-    );\n-};\n-\n-export default ScannerBoard;\n\\ No newline at end of file\n@@ -1,51 +0,0 @@\n-import \"./subcta.css\";\n-import { LuArrowUpRight } from \"react-icons/lu\";\n-\n-export default function SubGithubCTA() {\n-  const codeString = `\n-const companies = await expand({\n-  const dataset = await expand.dataset({\n-    sources: ['https://www.ycombinator.com/companies'],\n-    schema: Model('Company', {\n-      name: Expand.String,\n-      batch: Expand.String,\n-      url: Expand.String,\n-      industry: Expand.String,\n-    }),\n-    name: 'yc-companies-db',\n-  })\n-  \n-  const companies = await db.findMany('Company')\n-  `;\n-\n-  // Basic syntax highlighting\n-  const highlightedCode = codeString\n-    .replace(/(const|await|new|return)/g, '<span class=\"code-keyword\">$1</span>')\n-    .replace(/(['\"].*?['\"])/g, '<span class=\"code-string\">$1</span>')\n-    .replace(/(\\/\\/.*?$)/gm, '<span class=\"code-comment\">$1</span>');\n-\n-  return (\n-    <div className=\"subcta-container\">\n-      <div className=\"subcta-content\">\n-        <div className=\"subcta-text\">\n-          <h2>02</h2>\n-          <p>\n-            {/* Just one more line and we start syncing the result into a dataset.\n-            You can export this to wherever you need it - be it S3, Postgres,\n-            or Google Sheets. */}\n-Combines static analysis (SAST), dependency analysis, and AI-powered code reasoning to surface vulnerabilities across multiple layers of your application. Works seamlessly with modern CI/CD systems          </p>\n-          <button className=\"subcta-btn\">\n-            <LuArrowUpRight size={14} color=\"#e27e8a\" />\n-            Get Custom Documentation\n-          </button>\n-        </div>\n-\n-        <div className=\"subcta-code\">\n-          <pre>\n-            <code dangerouslySetInnerHTML={{ __html: highlightedCode }} />\n-          </pre>\n-        </div>\n-      </div>\n-    </div>\n-  );\n-}\n@@ -1,118 +0,0 @@\n-.subcta-container {\n-  padding: 3rem 1rem;\n-  background-color: var(--background-color);\n-  background-image: var(--background-image);\n-\n-\n-}\n-\n-.subcta-content {\n-  display: flex;\n-  flex-direction: column;\n-  gap: 2rem;\n-  max-width: 90%;\n-  margin: 0 auto;\n-}\n-\n-.subcta-text h2 {\n-  font-size: 3rem;\n-  color: var(--primary-color);\n-  margin-bottom: 1rem;\n-}\n-\n-.subcta-text p {\n-  font-size: 1.2rem;\n-  color: var(--text-color);\n-  margin-bottom: 1.5rem;\n-  line-height: 1.5;\n-  /* padding: 20px; */\n-}\n-\n-.subcta-btn {\n-  background-color: var(--terminal-bg);\n-  color: var(--output-color);\n-  border: 1px solid #435156;\n-  padding: 0.75rem 1.5rem;\n-  font-size: 1rem;\n-  border-radius: 10px;\n-  cursor: pointer;\n-  display: inline-flex;\n-  align-items: center;\n-  gap: 0.5rem;\n-  transition: all 0.3s ease;\n-}\n-\n-.subcta-btn:hover {\n-  background-color: var(--primary-color);\n-  color: #fff;\n-}\n-.subcta-code{\n-  display: flex;\n-  align-items: center;\n-  justify-content: center;\n-}\n-\n-\n-.subcta-code pre {\n-  background-color: var(--terminal-bg);\n-  color: var(--text-color);\n-  border-radius: 8px;\n-  padding: 0.75rem 1rem;\n-  font-size: 0.85rem;\n-  overflow-x: auto;\n-  overflow-y: hidden;\n-  max-height: 300px;\n-  max-width: 400px;\n-  min-width: 200px;\n-  line-height: 1.4;\n-  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n-  border: 1px solid rgba(255, 255, 255, 0.08);\n-  transition: box-shadow 0.3s ease;\n-scrollbar-width: none; \n--ms-overflow-style: none; \n-\n-}\n-\n-.subcta-code pre::-webkit-scrollbar {\n-  display: none;\n-}\n-\n-\n-.subcta-code pre:hover {\n-  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25);\n-}\n-\n-.code-keyword {\n-  color: #c586c0;\n-  font-weight: 600;\n-}\n-\n-.code-string {\n-  color: #ce9178;\n-}\n-\n-.code-comment {\n-  color: #6a9955;\n-}\n-\n-/* Responsive layout */\n-@media (min-width: 768px) {\n-  .subcta-content {\n-    flex-direction: row-reverse;\n-    align-items: center;\n-    padding: 20px;\n-  }\n-\n-  .subcta-text, .subcta-code {\n-    flex: 1;\n-  }\n-\n-  .subcta-text  {\n-\n-}\n-\n-  .subcta-code pre {\n-    height: auto;\n-    \n-  }\n-}\n@@ -1,24 +0,0 @@\n-\"use client\";\n-import { useEffect, useState } from \"react\";\n-import \"./toggle.css\";  // <-- import the css file\n-\n-export default function ThemeToggle() {\n-  const [theme, setTheme] = useState(\"light\");\n-\n-  useEffect(() => {\n-    document.documentElement.setAttribute(\"data-theme\", theme);\n-  }, [theme]);\n-\n-  const toggleTheme = () => {\n-    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n-  };\n-\n-  return (\n-    <div className=\"switch-container\" onClick={toggleTheme} style={{ position: 'fixed', top: 20, right: 20 }}>\n-      <div className={`switch ${theme === \"light\" ? 'off' : 'on'}`}>\n-        <div className=\"switch-lever\" />\n-      </div>\n-      <div className=\"status-text\">{theme === \"light\" ? \"Light\" : \"Dark\"}</div>\n-    </div>\n-  );\n-}\n@@ -1,47 +0,0 @@\n-.switch-container {\n-  display: flex;\n-  flex-direction: column;\n-  align-items: center;\n-  cursor: pointer;\n-  user-select: none;\n-  position: fixed;\n-  top: 0;\n-\n-}\n-\n-.switch {\n-  width: 20px;\n-  height: 40px;\n-  background: #ddd;\n-  border: 2px solid #aaa;\n-  border-radius: 8px;\n-  position: relative;\n-  box-shadow: inset 0 0 10px rgba(0,0,0,0.2);\n-  transition: background 0.3s;\n-}\n-\n-.switch-lever {\n-  width: 10px;\n-  height: 10px;\n-  background: var(--primary-color);\n-  border: 2px solid #aaa;\n-  border-radius: 50%;\n-  position: absolute;\n-  left: 50%;\n-  transform: translateX(-50%);\n-  transition: top 0.3s, box-shadow 0.3s;\n-  box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n-}\n-\n-.switch.on .switch-lever {\n-  top: 10px;\n-}\n-\n-.switch.off .switch-lever {\n-  top: 20px;\n-}\n-\n-.status-text{\n-  color: transparent;\n-}\n-\n",
    "embedding": [
      -0.06706010550260544,
      -0.005716143641620874,
      -0.03610888496041298,
      -0.10572411119937897,
      0.05822550132870674,
      0.004674767609685659,
      -0.10450556129217148,
      0.007679500617086887,
      0.030831720679998398,
      0.03039839118719101,
      0.015343904495239258,
      0.003792679635807872,
      0.02559274062514305,
      0.05168572813272476,
      0.012332594022154808,
      -0.0017485558055341244,
      0.027946317568421364,
      0.027547558769583702,
      0.046387311071157455,
      -0.045063503086566925,
      0.03726285323500633,
      0.051398880779743195,
      0.11737582832574844,
      0.005341026466339827,
      -0.053379278630018234,
      -0.0181257501244545,
      -0.05661030113697052,
      0.01005545537918806,
      -0.050289928913116455,
      0.02022649720311165,
      -0.006428969092667103,
      -0.025201115757226944,
      -0.1632096916437149,
      -0.002236677333712578,
      -0.048164866864681244,
      0.025683362036943436,
      -0.06549454480409622,
      0.049187980592250824,
      -0.0032889351714402437,
      -0.018637031316757202,
      -0.00232867943122983,
      -0.0017614273820072412,
      -0.09240571409463882,
      0.011552524752914906,
      0.0081062912940979,
      -0.11343540996313095,
      -0.09262313693761826,
      -0.08011647313833237,
      -0.038404617458581924,
      0.015789495781064034,
      -0.08792072534561157,
      -0.07934261858463287,
      0.030132727697491646,
      -0.06819882243871689,
      -0.10169646888971329,
      0.015558783896267414,
      0.03020702488720417,
      -0.017621245235204697,
      0.002051418647170067,
      0.08324521780014038,
      0.12842188775539398,
      -0.03981627896428108,
      0.02929643914103508,
      0.02355184406042099,
      -0.020098982378840446,
      0.04746289923787117,
      -0.06639735400676727,
      0.09379953145980835,
      0.03921603038907051,
      -0.04850098863244057,
      0.06417759507894516,
      0.008157175034284592,
      0.022571982815861702,
      -0.08979816734790802,
      -0.051589205861091614,
      -0.05753646045923233,
      0.07027071714401245,
      0.08831951022148132,
      0.0465037003159523,
      -0.05128950625658035,
      -0.018103864043951035,
      -0.043161094188690186,
      -0.043893828988075256,
      0.0945742055773735,
      -0.03784075751900673,
      -0.056580912321805954,
      0.012460614554584026,
      0.02064674347639084,
      0.024160068482160568,
      0.019672855734825134,
      0.026891382411122322,
      -0.06430172920227051,
      -0.06519654393196106,
      0.06945965439081192,
      -0.009544468484818935,
      0.054738324135541916,
      -0.03588244691491127,
      0.006769684609025717,
      -0.01557866483926773,
      -0.06841867417097092,
      0.010720549151301384,
      -0.10384532064199448,
      0.08246862143278122,
      -0.06921102106571198,
      0.024815374985337257,
      -0.016249680891633034,
      0.04163853079080582,
      -0.06270360946655273,
      0.016543403267860413,
      -0.01368413120508194,
      0.007327858358621597,
      0.06939197331666946,
      0.009507345035672188,
      -0.043394409120082855,
      -0.009010723792016506,
      0.028845500200986862,
      0.08702048659324646,
      -0.008752328343689442,
      0.11893941462039948,
      0.010020564310252666,
      0.06425243616104126,
      0.06620795279741287,
      -0.005474495235830545,
      -0.03495403006672859,
      0.1630903035402298,
      0.0035244051832705736,
      0.011182107031345367,
      2.432035134125185e-34,
      0.050071991980075836,
      0.017482241615653038,
      -0.04043157771229744,
      0.08569174259901047,
      0.009631210006773472,
      0.011181693524122238,
      0.05051039159297943,
      0.03730831667780876,
      -0.1302735060453415,
      0.022776953876018524,
      -0.033278390765190125,
      0.06312893331050873,
      -0.0175184216350317,
      0.03056502155959606,
      -0.048075396567583084,
      -0.1267015039920807,
      0.06627829372882843,
      -0.03621029853820801,
      0.027024220675230026,
      -0.026748357340693474,
      0.006397264543920755,
      0.007824650034308434,
      -0.024921173229813576,
      0.035334404557943344,
      0.019127095118165016,
      0.07376962155103683,
      0.042787861078977585,
      0.01020439900457859,
      -0.02123354934155941,
      0.030160699039697647,
      0.00018305038975086063,
      0.017784900963306427,
      -0.0009203754598274827,
      0.01536246296018362,
      0.027504315599799156,
      0.010556209832429886,
      -0.08494633436203003,
      0.03830891102552414,
      0.012318638153374195,
      -0.027012554928660393,
      0.12790334224700928,
      0.03469278663396835,
      -0.06789105385541916,
      -0.01474657654762268,
      -0.012118642218410969,
      -0.050283368676900864,
      0.03996998071670532,
      0.05871652066707611,
      0.10183011740446091,
      0.015550795942544937,
      -0.02866150066256523,
      -0.014877363108098507,
      -0.06630780547857285,
      0.06682884693145752,
      0.04040446877479553,
      -0.04046566039323807,
      -0.02694467268884182,
      -0.02422432042658329,
      0.0013442147755995393,
      -0.05983655899763107,
      -0.01524988655000925,
      0.014625759795308113,
      -0.062242746353149414,
      0.022977037355303764,
      -0.013314491137862206,
      -0.07914826273918152,
      -0.07237732410430908,
      -0.0316101498901844,
      0.002688335021957755,
      0.0186952855437994,
      0.010075042024254799,
      0.06813817471265793,
      0.027663804590702057,
      -0.03160162270069122,
      0.09773178398609161,
      -0.04356018453836441,
      -0.028020277619361877,
      0.0518762543797493,
      0.06109467148780823,
      0.010322939604520798,
      -0.036937229335308075,
      0.018301375210285187,
      -0.10166113078594208,
      0.07530221343040466,
      0.07608716189861298,
      -0.0008005190175026655,
      0.05018765851855278,
      0.01717078499495983,
      -0.02768416702747345,
      0.048730045557022095,
      0.03043932467699051,
      -0.03036140650510788,
      0.024550192058086395,
      0.051810167729854584,
      -0.00583286676555872,
      -1.890271506926034e-33,
      -0.004585995804518461,
      -0.040672749280929565,
      0.01923169195652008,
      0.052052922546863556,
      0.015878479927778244,
      -0.0674533098936081,
      -0.0060825590044260025,
      0.017933301627635956,
      0.03710171952843666,
      0.0022912209387868643,
      -0.01932341605424881,
      0.01974646747112274,
      0.0907479077577591,
      -0.03657868504524231,
      -0.038627564907073975,
      0.03007509931921959,
      0.024739179760217667,
      -0.041226670145988464,
      0.15396691858768463,
      -0.06843890994787216,
      0.0030584277119487524,
      0.05164108797907829,
      -0.03012983314692974,
      0.02208307571709156,
      0.047567810863256454,
      -0.0374501496553421,
      0.08174644410610199,
      0.032045550644397736,
      -0.08829174190759659,
      -0.023577407002449036,
      0.013870581053197384,
      -0.051906779408454895,
      0.0018206383101642132,
      0.07585272192955017,
      -0.008001293055713177,
      0.006121758371591568,
      0.0398380383849144,
      0.004851432982832193,
      0.039803896099328995,
      -0.032620739191770554,
      0.058136578649282455,
      -0.057424433529376984,
      -0.026067327708005905,
      -0.028429431840777397,
      -0.07513516396284103,
      0.032377470284700394,
      -0.0638604611158371,
      0.034816935658454895,
      0.017015591263771057,
      -0.03576425090432167,
      0.03179088234901428,
      -0.034633781760931015,
      -0.05872860923409462,
      -0.031839776784181595,
      0.003989438060671091,
      -0.008258254267275333,
      -0.03297635167837143,
      0.005549102555960417,
      -0.03153292462229729,
      0.03783414885401726,
      0.027779240161180496,
      -0.08516932278871536,
      0.09746863692998886,
      -0.11579728126525879,
      -0.05217735469341278,
      0.014334730803966522,
      -0.14467856287956238,
      0.08989202976226807,
      0.004333282820880413,
      0.014835134148597717,
      -0.040256429463624954,
      0.03330440819263458,
      -0.013474412262439728,
      0.01207005325704813,
      -0.021533632650971413,
      -0.09637998044490814,
      0.05477123707532883,
      -0.06290438771247864,
      0.07611929625272751,
      -0.03578965738415718,
      -0.023204773664474487,
      0.06618774682283401,
      -0.018808765336871147,
      -0.017925933003425598,
      0.017082227393984795,
      0.031946081668138504,
      0.04092758521437645,
      0.019902760162949562,
      -0.03778796270489693,
      0.011804929003119469,
      0.0013872713316231966,
      0.04358574002981186,
      -0.017766771838068962,
      0.005844056606292725,
      0.06761020421981812,
      -5.330994312657822e-08,
      -0.019517112523317337,
      0.06956488639116287,
      -0.05776110291481018,
      -0.03761792555451393,
      -0.019919482991099358,
      0.02904808335006237,
      0.05032210797071457,
      0.05067793279886246,
      0.037922777235507965,
      0.041890088468790054,
      0.030570192262530327,
      0.07052405178546906,
      0.08307633548974991,
      0.05816200375556946,
      -0.07400238513946533,
      0.05223049968481064,
      0.013174018822610378,
      -0.02433115988969803,
      0.0063431644812226295,
      -0.05507462099194527,
      -0.01734684221446514,
      0.00977294985204935,
      -0.03691054880619049,
      -0.01754259504377842,
      -0.014060002751648426,
      0.012120717205107212,
      -0.0003224991087336093,
      -0.10326707363128662,
      0.05540981516242027,
      -0.09954249113798141,
      -0.08184169977903366,
      -0.03538135066628456,
      -0.029588112607598305,
      0.023737872019410133,
      -0.06064962223172188,
      0.01134485937654972,
      -0.02144414186477661,
      -0.009156322106719017,
      0.11441156268119812,
      0.04255066439509392,
      -0.020344331860542297,
      -0.00938525889068842,
      -0.022273583337664604,
      0.041052576154470444,
      -0.11744102090597153,
      -0.09853514283895493,
      -0.03613744303584099,
      -0.04934678599238396,
      -0.010823816992342472,
      -0.009929501451551914,
      0.048764172941446304,
      -0.05490952357649803,
      -0.016451619565486908,
      0.015717746689915657,
      0.0645630955696106,
      0.030984124168753624,
      0.016769791021943092,
      -4.524148243945092e-05,
      0.021176250651478767,
      0.05214401334524155,
      0.01043971348553896,
      -0.016488851979374886,
      0.006750571541488171,
      0.004211659077554941
    ]
  },
  {
    "hash": "6ad5ccc3f223e7425e5523d7b5d71eedec45c3f6",
    "author": "yemi-protip",
    "email": "yemi.ojedapo@protip.in",
    "date": "2025-05-16T11:52:28+01:00",
    "message": "Initial commit from Create Next App",
    "diff": "",
    "embedding": [
      -0.04941333085298538,
      -0.05300198122859001,
      -0.04718741029500961,
      -0.012652412988245487,
      -0.016753673553466797,
      -0.008024552837014198,
      -0.01964510977268219,
      0.01350152026861906,
      0.08393790572881699,
      0.10885889083147049,
      0.07951664924621582,
      -0.06966619193553925,
      0.03871239721775055,
      -0.004071538336575031,
      -0.023508599027991295,
      -0.002989786909893155,
      -0.012625149451196194,
      -0.057194195687770844,
      0.0066042267717421055,
      0.00474343728274107,
      0.014066984876990318,
      0.03469400107860565,
      0.0877237468957901,
      0.088483065366745,
      0.11077239364385605,
      -0.06723891198635101,
      0.027953969314694405,
      0.05072609707713127,
      0.07818826287984848,
      0.03709889575839043,
      0.10295969247817993,
      0.0071401516906917095,
      -0.013474873267114162,
      0.03945072740316391,
      -0.01019891444593668,
      0.035521116107702255,
      -0.021160932257771492,
      -0.007836468517780304,
      -0.012838149443268776,
      -0.05992534011602402,
      0.037668291479349136,
      0.03617974370718002,
      -0.04087064415216446,
      0.07125313580036163,
      -0.01818966493010521,
      -0.04967227205634117,
      -0.002968138549476862,
      0.03380275145173073,
      0.008861826732754707,
      0.02075665444135666,
      0.008414911106228828,
      -0.03624175861477852,
      -0.009591191075742245,
      -0.0645473375916481,
      -0.03825825825333595,
      0.09279265999794006,
      0.014478861354291439,
      0.017806442454457283,
      0.027865368872880936,
      0.0601888932287693,
      0.12427780777215958,
      0.023099586367607117,
      0.014121009968221188,
      -0.0045416997745633125,
      0.03005308471620083,
      0.050581902265548706,
      0.017803678289055824,
      0.02981630712747574,
      0.04594110697507858,
      -0.04939824342727661,
      0.002277213614434004,
      -0.013313494622707367,
      -0.04531918093562126,
      -0.12373895943164825,
      -0.05783914029598236,
      -0.05117956921458244,
      -0.04236533120274544,
      0.10085903853178024,
      -0.08672421425580978,
      -0.067540742456913,
      0.02247081883251667,
      -0.039129406213760376,
      -0.009741243906319141,
      0.031385939568281174,
      -0.083164744079113,
      -0.03740489110350609,
      0.08559945225715637,
      0.060902390629053116,
      0.06106996163725853,
      0.007207710295915604,
      -0.026536399498581886,
      0.0057344078086316586,
      0.035998716950416565,
      -0.07813192158937454,
      0.017776623368263245,
      -0.004940198268741369,
      -0.047737397253513336,
      -0.013313736766576767,
      -0.0174261387437582,
      -0.039135370403528214,
      0.04647686704993248,
      -0.008265100419521332,
      -0.03181234002113342,
      0.028621241450309753,
      0.09668897837400436,
      -0.006743527948856354,
      -0.0001339817827101797,
      -0.1521538496017456,
      -0.028667382895946503,
      0.09799503535032272,
      -0.03135299310088158,
      0.051695797592401505,
      0.06352705508470535,
      0.03182879462838173,
      0.029792817309498787,
      0.10648263245820999,
      -0.05436554178595543,
      0.012474853545427322,
      0.008101377636194229,
      0.06251464784145355,
      0.08417587727308273,
      0.0038446697872132063,
      -0.07211770117282867,
      -0.07943107187747955,
      -0.12619589269161224,
      -0.08358018845319748,
      0.0023359693586826324,
      -2.2910891829465176e-33,
      0.07746206223964691,
      -0.05560329928994179,
      -0.0227897297590971,
      0.08337423950433731,
      -0.03162843734025955,
      -0.006861445493996143,
      -0.006588658783584833,
      0.05462349206209183,
      -0.03320179879665375,
      -0.08734350651502609,
      -0.032147035002708435,
      -0.061763182282447815,
      -0.03700631111860275,
      0.036050811409950256,
      -0.09450892359018326,
      -0.03926082327961922,
      -0.02787831239402294,
      0.0061412593349814415,
      0.007645870558917522,
      0.04381505027413368,
      -0.051267124712467194,
      0.027624450623989105,
      -0.020465876907110214,
      -0.05433081090450287,
      0.05387325584888458,
      0.06395906209945679,
      -0.0003179865889251232,
      0.0034896493889391422,
      -0.07244345545768738,
      -0.012609886936843395,
      -0.03540607914328575,
      -0.01647733896970749,
      -0.04874199256300926,
      0.04151047021150589,
      -0.03052244894206524,
      0.014517296105623245,
      -0.004595411010086536,
      0.006787127815186977,
      0.01934901811182499,
      -0.0297988373786211,
      0.059385016560554504,
      0.04110000282526016,
      -0.06976944208145142,
      0.010893465019762516,
      -0.010728565976023674,
      -0.015571922063827515,
      0.020430199801921844,
      -0.01756794936954975,
      0.09379318356513977,
      0.026471208781003952,
      0.021760113537311554,
      0.019154882058501244,
      -0.01657821238040924,
      -0.0236510019749403,
      -0.07424310594797134,
      -0.017101570963859558,
      -0.03938496112823486,
      -0.08123660087585449,
      -0.05533605068922043,
      -0.09185115993022919,
      -0.026815567165613174,
      -0.028126010671257973,
      -0.1369749754667282,
      0.0494963712990284,
      -0.09028829634189606,
      0.05998137965798378,
      -0.006674709264189005,
      -0.031762778759002686,
      0.051415640860795975,
      0.010495569556951523,
      -0.08409973978996277,
      -0.028936507180333138,
      -0.052481651306152344,
      -0.022693241015076637,
      -0.0009634658345021307,
      0.03139312565326691,
      0.0015872027724981308,
      0.0607321672141552,
      -0.0658784881234169,
      -1.4836448826827109e-05,
      -0.023507338017225266,
      -0.0432916134595871,
      -0.14692583680152893,
      0.008141548372805119,
      0.0276610367000103,
      0.06732012331485748,
      0.08685702830553055,
      0.026399312540888786,
      -0.06637687236070633,
      0.07682912051677704,
      0.003613277105614543,
      0.062090374529361725,
      0.1005408987402916,
      0.021253839135169983,
      0.07120071351528168,
      -5.0524785946356624e-34,
      -0.018527232110500336,
      -0.04707024246454239,
      -0.010808836668729782,
      -0.03333716467022896,
      0.021222185343503952,
      -0.013974132016301155,
      -0.019441043958067894,
      -0.008872004225850105,
      0.02287112921476364,
      0.01635299064218998,
      -0.03548354282975197,
      -0.0007339130970649421,
      0.10134100168943405,
      0.013874753378331661,
      0.023616062477231026,
      -0.010766313411295414,
      0.034921132028102875,
      0.04633009433746338,
      0.054938461631536484,
      0.00827077403664589,
      0.05851220712065697,
      0.011862656101584435,
      0.028603367507457733,
      -0.052142396569252014,
      -0.003723721718415618,
      -0.018764758482575417,
      0.06363143771886826,
      0.01748083531856537,
      -0.06798182427883148,
      -0.07392539829015732,
      0.00599898723885417,
      -0.016526849940419197,
      -0.04026142880320549,
      0.013134751468896866,
      0.0059244148433208466,
      -0.05248182266950607,
      -0.0358133539557457,
      -0.022362161427736282,
      0.02060399204492569,
      0.011893592774868011,
      0.052962157875299454,
      -0.06129930168390274,
      0.01057096105068922,
      0.06427221745252609,
      -0.05230232700705528,
      -0.07115216553211212,
      0.02063763700425625,
      -0.01743551343679428,
      -0.008830486796796322,
      0.020834095776081085,
      0.02013431489467621,
      0.06777981668710709,
      0.014272606000304222,
      -0.0934440940618515,
      0.04630794748663902,
      0.05329620838165283,
      0.07213535159826279,
      0.01186046376824379,
      0.00836825929582119,
      -0.043383222073316574,
      0.01936022751033306,
      0.03546583279967308,
      0.05892651900649071,
      -0.014463425613939762,
      0.02411949820816517,
      -0.04762104153633118,
      -0.0019421835895627737,
      0.07517783343791962,
      -0.061723582446575165,
      0.08980023115873337,
      -0.017757661640644073,
      0.038220178335905075,
      -0.022959724068641663,
      -0.03710371255874634,
      -0.005085193086415529,
      -0.02576938271522522,
      -0.03432187810540199,
      -0.11110156774520874,
      -0.013873638585209846,
      -0.03456295281648636,
      -0.07620466500520706,
      0.11450488120317459,
      0.00591284828260541,
      -0.05505610629916191,
      0.030126819387078285,
      -0.10802224278450012,
      -0.032049935311079025,
      -0.0020166297908872366,
      -0.0033024209551513195,
      0.05280708894133568,
      -0.09007607400417328,
      0.04697256162762642,
      0.006150954402983189,
      -0.03893810138106346,
      -0.08291961997747421,
      -1.4017739857763445e-08,
      -0.03985253721475601,
      0.038592636585235596,
      -0.0736832320690155,
      0.053517941385507584,
      0.03449046611785889,
      -0.03659260645508766,
      -0.08606145530939102,
      0.02106129191815853,
      0.059382956475019455,
      -0.06811646372079849,
      -0.12109903991222382,
      0.058975949883461,
      -0.023239413276314735,
      0.07270257920026779,
      -0.0721210315823555,
      -0.04437825828790665,
      0.06868138909339905,
      -0.08352091163396835,
      -0.011330647394061089,
      -0.049229126423597336,
      -0.02779391221702099,
      0.03191307187080383,
      0.009944329969584942,
      -0.00348716601729393,
      -0.012049303390085697,
      0.0455772802233696,
      0.11272278428077698,
      0.05151533707976341,
      -0.01704968884587288,
      0.04442044347524643,
      0.07568062841892242,
      0.0004653107898775488,
      0.021887293085455894,
      0.014359496533870697,
      -0.051963746547698975,
      0.024826128035783768,
      0.07204536348581314,
      0.05999686196446419,
      0.09562934190034866,
      -0.06479275971651077,
      -0.001970036420971155,
      0.02188543789088726,
      0.02886885590851307,
      -0.015644943341612816,
      -0.1045394092798233,
      0.008983380161225796,
      0.0009766152361407876,
      -0.043217774480581284,
      0.055936530232429504,
      -0.036308273673057556,
      -0.058778803795576096,
      -0.002999599790200591,
      0.03116641193628311,
      0.002304150490090251,
      0.07548214495182037,
      0.06840542703866959,
      0.03285305202007294,
      -0.02103130891919136,
      0.09618981182575226,
      -0.008912541903555393,
      0.02368386648595333,
      -6.119080353528261e-05,
      0.05217595025897026,
      0.015279057435691357
    ]
  }
]